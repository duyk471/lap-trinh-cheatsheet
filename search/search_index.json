{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"L\u1eadp tr\u00ecnh Cheatsheet","text":"<p>T\u1ed5ng h\u1ee3p r\u1ea5t nhi\u1ec1u c\u00e1c ki\u1ebfn th\u1ee9c m\u00e0 m\u00ecnh \u0111\u00e3 h\u1ecdc \u0111\u01b0\u1ee3c trong th\u1eddi gian h\u1ecdc l\u1eadp tr\u00ecnh.</p>"},{"location":"cli/cac-ung-dung-khac/","title":"C\u00e1c \u1ee9ng d\u1ee5ng CLI kh\u00e1c","text":""},{"location":"cli/cac-ung-dung-khac/#papeer","title":"Papeer","text":"<pre><code>papeer get [n\u00e9m link b\u00e0i vi\u1ebft v\u00e0o \u0111\u00e2y]\n</code></pre>"},{"location":"cli/cac-ung-dung-khac/#chuyen-oi-inh-dang-msoffice-sang-pdf-docx-pptx-xlsx","title":"Chuy\u1ec3n \u0111\u1ed5i \u0111\u1ecbnh d\u1ea1ng MSOFFICE sang PDF (DOCX, PPTX, XLSX....)","text":"<p>Ph\u1ea3i t\u1ea3i LibreOffice</p> <p>Chuy\u1ec3n to\u00e0n b\u1ed9 t\u1ec7p <code>.pptx</code> th\u00e0nh <code>.pdf</code>:</p> <pre><code>lowriter --headless --convert-to pdf *.pptx\n</code></pre>"},{"location":"cli/pandoc/","title":"T\u1ed5ng h\u1ee3p Pandoc","text":"<p>Pandoc \u0111\u1ec3 chuy\u1ec3n \u0111\u1ed5i t\u1ec7p. H\u1ebft....</p>"},{"location":"cli/pandoc/#markdown-epub","title":"Markdown -&gt; EPUB","text":"<pre><code>pandoc output.md -o output.epub --metadata title=\"Book Title\"\n</code></pre>"},{"location":"cli/pandoc/#docx-pdf","title":"DOCX -&gt; PDF","text":"<pre><code>pandoc -i file.docx -o file.pdf\n</code></pre> <p>\u0110\u1ec3 chuy\u1ec3n sang PDF th\u00ec c\u1ea7n c\u00f3 <code>pdf-latex</code> g\u00ec \u0111\u00f3 n\u00ean m\u00ecnh g\u1ee3i \u00fd t\u1ea3i LibreOffice.</p>"},{"location":"cli/yt-dlp/","title":"M\u1ed9t s\u1ed1 c\u00e2u l\u1ec7nh t\u1ea3i video hay b\u1eb1ng <code>yt-dlp</code>","text":""},{"location":"cli/yt-dlp/#chinh-sua-ten-tep-output","title":"Ch\u1ec9nh s\u1eeda t\u00ean t\u1ec7p (Output)","text":"<p>Khi t\u1ea3i video Youtube ch\u1eb3ng h\u1ea1n, th\u01b0\u1eddng th\u00ec n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 ki\u1ec3u <code>Ti\u00eau \u0111\u1ec1 video [id c\u1ee7a video].webm</code> ch\u1eb3ng h\u1ea1n. N\u00f3 kh\u00e1 l\u00e0 kh\u00f3 ch\u1ecbu =)) (\u00cdt nh\u1ea5t v\u1edbi m\u00ecnh).</p> <p><pre><code>yt-dlp -o \"%(title)s.%(ext)s\" [link \u1edf \u0111\u00e2y]\n</code></pre> Th\u01b0\u1eddng l\u00e0 m\u00ecnh \u0111\u1ec3 m\u1eb7c \u0111\u1ecbnh th\u1ebf n\u00e0y, ch\u1ec9 c\u00f3 ti\u00eau \u0111\u1ec1 v\u1edbi \u0111u\u00f4i t\u1ec7p th\u00f4i.</p>"},{"location":"cli/yt-dlp/#tai-ca-cai-podcast","title":"T\u1ea3i c\u1ea3 c\u00e1i Podcast","text":"<p>L\u00ean tr\u00ean Podcastindex.org v\u00e0 t\u00ecm Podcast b\u1ea1n mu\u1ed1n t\u1ea3i. V\u00ed d\u1ee5 m\u00ecnh s\u1ebd t\u1ea3i Podcast c\u00f3 \u0111\u01b0\u1eddng d\u1eabn l\u00e0 https://podcastindex.org/podcast/366334.</p> <p>B\u1ea1n ch\u1ec9 c\u1ea7n b\u1ea5m Copy RSS r\u1ed3i n\u00e9m v\u00e0o trong <code>yt-dlp</code> l\u00e0 xong:</p> <pre><code>yt-dlp https://feeds.simplecast.com/dfh_verV\n</code></pre> <p>R\u1ed3i n\u00f3 s\u1ebd t\u1ea3i to\u00e0n b\u1ed9 cho b\u1ea1n.</p>"},{"location":"cli/yt-dlp/#danh-sach-cac-lenh-tong-hop","title":"Danh s\u00e1ch c\u00e1c l\u1ec7nh t\u1ed5ng h\u1ee3p","text":"<p>T\u1ea3i m\u1ed9t danh s\u00e1ch ph\u00e1t tr\u00ean Youtube, \u0111\u1ed9 ph\u00e2n gi\u1ea3i 480p, c\u00f3 ph\u1ee5 \u0111\u1ec1 Ti\u1ebfng Anh v\u1edbi Output t\u00ean \u0111\u1eb9p \u0111\u1eb9p x\u00edu.</p> <pre><code>yt-dlp -S res:480 --write-subs --write-auto-subs --sub-lang=en --convert-subs=srt -o \"%(title)s.%(ext)s\" [Cho link \u1edf \u0111\u00e2y]\n</code></pre> <p>Gi\u1ea3i th\u00edch th\u00eam:</p> <ul> <li><code>-S res:480</code>: \u0110\u1ed9 ph\u00e2n gi\u1ea3i 480p.</li> <li><code>--write-subs</code></li> <li><code>--write-auto-subs</code>: T\u1ea3i sub t\u1ef1 Youtube t\u1ea1o </li> <li><code>--sub-lang=en</code>: Ch\u1ecdn ng\u00f4n ng\u1eef ph\u1ee5 \u0111\u1ec1</li> <li><code>--convert-subs=srt</code>: Chuy\u1ec3n \u0111\u1ed5i sang \u0111\u1ecbnh d\u1ea1ng <code>.srt</code>, m\u1eb7c \u0111\u1ecbnh <code>yt-dlp</code> s\u1ebd d\u00f9ng <code>.vtt</code></li> <li><code>-o \"%(title)s.%(ext)s\"</code> - T\u00ean t\u1ec7p \u0111\u1eb9p</li> </ul>"},{"location":"html-css/co-ban/","title":"H\u01b0\u1edbng d\u1eabn h\u1ecdc HTML/CSS kh\u00e1 l\u00e0 nhanh","text":""},{"location":"html-css/co-ban/#phan-1-html","title":"Ph\u1ea7n 1: HTML","text":""},{"location":"html-css/co-ban/#html-css-la-gi","title":"HTML CSS l\u00e0 g\u00ec?","text":"<p>HTML (HyperText Markup Language) l\u00e0 ng\u00f4n ng\u1eef \u0111\u00e1nh d\u1ea5u c\u1ea5u tr\u00fac n\u1ed9i dung trang web, CSS (Cascading Style Sheets) l\u00e0 ng\u00f4n ng\u1eef t\u1ea1o ki\u1ec3u d\u00e1ng cho trang web. HTML t\u1ea1o b\u1ed9 khung, CSS trang tr\u00ed b\u1ed9 khung \u0111\u00f3.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;V\u00ed d\u1ee5 HTML &amp; CSS&lt;/title&gt;\n        &lt;style&gt;\n            body {\n                font-family: Arial, sans-serif;\n                color: #333;\n            }\n            h1 {\n                color: blue;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;\u0110\u00e2y l\u00e0 ti\u00eau \u0111\u1ec1&lt;/h1&gt;\n        &lt;p&gt;\u0110\u00e2y l\u00e0 \u0111o\u1ea1n v\u0103n b\u1ea3n.&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"html-css/co-ban/#can-hoc-cach-su-dung-dev-tools","title":"C\u1ea7n h\u1ecdc c\u00e1ch s\u1eed d\u1ee5ng Dev Tools","text":"<p>\u0110\u1ecdc/xem m\u1ed9t trong nh\u1eefng h\u01b0\u1edbng d\u1eabn d\u01b0\u1edbi \u0111\u00e2y</p> <ul> <li>Chrome DevTools - Crash Course</li> <li>A Detailed Guide to Chrome DevTools</li> <li>Chrome Developer Tools v\u00e0 C\u00e1ch S\u1eed D\u1ee5ng: H\u01b0\u1edbng D\u1eabn Chi Ti\u1ebft</li> </ul>"},{"location":"html-css/co-ban/#cai-at-moi-truong-cong-cu-can-thiet-e-bat-au-hoc-html-css","title":"C\u00e0i \u0111\u1eb7t m\u00f4i tr\u01b0\u1eddng, c\u00f4ng c\u1ee5 c\u1ea7n thi\u1ebft \u0111\u1ec3 b\u1eaft \u0111\u1ea7u h\u1ecdc HTML CSS","text":"<p>Theo ti\u00eau chu\u1ea9n l\u00e0 c\u00e0i \u0111\u1eb7t VSCode (Ho\u1eb7c VSCodium). R\u1ed3i b\u1ea1n t\u00ecm m\u1ee5c Extensions, t\u00ecm nh\u1eefng Addons c\u00f3 t\u1eeb kh\u00f3a HTML/CSS, JS v\u00e0 ch\u1ecdn b\u1eeba :smile: c\u1ed9ng v\u1edbi t\u1ea3i Live Server l\u00e0 xong.</p>"},{"location":"html-css/co-ban/#cau-truc-tep-html","title":"C\u1ea5u tr\u00fac t\u1ec7p HTML","text":"<p>File HTML c\u01a1 b\u1ea3n c\u00f3 c\u1ea5u tr\u00fac:</p> <ul> <li><code>&lt;!DOCTYPE html&gt;</code>: Khai b\u00e1o lo\u1ea1i t\u00e0i li\u1ec7u HTML5.</li> <li><code>&lt;html&gt;</code>: Th\u1ebb g\u1ed1c c\u1ee7a trang HTML.</li> <li><code>&lt;head&gt;</code>: Ch\u1ee9a meta th\u00f4ng tin (ti\u00eau \u0111\u1ec1, CSS, JavaScript...).</li> <li><code>&lt;body&gt;</code>: Ch\u1ee9a n\u1ed9i dung hi\u1ec3n th\u1ecb tr\u00ean trang web.</li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"vi\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Ti\u00eau \u0111\u1ec1 trang&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"html-css/co-ban/#comments-trong-html","title":"Comments trong HTML","text":"<p>Comment (ch\u00fa th\u00edch) trong HTML gi\u00fap ghi ch\u00fa, gi\u1ea3i th\u00edch code, ho\u1eb7c t\u1ea1m \u1ea9n code m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn hi\u1ec3n th\u1ecb.</p> <p>C\u00fa ph\u00e1p: <code>&lt;!--[\u0110o\u1ea1n n\u00e0y s\u1ebd l\u00e0 n\u01a1i vi\u1ebft v\u0103n b\u1ea3n c\u1ea7n ch\u00fa tr\u00edch]--&gt;</code></p> <pre><code>&lt;!--\u00d4i kh\u00f4ng b\u1ea7u tr\u1eddi m\u00e0u xanh!--&gt;\n&lt;p&gt;Ng\u01b0\u1eddi&lt;/p&gt;\n</code></pre>"},{"location":"html-css/co-ban/#nhung-the-html-thong-dung","title":"Nh\u1eefng th\u1ebb HTML th\u00f4ng d\u1ee5ng","text":"<p>HTML c\u00f3 nhi\u1ec1u th\u1ebb kh\u00e1c nhau, m\u1ed7i th\u1ebb c\u00f3 ch\u1ee9c n\u0103ng ri\u00eang \u0111\u1ec3 t\u1ea1o c\u1ea5u tr\u00fac v\u00e0 n\u1ed9i dung:</p> <ul> <li>Th\u1ebb ti\u00eau \u0111\u1ec1: <code>&lt;h1&gt;</code> - <code>&lt;h6&gt;</code> (quan tr\u1ecdng nh\u1ea5t l\u00e0 <code>&lt;h1&gt;</code>).</li> <li>Th\u1ebb \u0111o\u1ea1n v\u0103n: <code>&lt;p&gt;</code>.</li> <li>Th\u1ebb li\u00ean k\u1ebft: <code>&lt;a&gt;</code> (<code>href</code> attribute \u0111\u1ec3 ch\u1ec9 \u0111\u00edch \u0111\u1ebfn link).</li> <li>Th\u1ebb h\u00ecnh \u1ea3nh: <code>&lt;img&gt;</code> (<code>src</code> attribute \u0111\u1ec3 ch\u1ec9 \u0111\u01b0\u1eddng d\u1eabn \u1ea3nh, <code>alt</code> attribute cho text thay th\u1ebf).</li> <li>Th\u1ebb danh s\u00e1ch: <code>&lt;ul&gt;</code> (danh s\u00e1ch kh\u00f4ng th\u1ee9 t\u1ef1), <code>&lt;ol&gt;</code> (danh s\u00e1ch th\u1ee9 t\u1ef1), <code>&lt;li&gt;</code> (item trong danh s\u00e1ch).</li> <li>Th\u1ebb div v\u00e0 span: <code>&lt;div&gt;</code> (kh\u1ed1i), <code>&lt;span&gt;</code> (n\u1ed9i tuy\u1ebfn), d\u00f9ng \u0111\u1ec3 nh\u00f3m c\u00e1c ph\u1ea7n t\u1eed v\u00e0 style.</li> <li>Th\u1ebb form: <code>&lt;form&gt;</code>, <code>&lt;input&gt;</code>, <code>&lt;button&gt;</code>, <code>&lt;textarea&gt;</code>, <code>&lt;select&gt;</code>, <code>&lt;label&gt;</code>.</li> <li>Th\u1ebb table: <code>&lt;table&gt;</code>, <code>&lt;tr&gt;</code> (row), <code>&lt;th&gt;</code> (header cell), <code>&lt;td&gt;</code> (data cell).</li> </ul> <pre><code>&lt;h1&gt;Ti\u00eau \u0111\u1ec1 ch\u00ednh&lt;/h1&gt;\n&lt;p&gt;\u0110\u00e2y l\u00e0 m\u1ed9t \u0111o\u1ea1n v\u0103n b\u1ea3n.&lt;/p&gt;\n&lt;a href=\"https://example.com\"&gt;B\u1ea1n c\u00f3 mu\u1ed1n xem phim tr\u00ean phimmoi kh\u00f4ng?&lt;/a&gt;\n&lt;img src=\"image.jpg\" alt=\"\u1ea2nh minh h\u1ecda\"&gt;\n&lt;ul&gt;\n    &lt;li&gt;Item 1&lt;/li&gt;\n    &lt;li&gt;Item 2&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ol&gt;\n    &lt;li&gt;Item&lt;/li&gt;\n    &lt;li&gt;Item&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;div&gt;\n    &lt;p&gt;\u0110\u00e2y l\u00e0 m\u1ed9t div ch\u1ee9a \u0111o\u1ea1n v\u0103n. &lt;span&gt;Khoan \u0111\u00e3 c\u00e1i g\u00ec \u0111\u00e2y....&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"html-css/co-ban/#attributes-trong-html","title":"Attributes trong HTML","text":"<p>Attributes (thu\u1ed9c t\u00ednh) cung c\u1ea5p th\u00f4ng tin b\u1ed5 sung cho th\u1ebb HTML, gi\u00fap \u0111i\u1ec1u ch\u1ec9nh h\u00e0nh vi ho\u1eb7c hi\u1ec3n th\u1ecb c\u1ee7a th\u1ebb. C\u00fa ph\u00e1p: <code>attribute=\"value\"</code> (n\u1eb1m trong th\u1ebb m\u1edf).</p> <pre><code>&lt;a href=\"https://f8.edu.vn\" target=\"_blank\"&gt;Li\u00ean k\u1ebft F8 (m\u1edf tab m\u1edbi)&lt;/a&gt;\n&lt;img src=\"image.jpg\" alt=\"\u1ea2nh\" width=\"200\"&gt;\n&lt;div class=\"container\" id=\"main-content\"&gt;N\u1ed9i dung&lt;/div&gt;\n</code></pre>"},{"location":"html-css/co-ban/#phan-2-css","title":"Ph\u1ea7n 2: CSS","text":""},{"location":"html-css/co-ban/#cach-su-dung-css-trong-html","title":"C\u00e1ch s\u1eed d\u1ee5ng CSS trong HTML","text":"<p>C\u00f3 3 c\u00e1ch ch\u00ednh \u0111\u1ec3 s\u1eed d\u1ee5ng CSS trong HTML:</p> <ol> <li>Inline CSS: Vi\u1ebft tr\u1ef1c ti\u1ebfp trong thu\u1ed9c t\u00ednh <code>style</code> c\u1ee7a th\u1ebb HTML (\u01b0u ti\u00ean cao nh\u1ea5t, \u00edt d\u00f9ng v\u00ec kh\u00f3 qu\u1ea3n l\u00fd).</li> <li>Internal CSS: Vi\u1ebft trong th\u1ebb <code>&lt;style&gt;</code> trong <code>&lt;head&gt;</code> c\u1ee7a file HTML (d\u00f9ng cho style ri\u00eang c\u1ee7a trang).</li> <li>External CSS: Vi\u1ebft trong file CSS ri\u00eang (<code>.css</code>), li\u00ean k\u1ebft \u0111\u1ebfn HTML b\u1eb1ng th\u1ebb <code>&lt;link&gt;</code> trong <code>&lt;head&gt;</code> (t\u1ed1t nh\u1ea5t cho d\u1ef1 \u00e1n l\u1edbn, d\u1ec5 qu\u1ea3n l\u00fd, t\u00e1i s\u1eed d\u1ee5ng).</li> </ol> <p><code>index.html</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;V\u00ed d\u1ee5 External CSS&lt;/title&gt;\n        &lt;!--D\u00f9ng CSS t\u1eeb t\u1ec7p ngo\u00e0i nh\u01b0 n\u00e0y--&gt;\n        &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Ti\u00eau \u0111\u1ec1&lt;/h1&gt;\n        &lt;p&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n.&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>style.css</code>:</p> <pre><code>body {\n    font-family: Arial, sans-serif;\n}\nh1 {\n    color: red;\n}\n</code></pre>"},{"location":"html-css/co-ban/#id-va-class-trong-css-selectors","title":"ID v\u00e0 Class trong CSS selectors","text":"<p>CSS selectors (b\u1ed9 ch\u1ecdn) \u0111\u1ec3 ch\u1ecdn c\u00e1c ph\u1ea7n t\u1eed HTML \u0111\u1ec3 style. ID v\u00e0 Class l\u00e0 2 lo\u1ea1i selector quan tr\u1ecdng:</p> <ul> <li>ID selector: Ch\u1ecdn ph\u1ea7n t\u1eed HTML c\u00f3 <code>id</code> attribute t\u01b0\u01a1ng \u1ee9ng. B\u1eaft \u0111\u1ea7u b\u1eb1ng <code>#</code>. ID l\u00e0 duy nh\u1ea5t tr\u00ean trang.</li> <li>Class selector: Ch\u1ecdn c\u00e1c ph\u1ea7n t\u1eed HTML c\u00f3 <code>class</code> attribute t\u01b0\u01a1ng \u1ee9ng. B\u1eaft \u0111\u1ea7u b\u1eb1ng <code>.</code>. Class c\u00f3 th\u1ec3 d\u00f9ng cho nhi\u1ec1u ph\u1ea7n t\u1eed.</li> </ul> <p><code>index.html</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 ID v\u00e0 Class&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1 id=\"main-title\"&gt;Ti\u00eau \u0111\u1ec1 ch\u00ednh&lt;/h1&gt;\n    &lt;p class=\"paragraph\"&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n 1.&lt;/p&gt;\n    &lt;p class=\"paragraph special-text\"&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n 2 (class \u0111\u1eb7c bi\u1ec7t).&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>style.css</code>:</p> <pre><code>#main-title { /* ID selector */\n    color: green;\n    text-align: center;\n}\n.paragraph { /* Class selector */\n    font-size: 16px;\n    line-height: 1.5;\n}\n.special-text { /* Class selector cho class \"special-text\" */\n    font-weight: bold;\n}\n</code></pre>"},{"location":"html-css/co-ban/#muc-o-uu-tien-trong-css","title":"M\u1ee9c \u0111\u1ed9 \u01b0u ti\u00ean trong CSS","text":"<p>Khi c\u00f3 nhi\u1ec1u CSS rules c\u00f9ng style m\u1ed9t element b\u1ea5t k\u00ec, tr\u00ecnh duy\u1ec7t \u00e1p d\u1ee5ng m\u1ee9c \u0111\u1ed9 \u01b0u ti\u00ean \u0111\u1ec3 quy\u1ebft \u0111\u1ecbnh rule n\u00e0o \u0111\u01b0\u1ee3c d\u00f9ng:</p> <ol> <li>Inline CSS (cao nh\u1ea5t). Ki\u1ec3u nh\u01b0: <code>&lt;p style=\"color: pink;\"&gt;M\u00e0u h\u1ed3ng nh\u01b0 cu\u1ed9c s\u1ed1ng c\u1ee7a b\u1ea1n.&lt;/p&gt;</code></li> <li>ID selectors. Ki\u1ec3u <code>&lt;p id=\"viet-nam\"&gt;ID l\u00e0 \u0111\u1ed9c nh\u1ea5t&lt;/p&gt;</code></li> <li>Class selectors, attribute selectors, pseudo-classes. <code>&lt;p id=\"con-nguoi\"&gt;C\u00f3 kh\u00e1 nhi\u1ec1u ch\u1ee7ng t\u1ed9c, ch\u00fang t\u00f4i l\u00e0 Class Con ng\u01b0\u1eddi.&lt;/p&gt;</code></li> <li>Element selectors, pseudo-elements (th\u1ea5p nh\u1ea5t). Ki\u1ec3u trong CSS s\u1ebd ch\u1ecdn <code>p, h1</code> c\u00e1c th\u1ee9 thay v\u00ec <code>.con-nguoi, #viet-nam</code>.</li> <li>!important (c\u1ef1c cao, n\u00ean h\u1ea1n ch\u1ebf d\u00f9ng). Kh\u00f4ng d\u00f9ng n\u00ean kh\u00f4ng cho v\u00ed d\u1ee5.</li> </ol> <p><code>index.html</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;M\u1ee9c \u0111\u1ed9 \u01b0u ti\u00ean CSS&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p id=\"para-id\" class=\"para-class\" style=\"color: purple;\"&gt;\n        \u0110o\u1ea1n v\u0103n b\u1ea3n n\u00e0y c\u00f3 nhi\u1ec1u style.\n    &lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>style.css</code>:</p> <pre><code>p { /* Element selector (th\u1ea5p nh\u1ea5t) */\n    color: blue;\n}\n.para-class { /* Class selector */\n    color: orange;\n}\n#para-id { /* ID selector */\n    color: red;\n}\n</code></pre> <p>\u0110o\u1ea1n v\u0103n b\u1ea3n s\u1ebd c\u00f3 m\u00e0u t\u00edm (inline CSS \u01b0u ti\u00ean nh\u1ea5t). N\u1ebfu b\u1ecf inline style, s\u1ebd c\u00f3 m\u00e0u \u0111\u1ecf (ID selector \u01b0u ti\u00ean h\u01a1n class v\u00e0 element).</p>"},{"location":"html-css/co-ban/#bien-trong-css-css-variable","title":"Bi\u1ebfn trong CSS (CSS Variable)","text":"<p>CSS Variables (bi\u1ebfn CSS) cho ph\u00e9p b\u1ea1n \u0111\u1ecbnh ngh\u0129a c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng trong CSS, gi\u00fap code d\u1ec5 b\u1ea3o tr\u00ec v\u00e0 t\u00f9y bi\u1ebfn.</p> <p>Khai b\u00e1o bi\u1ebfn: <code>--variable-name: value;</code> (khai b\u00e1o trong <code>:root</code> selector \u0111\u1ec3 global, ho\u1eb7c trong selector kh\u00e1c \u0111\u1ec3 local. \u0110\u1ecdc th\u00eam \u1edf v\u00ed d\u1ee5 d\u01b0\u1edbi). R\u1ed3i khi s\u1eed d\u1ee5ng bi\u1ebfn th\u00ec l\u00e0 <code>var(--variable-name)</code></p> <pre><code>:root { /* Global variables */\n    --primary-color: blue;\n    --font-size-large: 20px;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    color: var(--primary-color); /* S\u1eed d\u1ee5ng bi\u1ebfn */\n}\n\nh1 {\n    color: var(--primary-color);\n    font-size: var(--font-size-large);\n}\n</code></pre>"},{"location":"html-css/co-ban/#css-units-la-gi","title":"CSS Units l\u00e0 g\u00ec?","text":"<p>CSS Units (\u0111\u01a1n v\u1ecb CSS) x\u00e1c \u0111\u1ecbnh k\u00edch th\u01b0\u1edbc, kho\u1ea3ng c\u00e1ch, \u0111\u1ed9 d\u00e0i... trong CSS. C\u00f3 2 lo\u1ea1i ch\u00ednh:</p> <p>Absolute units: C\u1ed1 \u0111\u1ecbnh, kh\u00f4ng thay \u0111\u1ed5i theo m\u00f4i tr\u01b0\u1eddng (px, cm, mm, in, pt, pc). <code>px</code> (pixel) ph\u1ed5 bi\u1ebfn nh\u1ea5t cho web.</p> <p>Relative units: T\u01b0\u01a1ng \u0111\u1ed1i, thay \u0111\u1ed5i theo m\u00f4i tr\u01b0\u1eddng (%, em, rem, vw, vh).</p> <ul> <li><code>%</code>: Ph\u1ea7n tr\u0103m so v\u1edbi ph\u1ea7n t\u1eed cha.</li> <li><code>em</code>: T\u01b0\u01a1ng \u0111\u1ed1i v\u1edbi <code>font-size</code> c\u1ee7a ph\u1ea7n t\u1eed cha.</li> <li><code>rem</code>: T\u01b0\u01a1ng \u0111\u1ed1i v\u1edbi <code>font-size</code> c\u1ee7a th\u1ebb g\u1ed1c <code>&lt;html&gt;</code>.</li> <li><code>vw</code>, <code>vh</code>: Ph\u1ea7n tr\u0103m chi\u1ec1u r\u1ed9ng, chi\u1ec1u cao viewport (c\u1eeda s\u1ed5 tr\u00ecnh duy\u1ec7t).</li> </ul> <p>(\u0110\u1ecdc cho\u00e1ng c\u00e1i \u0111\u1ea7u =D N\u00ean th\u00f4i c\u1ee9 \u0111\u1ecdc qua qua g\u00f2i xem c\u00e1i Video tr\u00ean Youtube nh\u00e9: )</p> <pre><code>body {\n    font-size: 16px; /* Pixel (absolute) */\n}\n\nh1 {\n    font-size: 2em; /* em (relative to body font-size) -&gt; 32px */\n}\n\ndiv {\n    width: 50%; /* % (relative to parent width) */\n    padding: 10px; /* Pixel (absolute) */\n}\n</code></pre>"},{"location":"html-css/co-ban/#box-model","title":"Box Model","text":"<p>X\u00e0m x\u00e0m ch\u00fat:</p> <p>The first important concept that you need to understand to be successful in CSS is the box model. It isn\u2019t complicated, but skipping over it now would cause you much frustration down the line.</p> <p>Every single thing on a webpage is a rectangular box. These boxes can have other boxes in them and can sit alongside one another. You can get a rough idea of how this works by applying an outline to every element on the page like this:</p> <p><pre><code>* {\n  outline: 2px solid red;\n}\n</code></pre> N\u00f3 s\u1ebd tr\u00f4ng th\u1ebf n\u00e0y:</p> <p></p>"},{"location":"html-css/co-ban/#padding-css","title":"Padding (CSS)","text":"<p><code>padding</code> t\u1ea1o kho\u1ea3ng tr\u1eafng b\u00ean trong vi\u1ec1n (c\u00e1i vi\u1ec1n \u1edf \u0111\u00e2y ch\u00ednh l\u00e0 c\u00e1i <code>border</code>) c\u1ee7a ph\u1ea7n t\u1eed, \u0111\u1ea9y n\u1ed9i dung ra xa vi\u1ec1n. C\u00f3 th\u1ec3 set <code>padding-top</code>, <code>padding-right</code>, <code>padding-bottom</code>, <code>padding-left</code> ho\u1eb7c <code>padding</code> shorthand (top right bottom left).</p> <p>B\u1ea1n c\u00f3 th\u1ec3 nh\u00ecn h\u00ecnh d\u01b0\u1edbi \u0111\u00e2y \u0111\u1ec3 th\u1ea5y m\u1ed1i t\u01b0\u01a1ng quan gi\u1eefa padding, border v\u00e0 margin:</p> <p></p> <ul> <li><code>padding</code> increases the space between the border of a box and the content of the box.</li> <li><code>border</code> adds space (even if it\u2019s only a pixel or two) between the margin and the padding.</li> <li><code>margin</code> increases the space between the borders of a box and the borders of adjacent boxes.</li> </ul> <p></p> <pre><code>div {\n    width: 200px;\n    height: 100px;\n    background-color: lightblue;\n    border: 1px solid black;\n    padding: 20px; /* Padding \u0111\u1ec1u 4 ph\u00eda 20px */\n}\n</code></pre> <p>C\u00f2n c\u00e1i padding shorthand th\u00ec \u0111\u01a1n gi\u1ea3n l\u00e0</p> <pre><code>.con-nguoi {\n    /* \u0110i theo h\u01b0\u1edbng: \n       top -&gt; right -&gt; bottom -&gt; left \n       \u0110i theo chi\u1ec1u kim \u0111\u1ed3ng h\u1ed3, b\u1eaft \u0111\u1ea7u t\u1eeb s\u1ed1 12 tr\u01b0\u1edbc =)), c\u00e1ch nh\u1edb \u0111\u00f3.\n    */\n    padding: 10px 5px   20px   30px;\n    /*\u0110\u00e2y:   top  right bottom  left*/\n}\n</code></pre>"},{"location":"html-css/co-ban/#border-css","title":"Border (CSS)","text":"<p><code>border</code> t\u1ea1o vi\u1ec1n xung quanh ph\u1ea7n t\u1eed. C\u00e1c thu\u1ed9c t\u00ednh:</p> <ul> <li><code>border-width</code>: \u0110\u1ed9 d\u00e0y vi\u1ec1n (px, em...).</li> <li><code>border-style</code>: Ki\u1ec3u vi\u1ec1n (solid, dashed, dotted, double...).</li> <li><code>border-color</code>: M\u00e0u vi\u1ec1n.</li> <li><code>border</code> shorthand: <code>border: width style color;</code></li> <li><code>border-radius</code>: Bo tr\u00f2n g\u00f3c vi\u1ec1n.</li> </ul> <pre><code>div {\n    width: 200px;\n    height: 100px;\n    background-color: lightblue;\n    /*      width style color*/\n    border: 5px   solid red; /* Vi\u1ec1n \u0111\u1ecf, d\u00e0y 5px, ki\u1ec3u solid */\n    border-radius: 10px; /* Bo tr\u00f2n g\u00f3c 10px */\n}\n</code></pre>"},{"location":"html-css/co-ban/#margin-css","title":"Margin (CSS)","text":"<p><code>margin</code> t\u1ea1o kho\u1ea3ng tr\u1eafng b\u00ean ngo\u00e0i vi\u1ec1n c\u1ee7a ph\u1ea7n t\u1eed, \u0111\u1ea9y ph\u1ea7n t\u1eed ra xa c\u00e1c ph\u1ea7n t\u1eed xung quanh. T\u01b0\u01a1ng t\u1ef1 padding, c\u00f3 <code>margin-top</code>, <code>margin-right</code>, <code>margin-bottom</code>, <code>margin-left</code> ho\u1eb7c <code>margin</code> shorthand.</p> <pre><code>div {\n    width: 200px;\n    height: 100px;\n    background-color: lightblue;\n    border: 1px solid black;\n    margin-bottom: 30px; /* Margin d\u01b0\u1edbi 30px, \u0111\u1ea9y ph\u1ea7n t\u1eed ti\u1ebfp theo xu\u1ed1ng */\n}\n</code></pre>"},{"location":"html-css/co-ban/#css-box-sizing","title":"CSS Box-sizing","text":"<p><code>box-sizing</code> quy\u1ebft \u0111\u1ecbnh c\u00e1ch t\u00ednh t\u1ed5ng k\u00edch th\u01b0\u1edbc c\u1ee7a ph\u1ea7n t\u1eed (width, height) khi c\u00f3 <code>padding</code> v\u00e0 <code>border</code>.</p> <ul> <li><code>content-box</code> (m\u1eb7c \u0111\u1ecbnh): <code>width</code> v\u00e0 <code>height</code> ch\u1ec9 t\u00ednh ph\u1ea7n n\u1ed9i dung, <code>padding</code> v\u00e0 <code>border</code> c\u1ed9ng th\u00eam v\u00e0o t\u1ed5ng k\u00edch th\u01b0\u1edbc.</li> <li><code>border-box</code>: <code>width</code> v\u00e0 <code>height</code> bao g\u1ed3m c\u1ea3 <code>padding</code> v\u00e0 <code>border</code>. Thu\u1eadn ti\u1ec7n h\u01a1n, d\u1ec5 ki\u1ec3m so\u00e1t k\u00edch th\u01b0\u1edbc ph\u1ea7n t\u1eed.</li> </ul> <pre><code>.content-box {\n    box-sizing: content-box; /* M\u1eb7c \u0111\u1ecbnh */\n    width: 200px;\n    padding: 20px;\n    border: 10px solid black;\n    /* T\u1ed5ng chi\u1ec1u r\u1ed9ng: 200px (width) + 20px*2 (padding) + 10px*2 (border) = 260px */\n}\n\n.border-box {\n    box-sizing: border-box;\n    width: 200px;\n    padding: 20px;\n    border: 10px solid black;\n    /* T\u1ed5ng chi\u1ec1u r\u1ed9ng: v\u1eabn l\u00e0 200px (width \u0111\u00e3 bao g\u1ed3m padding v\u00e0 border) */\n}\n</code></pre>"},{"location":"html-css/co-ban/#css-background-clip","title":"CSS Background-clip","text":"<p><code>background-clip</code> x\u00e1c \u0111\u1ecbnh v\u00f9ng m\u00e0 background (m\u00e0u, \u1ea3nh) s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3n th\u1ecb b\u00ean trong ph\u1ea7n t\u1eed.</p> <ul> <li><code>border-box</code> (m\u1eb7c \u0111\u1ecbnh): Background clip \u0111\u1ebfn m\u00e9p ngo\u00e0i c\u1ee7a vi\u1ec1n.</li> <li><code>padding-box</code>: Background clip \u0111\u1ebfn m\u00e9p ngo\u00e0i c\u1ee7a padding.</li> <li><code>content-box</code>: Background clip \u0111\u1ebfn m\u00e9p ngo\u00e0i c\u1ee7a content box.</li> <li><code>text</code>: Background clip theo h\u00ecnh d\u1ea1ng ch\u1eef (ch\u1ec9 \u00e1p d\u1ee5ng cho text).</li> </ul> <pre><code>div {\n    width: 200px;\n    height: 100px;\n    background-color: lightblue;\n    border: 20px dashed red;\n    padding: 20px;\n    background-clip: padding-box; /* Background ch\u1ec9 hi\u1ec3n th\u1ecb trong v\u00f9ng padding v\u00e0 content */\n}\n</code></pre>"},{"location":"html-css/co-ban/#css-background-image","title":"CSS background-image","text":"<p><code>background-image</code> \u0111\u1eb7t \u1ea3nh n\u1ec1n cho ph\u1ea7n t\u1eed. Gi\u00e1 tr\u1ecb l\u00e0 <code>url(\"path/to/image.jpg\")</code> ho\u1eb7c <code>linear-gradient()</code>, <code>radial-gradient()</code>...</p> <pre><code>div {\n    width: 300px;\n    height: 200px;\n    background-image: url(\"background.jpg\"); /* \u0110\u1eb7t \u1ea3nh n\u1ec1n */\n    background-size: cover; /* \u1ea2nh n\u1ec1n ph\u1ee7 k\u00edn div */\n    color: white; /* Ch\u1eef m\u00e0u tr\u1eafng \u0111\u1ec3 d\u1ec5 nh\u00ecn tr\u00ean n\u1ec1n \u1ea3nh */\n    text-align: center;\n    padding-top: 50px;\n}\n</code></pre>"},{"location":"html-css/co-ban/#thuoc-tinh-background-size","title":"Thu\u1ed9c t\u00ednh background-size","text":"<p><code>background-size</code> \u0111i\u1ec1u ch\u1ec9nh k\u00edch th\u01b0\u1edbc \u1ea3nh n\u1ec1n. C\u00e1c gi\u00e1 tr\u1ecb ph\u1ed5 bi\u1ebfn:</p> <ul> <li><code>auto</code> (m\u1eb7c \u0111\u1ecbnh): K\u00edch th\u01b0\u1edbc \u1ea3nh g\u1ed1c.</li> <li><code>cover</code>: \u1ea2nh n\u1ec1n ph\u1ee7 k\u00edn ph\u1ea7n t\u1eed, c\u00f3 th\u1ec3 b\u1ecb crop.</li> <li><code>contain</code>: \u1ea2nh n\u1ec1n v\u1eeba kh\u00edt trong ph\u1ea7n t\u1eed, c\u00f3 th\u1ec3 c\u00f3 kho\u1ea3ng tr\u1eafng xung quanh.</li> <li><code>px</code>, <code>%</code>: K\u00edch th\u01b0\u1edbc c\u1ee5 th\u1ec3 (px) ho\u1eb7c ph\u1ea7n tr\u0103m (%).</li> </ul> <pre><code>div {\n    width: 300px;\n    height: 200px;\n    background-image: url(\"background.jpg\");\n    background-size: cover; /* \u1ea2nh n\u1ec1n ph\u1ee7 k\u00edn div */\n}\n</code></pre>"},{"location":"html-css/co-ban/#thuoc-tinh-background-origin","title":"Thu\u1ed9c t\u00ednh Background-origin","text":"<p><code>background-origin</code> x\u00e1c \u0111\u1ecbnh v\u1ecb tr\u00ed b\u1eaft \u0111\u1ea7u c\u1ee7a background-image.</p> <ul> <li><code>border-box</code> (m\u1eb7c \u0111\u1ecbnh): B\u1eaft \u0111\u1ea7u t\u1eeb m\u00e9p tr\u00ean-tr\u00e1i c\u1ee7a border box.</li> <li><code>padding-box</code>: B\u1eaft \u0111\u1ea7u t\u1eeb m\u00e9p tr\u00ean-tr\u00e1i c\u1ee7a padding box.</li> <li><code>content-box</code>: B\u1eaft \u0111\u1ea7u t\u1eeb m\u00e9p tr\u00ean-tr\u00e1i c\u1ee7a content box.</li> </ul> <pre><code>div {\n    width: 200px;\n    height: 100px;\n    background-image: url(\"pattern.png\"); /* \u1ea2nh pattern nh\u1ecf */\n    border: 20px dashed red;\n    padding: 20px;\n    background-repeat: repeat; /* L\u1eb7p l\u1ea1i \u1ea3nh n\u1ec1n */\n    background-origin: content-box; /* \u1ea2nh n\u1ec1n b\u1eaft \u0111\u1ea7u t\u1eeb content box */\n}\n</code></pre>"},{"location":"html-css/co-ban/#thuoc-tinh-background-position","title":"Thu\u1ed9c t\u00ednh Background-position","text":"<p><code>background-position</code> \u0111\u1ecbnh v\u1ecb tr\u00ed c\u1ee7a \u1ea3nh n\u1ec1n trong ph\u1ea7n t\u1eed. Gi\u00e1 tr\u1ecb:</p> <ul> <li><code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>, <code>center</code>.</li> <li><code>px</code>, <code>%</code>: V\u1ecb tr\u00ed c\u1ee5 th\u1ec3 (px) ho\u1eb7c ph\u1ea7n tr\u0103m (%).</li> <li>C\u1eb7p gi\u00e1 tr\u1ecb: <code>background-position: horizontal vertical;</code> (v\u00ed d\u1ee5: <code>top center</code>, <code>50% 20px</code>).</li> </ul> <pre><code>div {\n    width: 300px;\n    height: 200px;\n    background-image: url(\"background.jpg\");\n    background-size: contain; /* \u1ea2nh n\u1ec1n v\u1eeba kh\u00edt */\n    background-repeat: no-repeat; /* Kh\u00f4ng l\u1eb7p l\u1ea1i \u1ea3nh n\u1ec1n */\n    background-position: center; /* \u1ea2nh n\u1ec1n \u1edf gi\u1eefa div */\n}\n</code></pre>"},{"location":"html-css/co-ban/#cu-phap-shorthand","title":"C\u00fa ph\u00e1p shorthand","text":"<p>CSS Shorthand (c\u00fa ph\u00e1p r\u00fat g\u1ecdn) gi\u00fap vi\u1ebft nhi\u1ec1u thu\u1ed9c t\u00ednh CSS li\u00ean quan trong m\u1ed9t d\u00f2ng. <code>background</code> shorthand g\u1ed9p nhi\u1ec1u thu\u1ed9c t\u00ednh background: <code>background: color image repeat position/size origin clip;</code> (th\u1ee9 t\u1ef1 kh\u00f4ng quan tr\u1ecdng, c\u00f3 th\u1ec3 b\u1ecf qua m\u1ed9t s\u1ed1 gi\u00e1 tr\u1ecb).</p> <pre><code>div {\n    width: 300px;\n    height: 200px;\n    background: lightblue url(\"background.jpg\") no-repeat center/cover padding-box;\n    /* R\u00fat g\u1ecdn c\u1ee7a:\n        background-color: lightblue;\n        background-image: url(\"background.jpg\");\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: cover;\n        background-origin: padding-box;\n    */\n}\n</code></pre>"},{"location":"html-css/co-ban/#css-functions","title":"CSS Functions","text":"<p>CSS Functions (h\u00e0m CSS) l\u00e0 c\u00e1c h\u00e0m d\u1ef1ng s\u1eb5n trong CSS \u0111\u1ec3 t\u1ea1o ra c\u00e1c gi\u00e1 tr\u1ecb \u0111\u1ed9ng ho\u1eb7c ph\u1ee9c t\u1ea1p. V\u00ed d\u1ee5:</p> <ul> <li><code>rgb()</code>, <code>rgba()</code>, <code>hsl()</code>, <code>hsla()</code>: H\u00e0m m\u00e0u.</li> <li><code>linear-gradient()</code>, <code>radial-gradient()</code>: H\u00e0m t\u1ea1o gradient m\u00e0u.</li> <li><code>calc()</code>: H\u00e0m t\u00ednh to\u00e1n.</li> <li><code>var()</code>: H\u00e0m d\u00f9ng bi\u1ebfn CSS.</li> </ul> <pre><code>div {\n    width: 200px;\n    height: 100px;\n    background-color: rgba(0, 0, 255, 0.5); /* M\u00e0u xanh lam trong su\u1ed1t */\n    background-image: linear-gradient(to right, red, yellow); /* Gradient t\u1eeb \u0111\u1ecf sang v\u00e0ng */\n    font-size: calc(100% - 20px); /* T\u00ednh to\u00e1n font-size */\n}\n</code></pre>"},{"location":"html-css/co-ban/#css-pseudo-classes","title":"CSS Pseudo classes","text":"<p>CSS Pseudo-classes (l\u1edbp gi\u1ea3) ch\u1ecdn c\u00e1c ph\u1ea7n t\u1eed d\u1ef1a tr\u00ean tr\u1ea1ng th\u00e1i ho\u1eb7c v\u1ecb tr\u00ed \u0111\u1eb7c bi\u1ec7t, kh\u00f4ng d\u1ef1a tr\u00ean class hay ID. B\u1eaft \u0111\u1ea7u b\u1eb1ng <code>:</code>. V\u00ed d\u1ee5:</p> <ul> <li><code>:hover</code>: Khi chu\u1ed9t di v\u00e0o.</li> <li><code>:active</code>: Khi ph\u1ea7n t\u1eed \u0111ang \u0111\u01b0\u1ee3c click.</li> <li><code>:focus</code>: Khi ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c focus (v\u00ed d\u1ee5 input).</li> <li><code>:first-child</code>, <code>:last-child</code>, <code>:nth-child()</code>: Ch\u1ecdn ph\u1ea7n t\u1eed con \u0111\u1ea7u, cu\u1ed1i, th\u1ee9 n.</li> </ul> <pre><code>a:hover { /* Style link khi hover */\n    color: red;\n    text-decoration: none; /* B\u1ecf g\u1ea1ch ch\u00e2n khi hover */\n}\n\nli:first-child { /* Style item \u0111\u1ea7u ti\u00ean trong danh s\u00e1ch */\n    font-weight: bold;\n}\n</code></pre>"},{"location":"html-css/co-ban/#phan-tu-gia-trong-css","title":"Ph\u1ea7n t\u1eed gi\u1ea3 trong CSS","text":"<p>CSS Pseudo-elements (ph\u1ea7n t\u1eed gi\u1ea3) t\u1ea1o ra c\u00e1c ph\u1ea7n t\u1eed \"\u1ea3o\" \u0111\u1ec3 style c\u00e1c ph\u1ea7n c\u1ee5 th\u1ec3 c\u1ee7a ph\u1ea7n t\u1eed th\u1eadt. B\u1eaft \u0111\u1ea7u b\u1eb1ng <code>::</code>. V\u00ed d\u1ee5:</p> <ul> <li><code>::before</code>, <code>::after</code>: T\u1ea1o ph\u1ea7n t\u1eed \u1ea3o tr\u01b0\u1edbc/sau n\u1ed9i dung ph\u1ea7n t\u1eed th\u1eadt.</li> <li><code>::first-line</code>, <code>::first-letter</code>: Style d\u00f2ng \u0111\u1ea7u, ch\u1eef c\u00e1i \u0111\u1ea7u c\u1ee7a text.</li> </ul> <pre><code>p::first-line { /* Style d\u00f2ng \u0111\u1ea7u ti\u00ean c\u1ee7a \u0111o\u1ea1n v\u0103n */\n    font-variant: small-caps; /* Ch\u1eef in hoa nh\u1ecf */\n}\n\na::before { /* Th\u00eam icon tr\u01b0\u1edbc link */\n    content: \"\ud83d\udd17 \";\n}\n</code></pre>"},{"location":"html-css/co-ban/#thuoc-tinh-position","title":"Thu\u1ed9c t\u00ednh Position","text":"<p><code>position</code> x\u00e1c \u0111\u1ecbnh c\u00e1ch ph\u1ea7n t\u1eed \u0111\u01b0\u1ee3c \u0111\u1ecbnh v\u1ecb trong layout. C\u00e1i n\u00e0y xem video cho d\u1ec5 hi\u1ec3u nha Learn CSS Positions in 4 minutes</p>"},{"location":"html-css/co-ban/#position-relative-tuong-oi","title":"<code>position: relative</code> (t\u01b0\u01a1ng \u0111\u1ed1i):","text":"<ul> <li>Ph\u1ea7n t\u1eed v\u1eabn \u1edf v\u1ecb tr\u00ed b\u00ecnh th\u01b0\u1eddng trong lu\u1ed3ng v\u0103n b\u1ea3n.</li> <li><code>top</code>, <code>right</code>, <code>bottom</code>, <code>left</code> d\u1ecbch chuy\u1ec3n ph\u1ea7n t\u1eed t\u01b0\u01a1ng \u0111\u1ed1i so v\u1edbi v\u1ecb tr\u00ed ban \u0111\u1ea7u c\u1ee7a n\u00f3.</li> <li>Kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn v\u1ecb tr\u00ed c\u00e1c ph\u1ea7n t\u1eed kh\u00e1c.</li> </ul> <pre><code>div {\n    width: 100px;\n    height: 100px;\n    background-color: lightblue;\n    position: relative; /* \u0110\u1ecbnh v\u1ecb t\u01b0\u01a1ng \u0111\u1ed1i */\n    left: 30px; /* D\u1ecbch sang ph\u1ea3i 30px */\n    top: 20px; /* D\u1ecbch xu\u1ed1ng d\u01b0\u1edbi 20px */\n}\n</code></pre>"},{"location":"html-css/co-ban/#thuoc-tinh-vi-tri-tuyet-oi","title":"Thu\u1ed9c t\u00ednh v\u1ecb tr\u00ed tuy\u1ec7t \u0111\u1ed1i","text":"<p><code>position: absolute</code> (tuy\u1ec7t \u0111\u1ed1i):</p> <ul> <li>Ph\u1ea7n t\u1eed b\u1ecb lo\u1ea1i kh\u1ecfi lu\u1ed3ng v\u0103n b\u1ea3n b\u00ecnh th\u01b0\u1eddng.</li> <li>\u0110\u1ecbnh v\u1ecb tuy\u1ec7t \u0111\u1ed1i so v\u1edbi ph\u1ea7n t\u1eed cha g\u1ea7n nh\u1ea5t c\u00f3 <code>position: relative</code>, <code>absolute</code>, <code>fixed</code> (n\u1ebfu kh\u00f4ng c\u00f3 cha n\u00e0o th\u00ec so v\u1edbi th\u1ebb <code>&lt;html&gt;</code>).</li> <li>C\u00e1c ph\u1ea7n t\u1eed kh\u00e1c c\u00f3 th\u1ec3 \"ch\u00e8n\" v\u00e0o v\u1ecb tr\u00ed c\u1ee7a ph\u1ea7n t\u1eed absolute.</li> </ul> <pre><code>&lt;div style=\"position: relative; width: 300px; height: 200px; border: 1px solid black;\"&gt;\n    &lt;div style=\"position: absolute; top: 50px; left: 50px; width: 100px; height: 100px; background-color: lightblue;\"&gt;\n        Absolute div\n    &lt;/div&gt;\n    Relative container\n&lt;/div&gt;\n</code></pre>"},{"location":"html-css/co-ban/#thuoc-tinh-position-fixed","title":"Thu\u1ed9c t\u00ednh Position: Fixed","text":"<p><code>position: fixed</code> (c\u1ed1 \u0111\u1ecbnh):</p> <ul> <li>T\u01b0\u01a1ng t\u1ef1 <code>absolute</code>: b\u1ecb lo\u1ea1i kh\u1ecfi lu\u1ed3ng v\u0103n b\u1ea3n.</li> <li>\u0110\u1ecbnh v\u1ecb c\u1ed1 \u0111\u1ecbnh so v\u1edbi viewport (c\u1eeda s\u1ed5 tr\u00ecnh duy\u1ec7t).</li> <li>Kh\u00f4ng scroll theo trang, lu\u00f4n \u1edf v\u1ecb tr\u00ed c\u1ed1 \u0111\u1ecbnh tr\u00ean m\u00e0n h\u00ecnh.</li> </ul> <pre><code>div {\n    position: fixed; /* \u0110\u1ecbnh v\u1ecb c\u1ed1 \u0111\u1ecbnh */\n    top: 0;\n    left: 0;\n    width: 100%;\n    background-color: lightblue;\n    padding: 10px;\n    text-align: center;\n}\n</code></pre>"},{"location":"html-css/co-ban/#thuoc-tinh-position-sticky","title":"Thu\u1ed9c t\u00ednh Position: Sticky","text":"<p><code>position: sticky</code> (d\u00ednh):</p> <ul> <li>K\u1ebft h\u1ee3p <code>relative</code> v\u00e0 <code>fixed</code>.</li> <li>Ban \u0111\u1ea7u ho\u1ea1t \u0111\u1ed9ng nh\u01b0 <code>relative</code> (trong lu\u1ed3ng v\u0103n b\u1ea3n).</li> <li>Khi scroll \u0111\u1ebfn m\u1ed9t v\u1ecb tr\u00ed nh\u1ea5t \u0111\u1ecbnh (set b\u1eb1ng <code>top</code>, <code>bottom</code>, <code>left</code>, <code>right</code>), n\u00f3 s\u1ebd \"d\u00ednh\" l\u1ea1i nh\u01b0 <code>fixed</code> trong ph\u1ea1m vi ph\u1ea7n t\u1eed cha.</li> </ul> <pre><code>div {\n    position: sticky; /* \u0110\u1ecbnh v\u1ecb sticky */\n    top: 0; /* D\u00ednh v\u00e0o m\u00e9p tr\u00ean khi scroll \u0111\u1ebfn */\n    background-color: lightblue;\n    padding: 10px;\n    margin-bottom: 500px; /* T\u1ea1o scroll \u0111\u1ec3 th\u1ea5y hi\u1ec7u \u1ee9ng */\n}\n</code></pre>"},{"location":"html-css/co-ban/#gioi-thieu-flexbox","title":"Gi\u1edbi thi\u1ec7u Flexbox","text":"<p>Flexbox l\u00e0 layout module m\u1ea1nh m\u1ebd trong CSS, gi\u00fap t\u1ea1o layout linh ho\u1ea1t, m\u1ed9t chi\u1ec1u (ch\u00ednh ho\u1eb7c ph\u1ee5). D\u00f9ng cho layout th\u00e0nh ph\u1ea7n, UI nh\u1ecf.</p> <ul> <li>K\u00edch ho\u1ea1t Flexbox: <code>display: flex;</code> cho ph\u1ea7n t\u1eed cha (container). C\u00e1c ph\u1ea7n t\u1eed con tr\u1ef1c ti\u1ebfp tr\u1edf th\u00e0nh flex items.</li> <li>Tr\u1ee5c ch\u00ednh (main axis) v\u00e0 tr\u1ee5c ph\u1ee5 (cross axis): Flexbox layout d\u1ef1a tr\u00ean 2 tr\u1ee5c n\u00e0y. M\u1eb7c \u0111\u1ecbnh tr\u1ee5c ch\u00ednh l\u00e0 ngang (row), tr\u1ee5c ph\u1ee5 l\u00e0 d\u1ecdc (column).</li> </ul>"},{"location":"html-css/co-ban/#nhung-thuoc-tinh-css-su-dung-trong-flexbox","title":"Nh\u1eefng thu\u1ed9c t\u00ednh CSS s\u1eed d\u1ee5ng trong Flexbox","text":"<p>Thu\u1ed9c t\u00ednh cho container (ph\u1ea7n t\u1eed cha):</p> <ul> <li><code>flex-direction</code>: H\u01b0\u1edbng tr\u1ee5c ch\u00ednh (row, column, row-reverse, column-reverse).</li> <li><code>justify-content</code>: C\u0103n ch\u1ec9nh c\u00e1c flex items tr\u00ean tr\u1ee5c ch\u00ednh (flex-start, flex-end, center, space-between, space-around, space-evenly).</li> <li><code>align-items</code>: C\u0103n ch\u1ec9nh c\u00e1c flex items tr\u00ean tr\u1ee5c ph\u1ee5 (flex-start, flex-end, center, stretch, baseline).</li> <li><code>flex-wrap</code>: Cho ph\u00e9p flex items xu\u1ed1ng d\u00f2ng khi kh\u00f4ng \u0111\u1ee7 ch\u1ed7 (nowrap, wrap, wrap-reverse).</li> <li><code>align-content</code>: C\u0103n ch\u1ec9nh c\u00e1c d\u00f2ng flex items (khi <code>flex-wrap: wrap</code> ho\u1eb7c <code>wrap-reverse</code>) tr\u00ean tr\u1ee5c ph\u1ee5 (flex-start, flex-end, center, space-between, space-around, stretch).</li> </ul> <p>Thu\u1ed9c t\u00ednh cho items (ph\u1ea7n t\u1eed con):</p> <ul> <li><code>order</code>: S\u1eafp x\u1ebfp th\u1ee9 t\u1ef1 item.</li> <li><code>flex-grow</code>:  Item c\u00f3 th\u1ec3 l\u1edbn ra \u0111\u1ec3 l\u1ea5p \u0111\u1ea7y kh\u00f4ng gian th\u1eeba.</li> <li><code>flex-shrink</code>: Item c\u00f3 th\u1ec3 nh\u1ecf l\u1ea1i khi kh\u00f4ng \u0111\u1ee7 ch\u1ed7.</li> <li><code>flex-basis</code>: K\u00edch th\u01b0\u1edbc c\u01a1 s\u1edf c\u1ee7a item tr\u01b0\u1edbc khi <code>flex-grow</code> v\u00e0 <code>flex-shrink</code> \u00e1p d\u1ee5ng.</li> <li><code>align-self</code>: Ghi \u0111\u00e8 <code>align-items</code> cho item c\u1ee5 th\u1ec3.</li> </ul>"},{"location":"html-css/co-ban/#hoc-flexbox-css-qua-vi-du","title":"H\u1ecdc Flexbox CSS qua v\u00ed d\u1ee5","text":"<p>V\u00ed d\u1ee5 (layout menu ngang):</p> <pre><code>&lt;nav class=\"menu\"&gt;\n    &lt;a href=\"#\"&gt;Home&lt;/a&gt;\n    &lt;a href=\"#\"&gt;About&lt;/a&gt;\n    &lt;a href=\"#\"&gt;Services&lt;/a&gt;\n    &lt;a href=\"#\"&gt;Contact&lt;/a&gt;\n&lt;/nav&gt;\n</code></pre> <pre><code>.menu {\n    display: flex; /* K\u00edch ho\u1ea1t flexbox */\n    justify-content: space-around; /* C\u00e1c link c\u00e1ch \u0111\u1ec1u nhau tr\u00ean tr\u1ee5c ngang */\n    background-color: lightgray;\n    padding: 10px;\n}\n\n.menu a {\n    text-decoration: none;\n    color: black;\n    padding: 10px 15px;\n}\n</code></pre>"},{"location":"html-css/co-ban/#flexbox-nang-cao-lien-he-flex-model-voi-cac-thuoc-tinh-flexbox-trong-css","title":"[Flexbox n\u00e2ng cao] Li\u00ean h\u1ec7 Flex model v\u1edbi c\u00e1c thu\u1ed9c t\u00ednh Flexbox trong CSS","text":"<p>Hi\u1ec3u r\u00f5 flex container, flex items, tr\u1ee5c ch\u00ednh, tr\u1ee5c ph\u1ee5, main size, cross size... gi\u00fap d\u00f9ng Flexbox hi\u1ec7u qu\u1ea3 h\u01a1n. C\u00e1c thu\u1ed9c t\u00ednh Flexbox \u0111i\u1ec1u khi\u1ec3n c\u00e1ch flex items ph\u00e2n b\u1ed5 kh\u00f4ng gian tr\u00ean tr\u1ee5c ch\u00ednh v\u00e0 tr\u1ee5c ph\u1ee5.</p>"},{"location":"html-css/co-ban/#css-bem-la-gi-at-ten-css-class-theo-tieu-chuan-bem","title":"CSS BEM L\u00e0 G\u00ec? \u0110\u1eb7t T\u00ean CSS Class Theo Ti\u00eau Chu\u1ea9n BEM","text":"<p>BEM (Block, Element, Modifier) l\u00e0 quy t\u1eafc \u0111\u1eb7t t\u00ean class CSS gi\u00fap code d\u1ec5 \u0111\u1ecdc, d\u1ec5 b\u1ea3o tr\u00ec, tr\u00e1nh xung \u0111\u1ed9t.</p> <ul> <li>Block: Ph\u1ea7n t\u1eed \u0111\u1ed9c l\u1eadp, t\u00e1i s\u1eed d\u1ee5ng (v\u00ed d\u1ee5: <code>menu</code>, <code>button</code>). Class: <code>block</code>.</li> <li>Element: Ph\u1ea7n con c\u1ee7a Block, ph\u1ee5 thu\u1ed9c v\u00e0o Block (v\u00ed d\u1ee5: <code>menu__item</code>, <code>button__text</code>). Class: <code>block__element</code>.</li> <li>Modifier: Bi\u1ebfn th\u1ec3 c\u1ee7a Block ho\u1eb7c Element, thay \u0111\u1ed5i style (v\u00ed d\u1ee5: <code>button--primary</code>, <code>menu__item--active</code>). Class: <code>block--modifier</code> ho\u1eb7c <code>block__element--modifier</code>.</li> </ul> <pre><code>&lt;div class=\"button button--primary\"&gt;\n    &lt;span class=\"button__text\"&gt;Click me&lt;/span&gt;\n&lt;/div&gt;\n</code></pre> <pre><code>.button { /* Block */\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n}\n\n.button--primary { /* Modifier cho Block */\n    background-color: blue;\n    color: white;\n}\n\n.button__text { /* Element c\u1ee7a Block */\n    font-size: 16px;\n}\n</code></pre>"},{"location":"html-css/co-ban/#toi-uu-performace-khi-su-dung-anh-voi-srcset","title":"T\u1ed1i \u01b0u performace khi s\u1eed d\u1ee5ng \u1ea3nh v\u1edbi srcset","text":"<p><code>srcset</code> attribute c\u1ee7a th\u1ebb <code>&lt;img&gt;</code> gi\u00fap cung c\u1ea5p nhi\u1ec1u phi\u00ean b\u1ea3n \u1ea3nh v\u1edbi k\u00edch th\u01b0\u1edbc kh\u00e1c nhau, tr\u00ecnh duy\u1ec7t t\u1ef1 ch\u1ecdn \u1ea3nh ph\u00f9 h\u1ee3p v\u1edbi k\u00edch th\u01b0\u1edbc m\u00e0n h\u00ecnh, t\u1ed1i \u01b0u hi\u1ec7u su\u1ea5t t\u1ea3i trang, \u0111\u1eb7c bi\u1ec7t tr\u00ean mobile.</p> <pre><code>&lt;img src=\"image-large.jpg\"\n        srcset=\"image-small.jpg 320w,\n                image-medium.jpg 768w,\n                image-large.jpg 1200w\"\n        alt=\"\u1ea2nh responsive\"&gt;\n</code></pre>"},{"location":"html-css/co-ban/#css-selectors-co-ban","title":"CSS selectors c\u01a1 b\u1ea3n","text":"<p>\u00d4n l\u1ea1i c\u00e1c CSS selectors c\u01a1 b\u1ea3n:</p> <ul> <li>Element selectors: <code>p</code>, <code>h1</code>, <code>div</code>...</li> <li>Class selectors: <code>.class-name</code></li> <li>ID selectors: <code>#id-name</code></li> <li>Attribute selectors: <code>[attribute]</code>, <code>[attribute=\"value\"]</code>...</li> <li>Universal selector: <code>*</code> (ch\u1ecdn t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed).</li> <li>Combinators:<ul> <li>Descendant selector (space): <code>div p</code> (ch\u1ecdn <code>&lt;p&gt;</code> b\u00ean trong <code>&lt;div&gt;</code>).</li> <li>Child selector (<code>&gt;</code>): <code>div &gt; p</code> (ch\u1ecdn <code>&lt;p&gt;</code> l\u00e0 con tr\u1ef1c ti\u1ebfp c\u1ee7a <code>&lt;div&gt;</code>).</li> <li>Adjacent sibling selector (<code>+</code>): <code>h1 + p</code> (ch\u1ecdn <code>&lt;p&gt;</code> ngay sau <code>&lt;h1&gt;</code>).</li> <li>General sibling selector (<code>~</code>): <code>h1 ~ p</code> (ch\u1ecdn t\u1ea5t c\u1ea3 <code>&lt;p&gt;</code> l\u00e0 anh em c\u1ee7a <code>&lt;h1&gt;</code>).</li> </ul> </li> </ul>"},{"location":"html-css/nang-cao/","title":"N\u00e2ng cao","text":"<p>H\u1ecdc s\u00e2u h\u01a1n v\u1ec1 c\u00e1i n\u00e0y.... m\u00e0 ch\u01b0a th\u00eam g\u00ec c\u1ea3</p>"},{"location":"java/","title":"T\u1ed5ng h\u1ee3p ki\u1ebfn th\u1ee9c","text":""},{"location":"java/#bai-1","title":"B\u00e0i 1","text":""},{"location":"java/#cai-at-moi-truong","title":"C\u00e0i \u0111\u1eb7t m\u00f4i tr\u01b0\u1eddng","text":"<p><code>Java</code>\u00a0ho\u1ea1t \u0111\u1ed9ng nh\u01b0 v\u1eady, n\u00f3 ch\u1ec9 n\u00f3i 1 ng\u00f4n ng\u1eef duy nh\u1ea5t th\u00f4i, tuy nhi\u00ean n\u00f3 c\u00f3 m\u1ed9t th\u1eb1ng anh b\u00e1 \u0111\u1ea1o, t\u00ean \u00f4ng \u00fd n\u00f4m na l\u00e0\u00a0m\u00f4i tr\u01b0\u1eddng \u1ea3o\u00a0hay t\u00ean chu\u1ea9n l\u00e0\u00a0<code>Java virtual machine (JVM)</code>. Nhi\u1ec7m v\u1ee5 c\u1ee7a\u00a0<code>JVM</code>\u00a0l\u00e0 n\u00f3 ph\u1ee5 \u0111\u1ec1 (thuy\u1ebft minh) cho t\u1eebng lo\u1ea1i OS kh\u00e1c nhau r\u1eb1ng th\u1eb1ng\u00a0<code>Java</code>\u00a0\u0111ang l\u00e0m g\u00ec, n\u00f3i g\u00ec, l\u00e0m g\u00ec.</p> <p>V\u00ec ch\u00fang ta l\u00e0 Developer n\u00ean s\u1ebd c\u00e0i g\u00f3i\u00a0<code>JDK</code>\u00a0(<code>Java Development Kit</code>), n\u00f3 ch\u1ee9a c\u00e1c c\u00f4ng c\u1ee5 gi\u00fap l\u1eadp tr\u00ecnh\u00a0<code>Java</code>. Ngo\u00e0i ra trong qu\u00e1 tr\u00ecnh c\u00e0i, n\u00f3 s\u1ebd c\u00e0i m\u00f4i tr\u01b0\u1eddng\u00a0<code>JRE</code>\u00a0(<code>Java Runtime Enviroment</code>, bao g\u1ed3m c\u1ea3 th\u1eb1ng\u00a0<code>JVM</code>\u00a0\u1edf tr\u00ean) lu\u00f4n.</p>"},{"location":"java/#hello-world","title":"Hello World","text":"<p>T\u1ea1o Project trong Intellij ch\u1eb3ng h\u1ea1n, xong r\u1ed3i th\u00ec c\u00f9ng nh\u00ecn v\u00e0o c\u1ea5u tr\u00fac c\u1ee7a project th\u00ec s\u1ebd th\u1ea5y c\u00f3 3 th\u01b0 m\u1ee5c:</p> <ul> <li><code>.idea</code>: Th\u1eb1ng n\u00e0y l\u00e0 th\u01b0 m\u1ee5c do\u00a0<code>Intellij</code>\u00a0t\u1ef1 t\u1ea1o ra \u0111\u1ec3 ch\u1ee9a c\u00e1c file config c\u1ee7a ph\u1ea7n m\u1ec1m n\u00e0y, b\u1ea1n s\u1ebd k c\u1ea7n quan t\u00e2m \u0111\u1ebfn.</li> <li><code>src</code>: \u0110\u00e2y l\u00e0 th\u01b0 m\u1ee5c ch\u00ednh b\u1ea1n s\u1ebd l\u00e0m vi\u1ec7c, t\u1ea5t c\u1ea3\u00a0<code>code</code>\u00a0b\u1ea1n \u0111\u1ec3 trong n\u00e0y</li> <li><code>{project-name}.iml</code>: File n\u00e0y c\u0169ng do\u00a0<code>Intellj</code>\u00a0t\u1ea1o ra v\u00e0 qu\u1ea3n l\u00fd module, b\u1ea1n kh\u00f4ng c\u1ea7n quan t\u00e2m n\u00f3.</li> </ul>"},{"location":"java/#mot-so-thong-tin-khac","title":"M\u1ed9t s\u1ed1 th\u00f4ng tin kh\u00e1c","text":"<ul> <li><code>public static void main(String[] args)</code>: (G\u1ecdi t\u1eaft l\u00e0\u00a0<code>psvm</code>\u00a0nh\u00e9) C\u00e1i th\u1eb1ng n\u00e0y s\u1ebd l\u00e0 n\u01a1i\u00a0<code>Java</code>\u00a0t\u00ecm t\u1edbi \u0111\u1ea7u ti\u00ean, v\u00e0 \u0111\u1ecdc to\u00e0n b\u1ed9 c\u00e1c \u0111o\u1ea1n code trong c\u00e1i th\u1eb1ng t\u00ean l\u00e0\u00a0<code>psvm</code>\u00a0n\u00e0y. D\u00f9 n\u00f3 \u1edf b\u1ea5t c\u1ee9 \u0111\u00e2u, n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c t\u00ecm t\u1edbi.</li> <li>2 c\u00e1i d\u1ea5u\u00a0<code>{``}</code>: \u0110\u00e1nh d\u1ea5u \u0111o\u1ea1n b\u1eaft \u0111\u1ea7u v\u00e0 k\u1ebft th\u00fac c\u1ee7a c\u00e1i\u00a0<code>public static void main(String[] args)</code>\u00a0kia.</li> </ul> <p>V\u1eady l\u00e0 th\u1eb1ng\u00a0<code>Java</code>\u00a0s\u1ebd \u0111i l\u00f9ng t\u00ecm, xem c\u00e1i th\u1eb1ng\u00a0<code>psvm</code>\u00a0xem n\u00f3 \u1edf \u0111\u00e2u. R\u1ed3i \u0111\u1ecdc h\u1ebft t\u1ea5t c\u1ea3 nh\u1eefng th\u1ee9 n\u1eb1m trong c\u00e1i 2 d\u1ea5u\u00a0<code>{``}</code>\u00a0c\u1ee7a th\u1eb1ng n\u00e0y.</p>"},{"location":"java/#bien-pham-vi-kieu-du-lieu-toan-tu-trong-java","title":"Bie\u0302\u0301n, ph\u1ea1m vi, ki\u1ec3u d\u1eef li\u1ec7u, to\u00e1n t\u1eed trong Java","text":""},{"location":"java/#bien-kieu-du-lieu","title":"Bi\u1ebfn &amp; Ki\u1ec3u d\u1eef li\u1ec7u","text":"<pre><code>public class Calculation{\n    public static void main(String[] args){\n        // khai bao so nguyen\n        int a = 5;\n        int b = 10;\n        int x = 10 + 5;\n        System.out.println(x);\n\n    }\n}\n</code></pre> <p>Th\u1ee9 nh\u1ea5t l\u00e0 c\u00e1i\u00a0<code>// khai bao so nguyen</code>, c\u00e1i n\u00e0y g\u1ecdi l\u00e0\u00a0<code>Comment</code>, t\u1ee9c c\u00e1c b\u1ea1n vi\u1ebft g\u00ec sau 2 c\u00e1i d\u1ea5u\u00a0<code>//</code>\u00a0th\u00ec n\u00f3 s\u1ebd kh\u00f4ng \u1ea3nh h\u01b0\u1edfng t\u1edbi\u00a0<code>code</code>\u00a0c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh, n\u00f3 ch\u1ec9 mang \u00fd ngh\u0129a ch\u00fa th\u00edch th\u00f4i.</p> <p>Th\u1ee9 hai l\u00e0 c\u00e1i n\u00e0y:</p> <pre><code>int a = 5;\n</code></pre> <p>N\u00f3i v\u1ec1\u00a0<code>Bi\u1ebfn</code>\u00a0(<code>Variable</code>) c\u00e1c b\u1ea1n c\u00f3 li\u00ean t\u01b0\u1edfng t\u1edbi li\u00ean t\u01b0\u1edfng t\u1edbi bi\u1ebfn\u00a0<code>x</code>\u00a0trong \u0111\u1ed3 th\u1ecb h\u00e0m s\u1ed1\u00a0<code>ax + b = 0</code>\u00a0kh\u00f4ng. Th\u00ec ch\u00ednh l\u00e0 n\u00f3 \u0111\u1ea5y.</p> <p>Bi\u1ebfn\u00a0s\u1ebd gi\u00fap ch\u00fang ta l\u01b0u tr\u1eef v\u00e0 qu\u1ea3n l\u00fd c\u00e1c gi\u00e1 tr\u1ecb trong ch\u01b0\u01a1ng tr\u00ecnh.</p> <p>Trong\u00a0<code>Java</code>,\u00a0<code>Bi\u1ebfn</code>\u00a0c\u0169ng l\u00e0 \u0111\u1ea1i di\u1ec7n cho m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng v\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng n\u00e0y ph\u1ea3i \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh l\u00e0 thu\u1ed9c\u00a0<code>Ki\u1ec3u d\u1eef li\u1ec7u</code>\u00a0n\u00e0o. C\u00f3 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u\u00a0<code>nguy\u00ean thu\u1ef7</code>\u00a0(<code>primitive</code>) nh\u01b0 sau:</p> <ul> <li><code>boolean</code>: l\u00e0 ki\u1ec3u logic, ch\u1ec9 c\u00f3 2 gi\u00e1 tr\u1ecb\u00a0<code>true</code>\u00a0ho\u1eb7c\u00a0<code>false</code></li> <li><code>char</code>: ki\u1ec3u k\u00fd t\u1ef1, ch\u1ec9 ch\u1ee9a \u0111c \u0111\u01b0\u1ee3c m\u1ed9t k\u00fd t\u1ef1, \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong d\u1ea5u ngo\u1eb7c \u0111\u01a1n\u00a0<code>'</code></li> <li><code>int</code>\u00a0: s\u1ed1 nguy\u00ean (<code>1,2,3, ..</code>)</li> <li><code>long</code>: s\u1ed1 nguy\u00ean, l\u1edbn h\u01a1n\u00a0<code>int</code>. (s\u1ebd gi\u1ea3i th\u00edch \u1edf d\u01b0\u1edbi)</li> <li><code>float</code>: s\u1ed1 th\u1ef1c (<code>1.5, 2.5, ..</code>).</li> <li><code>double</code>: s\u1ed1 th\u1ef1c, l\u1edbn h\u01a1n\u00a0<code>float</code>.</li> </ul> <p>Ngo\u00e0i ra c\u00f2n 2 ki\u1ec3u d\u1eef li\u1ec7u nh\u1ecf h\u01a1n\u00a0<code>int</code>\u00a0l\u00e0\u00a0<code>byte</code>\u00a0v\u00e0\u00a0<code>short</code>.</p> <p>Ki\u1ec3u d\u1eef li\u1ec7u cao c\u1ea5p h\u01a1n g\u1ecdi l\u00e0\u00a0<code>Object</code>\u00a0m\u00e0 \u0111\u1eb7c tr\u01b0ng nh\u1ea5t l\u00e0\u00a0<code>String</code>.</p> <ul> <li><code>String</code>: M\u1ed9t chu\u1ed7i c\u00e1c k\u00fd t\u1ef1, \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a trong d\u1ea5u ngo\u1eb7c k\u00e9p\u00a0<code>\"\"</code>. vd\u00a0<code>String a = \"Hellooo world~~~\"</code></li> </ul>"},{"location":"java/#cach-khai-bao","title":"C\u00e1ch khai b\u00e1o","text":"<p>\u0110\u1ec3 khai b\u00e1o bi\u1ebfn, b\u1eaft bu\u1ed9c tr\u01b0\u1edbc \u0111\u00f3 b\u1ea1n ph\u1ea3i ch\u1ec9 cho n\u00f3\u00a0<code>ki\u1ec3u d\u1eef li\u1ec7u</code>\u00a0m\u00e0 n\u00f3 s\u1ebd nh\u1eadn, ngo\u00e0i ra c\u00f3 th\u1ec3 c\u00f3 gi\u00e1 tr\u1ecb ho\u1eb7c kh\u00f4ng.</p> <ul> <li>C\u00e1ch 1:\u00a0<code>[ki\u1ec3u_d\u1eef_li\u1ec7u][t\u00ean_bi\u1ebfn];</code></li> <li>C\u00e1ch 2:\u00a0<code>[ki\u1ec3u_d\u1eef_li\u1ec7u][t\u00ean_bi\u1ebfn] = [gi\u00e1_tr\u1ecb];</code></li> </ul> <pre><code>int a, b, c; // Khai b\u00e1o 3 bi\u1ebfn c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u int\nfloat b = 4.5f, c = 4f; // Khai b\u00e1o 2 bi\u1ebfn c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u float v\u1edbi gi\u00e1 tr\u1ecb ban \u0111\u1ea7u. \u1edf \u0111\u00e2y bi\u1ebfn `c` s\u1ebd \u0111\u01b0\u1ee3c hi\u1ec3u l\u00e0 c = 4.0\ndouble c = 4444.3;\nchar t = 'c';\nString e = \"Hello\";\n</code></pre>"},{"location":"java/#cach-at-ten","title":"C\u00e1ch \u0111\u1eb7t t\u00ean","text":"<p>T\u00ean bi\u1ebfn ph\u1ea3i tu\u00e2n theo\u00a0<code>quy t\u1eafc l\u1ea1c \u0111\u00e0 (Camel Case)</code>: \u0111\u00f3 l\u00e0 ch\u1eef c\u00e1i \u0111\u1ea7u ti\u00ean c\u1ee7a t\u1eeb \u0111\u1ea7u ti\u00ean ph\u1ea3i vi\u1ebft th\u01b0\u1eddng v\u00e0 ch\u1eef c\u00e1i \u0111\u1ea7u ti\u00ean c\u1ee7a c\u00e1c t\u1eeb ti\u1ebfp theo ph\u1ea3i vi\u1ebft hoa, v\u00ed d\u1ee5:\u00a0<code>listStudent</code>,\u00a0<code>minScore</code>.</p>"},{"location":"java/#pham-vi-su-dung","title":"Ph\u1ea1m vi s\u1eed d\u1ee5ng","text":"<p>M\u1ed9t khi b\u1ea1n \u0111\u00e3 khai b\u00e1o bi\u1ebfn, th\u00ec b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng n\u00f3 trong nh\u1eefng\u00a0<code>Ph\u1ea1m vi</code>\u00a0m\u00e0 n\u00f3 kh\u1ea3 d\u1ee5ng. ?? \ud83d\ude00?? C\u00f9ng nh\u00ecn v\u00ed d\u1ee5 \u1edf d\u01b0\u1edbi nh\u00e9.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>public static void main(String[] args){\n    // khai bao so nguyen `a`\n    int a;\n    // G\u00e1n gi\u00e1 tr\u1ecb cho a, b\u1ea1n s\u1eed d\u1ee5ng to\u00e1n t\u1eed `=`\n    // S\u1eed d\u1ee5ng bi\u1ebfn a b\u00ecnh th\u01b0\u1eddng\n    a = 124214;\n\n    // l\u1ea5y a v\u00e0 c\u1ed9ng th\u00eam 1,, r\u1ed3i g\u00e1n ng\u01b0\u1ee3c l\u1ea1i gi\u00e1 tr\u1ecb \u0111\u00f3 v\u00e0o a :D\n    // S\u1eed d\u1ee5ng bi\u1ebfn a b\u00ecnh th\u01b0\u1eddng\n    a = a + 1;\n\n}\n// G\u00e1n l\u1ea1i gi\u00e1 tr\u1ecb cho a = 100 - 10;\n// Ch\u01b0\u01a1ng tr\u00ecnh l\u1ed7i\na = 100 - 10;\n</code></pre> <p><code>Ph\u1ea1m vi</code>\u00a0(<code>Scope</code>) l\u00e0 \u0111\u00e2y c\u00e1c b\u1ea1n \u1ea1, ch\u00ednh l\u00e0 2 c\u00e1i d\u1ea5u\u00a0<code>{}</code>, khi b\u1ea1n khai b\u00e1o m\u1ed9t bi\u1ebfn\u00a0<code>a</code>\u00a0trong 2 c\u00e1i d\u1ea5u\u00a0<code>{``}</code>\u00a0th\u00ec b\u1ea1n ch\u1ec9 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u1edf trong n\u00f3 th\u00f4i, ra ngo\u00e0i n\u00f3 s\u1ebd kh\u00f4ng hi\u1ec3u\u00a0<code>a</code>\u00a0l\u00e0 th\u1eb1ng n\u00e0o v\u00e0 t\u1eeb \u0111\u00e2u chui ra.</p> <p>Bi\u1ebfn\u00a0kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng ngo\u00e0i, nh\u01b0ng n\u00f3 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf b\u00ean trong nh\u1eefng\u00a0scope\u00a0m\u00e0 n\u00f3 ch\u1ee9a ho\u1eb7c c\u00f9ng c\u1ea5p v\u1edbi n\u00f3.</p> <pre><code>public class Calculation{\n    // Khai b\u00e1o a \u1edf ngo\u00e0i main, c\u00e1i `public static` l\u00e0 c\u1ea7n thi\u1ebft nh\u00e9, c\u00f2n chi ti\u1ebft th\u00ec ch\u00fang ta s\u1ebd h\u1ecdc \u1edf c\u00e1c b\u00e0i sau.\n    public static int a = 5;\n    public static void main(String[] args){\n        // thay \u0111\u1ed5i a, \u1edf trong, v\u1eabn okie.\n        a = 10;\n\n        // Bi\u1ebfn a c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng trong c\u00e1c `scope` con c\u1ee7a n\u00f3\n        // L\u00e0m g\u00ec bi\u1ebfn a \u1edf \u0111\u00e2y c\u0169ng \u0111\u01b0\u1ee3c, bi\u1ebfn \u0111\u1ed5i n\u00f3.\n\n        // g\u00e1n gi\u00e1 tr\u1ecb bi\u1ebfn a v\u00e0o b;\n        int b = a;\n\n        System.out.println(b);\n    }\n}\n</code></pre>"},{"location":"java/#toan-tu","title":"To\u00e1n t\u1eed","text":"<p>Khi \u0111\u00e3 x\u00e1c \u0111\u1ecbnh c\u00e1c\u00a0<code>Bi\u1ebfn</code>\u00a0trong ch\u01b0\u01a1ng tr\u00ecnh, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng\u00a0<code>to\u00e1n t\u1eed</code>\u00a0\u0111\u1ec3 thay \u0111\u1ed5i c\u00e1c gi\u00e1 tr\u1ecb. C\u00e1c\u00a0<code>to\u00e1n t\u1eed</code>\u00a0th\u00ec kh\u00e1 \u0111\u01a1n gi\u1ea3n, gi\u1ed1ng m\u00f4n to\u00e1n b\u00ecnh th\u01b0\u1eddng th\u00f4i. V\u1edbi c\u00e1c ki\u1ec3u\u00a0<code>nguy\u00ean thu\u1ef7 (primitive)</code>\u00a0ta c\u00f3:</p> <pre><code>public class Calculation{\n    public static void main(String[] args){\n      int a;\n      int b = 5;\n      int c = a + b; // c = 0 + 5 c\u1ed9ng\n      int d = a - b; // d = 0 - 5 tr\u1eeb\n      int f = a * 5; // f = 0 x 5 nh\u00e2n\n      int g = a / 5; // g = 0 : 5; chia\n    }\n}\n</code></pre> <p>C\u00f2n v\u1edbi\u00a0<code>String</code>\u00a0th\u00ec b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng\u00a0<code>+</code>\u00a0\u0111\u1ec3 gh\u00e9p 2 chu\u1ed7i m\u00e0 th\u00f4i. C\u00f2n c\u00e1c to\u00e0n t\u1eed c\u00f2n l\u1ea1i kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng v\u1edbi\u00a0<code>String</code></p> <pre><code>public class Calculation{\n    public static void main(String[] args){\n      String a = \"Hello\"\n      String b = \"World\"\n      // M\u00ecnh \u0111\u00e3 n\u1ed1i 3 x\u00e2u l\u00e0 \"Hello\" + \" \" (Kho\u1ea3ng tr\u1eafng) + \"World\" l\u1ea1i v\u1edbi nhau\n      System.out.println(a + \" \" + b);\n\n      String c = a + 5; // String c\u1ed9ng v\u1edbi m\u1ed9t s\u1ed1 nguy\u00ean?\n      System.out.println(c); // K\u1ebft qu\u1ea3 s\u1ebd l\u00e0: \"Hello 5\" :V\n      // B\u1ea1n s\u1ebd hi\u1ec3u l\u00e0 khi c\u1ed9ng String v\u1edbi m\u1ed9t s\u1ed1, s\u1ed1 \u0111\u00f3 s\u1ebd b\u1ecb chuy\u1ec3n th\u00e0nh String v\u00e0 n\u1ed1i v\u00e0o sau.\n\n    }\n}\n</code></pre>"},{"location":"java/#ep-kieu-du-lieu","title":"\u00c9p ki\u1ec3u d\u1eef li\u1ec7u","text":"<p>Nh\u00ecn v\u00e0o v\u00ed d\u1ee5 sau, b\u1ea1n s\u1ebd r\u00f5.</p> <pre><code>public class Calculation{\n    public static void main(String[] args){\n      int a = 2;\n      float b = 3.5f; // d\u00f9ng ch\u1eef f \u0111\u1ec3 n\u00f3 hi\u1ec3u \u0111\u00e2y l\u00e0 3,5 float ch\u1ee9 k ph\u1ea3i 3,5 double\n\n      float c = a + b; // c = 5.5\n\n      int d = a + b; // b\u00e1o l\u1ed7i. V\u00ec sao?\n      // v\u00ec java \u0111ang hi\u1ec3u 2 + 3.5 n\u00f3 s\u1ebd \u00e9p th\u00e0nh 5.5 l\u00e0 float. B\u00e2y gi\u1edd g\u00e1n n\u00f3 v\u00e0o s\u1ed1 nguy\u00ean th\u00ec s\u1ebd nh\u01b0 n\u00e0y int = float?\n\n      // \u0110\u1ec3 g\u00e1n \u0111\u01b0\u1ee3c b\u1ea1n c\u1ea7n s\u1eed d\u1ee5ng \u00e9p ki\u1ec3u\n      int d = (int) a + b; // d = 5\n      // a + b = 5.5 =&gt; \u00e9p th\u00e0nh (int) =&gt; 5 (l\u1ea5y ph\u1ea7n nguy\u00ean th\u00f4i)\n\n      char character = '5';\n      int number = (int) character; // number = 53. Why?\n\n      // V\u00ec \u00e9p `char` th\u00e0nh `int` th\u00ec n\u00f3 s\u1ebd kh\u00f4ng chuy\u1ec3n ch\u1eef th\u00e0nh s\u1ed1, m\u00e0 n\u00f3 s\u1ebd ki\u1ebfm tra '5' l\u00e0 k\u00fd t\u1ef1 ASCII th\u1ee9 bao nhi\u00eau trong m\u00e1y t\u00ednh, v\u00e0 tr\u1ea3 l\u1ea1i s\u1ed1 th\u1ee9 t\u1ef1 \u0111\u00f3.\n\n      float = (float) 5; // =&gt; 5.0\n    }\n}\n</code></pre>"},{"location":"java/#ban-chat-cua-bien-noi-them","title":"B\u1ea3n ch\u1ea5t c\u1ee7a bi\u1ebfn (N\u00f3i th\u00eam)","text":"<p>Khi c\u00e1c b\u1ea1n khai b\u00e1o m\u1ed9t bi\u1ebfn\u00a0<code>int</code>\u00a0trong ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a m\u00ecnh v\u00e0 s\u1eed d\u1ee5ng lung tung kh\u1eafp m\u1ecdi n\u01a1i, th\u00ec b\u1ea1n c\u00f3 bi\u1ebft c\u00e1i bi\u1ebfn\u00a0<code>int</code>\u00a0\u00fd \u1edf \u0111\u00e2u l\u00f2i ra kh\u00f4ng :))</p> <p>V\u1ec1 b\u1ea3n ch\u1ea5t,\u00a0<code>Bi\u1ebfn</code>\u00a0s\u1ebd l\u00e0 m\u1ed9t v\u00f9ng nh\u1edb trong thi\u1ebft b\u1ecb v\u1eadt l\u00fd m\u00e0 d\u1ec5 nh\u1ea5t l\u00e0 \u0111\u1ec3 trong\u00a0<code>ram</code>. v\u00e0 khi b\u1ea1n cho n\u00f3 m\u1ed9t gi\u00e1 tr\u1ecb, n\u00f3 s\u1ebd l\u01b0u tr\u1eef s\u1ed1 \u0111\u00f3 v\u00e0o\u00a0<code>ram</code>, v\u00e0 c\u1ea7n th\u00ec l\u1ea5y l\u00ean.</p> <p>V\u1eady \u0111\u1ec3\u00a0<code>ram</code>\u00a0bi\u1ebft b\u1ea1n mu\u1ed1n l\u01b0u c\u00e1i g\u00ec th\u00ec b\u1ea1n ph\u1ea3i khai b\u00e1o cho n\u00f3. V\u00ed d\u1ee5 b\u1ea1n b\u1ea3o t\u00f4i c\u1ea7n m\u1ed9t s\u1ed1 nguy\u00ean\u00a0<code>int</code>. Th\u00ec m\u00e1y t\u00ednh hi\u1ec3u l\u00e0 m\u00ecnh c\u1ea7n l\u01b0u tr\u1eef m\u1ed9t s\u1ed1 nguy\u00ean b\u00ecnh th\u01b0\u1eddng, kh\u00f4ng qu\u00e1 l\u1edbn, n\u00f3 s\u1ebd cho b\u1ea1n\u00a0<code>4 byte</code>\u00a0trong\u00a0<code>Ram</code>\u00a0th\u00edch l\u01b0u g\u00ec th\u00ec l\u01b0u. nh\u01b0ng\u00a0<code>kh\u00f4ng \u0111\u01b0\u1ee3c v\u01b0\u1ee3t qu\u00e1 4 byte</code>.</p> <p>4 byte = 32 bit, b\u1ecf \u0111i 1 bit \u0111\u1ea7u ti\u00ean \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u l\u00e0 s\u1ed1 \u00e2m hay d\u01b0\u01a1ng, th\u00ec c\u00f2n\u00a031 bit\u00a0=&gt; s\u1ed1 l\u1edbn nh\u1ea5t m\u00e0 bi\u1ebfn int l\u01b0u tr\u1eef \u0111\u01b0\u1ee3c l\u00e0\u00a02^31 - 1\u00a0=\u00a02147483647</p> <p>T\u1eeb \u0111\u00e2y, b\u1ea1n s\u1ebd hi\u1ec3u v\u00ec sao c\u00f3 s\u1ed1\u00a0<code>long</code>, v\u00ec nhu c\u1ea7u l\u01b0u s\u1ed1 l\u1edbn h\u01a1n th\u00ec\u00a0<code>long</code>\u00a0\u0111\u01b0\u1ee3c c\u1ea5p t\u1eadn\u00a0<code>8 byte</code>.</p> <p>C\u00f2n tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t nh\u01b0\u00a0<code>String</code>\u00a0th\u00ec tu\u1ef3 gi\u00e1 tr\u1ecb c\u1ee7a n\u00f3 c\u00f3 bao nhi\u00eau k\u00fd t\u1ef1, m\u00e0\u00a0<code>Ram</code>\u00a0s\u1ebd c\u1ea5p t\u01b0\u01a1ng \u1ee9ng b\u1ea5y nhi\u00eau\u00a0<code>byte</code></p>"},{"location":"java/#bai-3-ham-va-cau-lenh-ieu-kien","title":"B\u00e0i 3: Ha\u0300m va\u0300 ca\u0302u le\u0323\u0302nh \u0111ie\u0302\u0300u kie\u0323\u0302n","text":""},{"location":"java/#1-cau-lenh-re-nhanh","title":"#1 C\u00e2u l\u1ec7nh r\u1ebd nh\u00e1nh","text":""},{"location":"java/#if","title":"if","text":"<p>C\u00e1c b\u1ea1n nh\u00ecn qua v\u00ed d\u1ee5 n\u00e0y:</p> <pre><code>public static void main(String[] args){\n    // khai bao so nguyen\n    int a = 9;\n\n    // Ki\u1ec3m tra xem a c\u00f3 b\u1eb1ng 9 kh\u00f4ng\n    if (a == 9) {\n        // n\u1ebfu b\u1eb1ng 9, in ra m\u00e0n h\u00ecnh \"Hello\"\n        System.out.println(\"Hello\");\n    }\n\n// K\u1ebft qu\u1ea3 tr\u00ean m\u00e0n h\u00ecnh:\n// Hello\n}\n</code></pre> <p>Th\u00ec c\u00e1c c\u1ea7n bi\u1ebft nh\u01b0 sau, c\u00e2u l\u1ec7nh\u00a0<code>if</code>\u00a0l\u00e0 m\u1ed9t c\u00e2u l\u1ec7nh \u0111i\u1ec1u ki\u1ec7n, v\u00e0 nh\u1eadn v\u00e0o l\u00e0 m\u1ed9t \u0111i\u1ec1u ki\u1ec7n\u00a0<code>true</code>\u00a0ho\u1eb7c\u00a0<code>false</code>. C\u00f3 c\u00fa ph\u00e1p nh\u01b0 sau:</p> <pre><code>if ([\u0111i\u1ec1u ki\u1ec7n]){\n    // Th\u1ef1c hi\u1ec7n \u0111o\u1ea1n code n\u1ebfu [\u0111i\u1ec1u ki\u1ec7n] l\u00e0 `true`. N\u1ebfu `false` b\u1ecf qa \u0111i xu\u1ed1ng d\u01b0\u1edbi.\n}\n// Ti\u1ebfp t\u1ee5c th\u1ef1c hi\u1ec7n \u0111o\u1ea1n code ph\u00eda d\u01b0\u1edbi\n</code></pre> <p>V\u1eady \u0111\u1ea5y, n\u00ean \u0111\u1ec3 so s\u00e1nh b\u1ea1n c\u1ea7n d\u00f9ng\u00a0<code>to\u00e1n t\u1eed quan h\u1ec7</code>\u00a0m\u00ecnh li\u1ec7t k\u00ea d\u01b0\u1edbi \u0111\u00e2y:</p> <ul> <li><code>==</code>: Ki\u1ec3m tra 2 to\u00e1n h\u1ea1ng c\u00f3\u00a0<code>b\u1eb1ng nhau</code>\u00a0kh\u00f4ng? (<code>if(a==b)</code>)</li> <li><code>!=</code>: Ki\u1ec3m tra 2 to\u00e1n h\u1ea1ng c\u00f3\u00a0<code>kh\u00e1c nhau</code>\u00a0kh\u00f4ng? (<code>if(a!=b)</code>)</li> <li><code>&gt;</code>: Ki\u1ec3m tra to\u00e0n h\u1ea1ng A c\u00f3\u00a0<code>l\u1edbn h\u01a1n</code>\u00a0B kh\u00f4ng? (<code>if(a&gt;b)</code>)</li> <li><code>&lt;</code>: Ki\u1ec3m tra to\u00e0n h\u1ea1ng A c\u00f3\u00a0<code>nh\u1ecf h\u01a1n</code>\u00a0B kh\u00f4ng? (<code>if(a&lt;b)</code>)</li> <li><code>&gt;=</code>: Ki\u1ec3m tra to\u00e0n h\u1ea1ng A c\u00f3\u00a0<code>l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng</code>\u00a0B kh\u00f4ng? (<code>if(a&gt;=b)</code>)</li> <li><code>&lt;=</code>: Ki\u1ec3m tra to\u00e0n h\u1ea1ng A c\u00f3\u00a0<code>nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng</code>\u00a0B kh\u00f4ng? (<code>if(a&lt;=b)</code>)</li> </ul> <p>T\u1ea5t c\u1ea3\u00a0<code>to\u00e1n t\u1eed quan h\u1ec7</code>\u00a0\u1edf tr\u00ean, khi th\u1ef1c hi\u1ec7n xong n\u00f3 s\u1ebd tr\u1ea3 v\u1ec1 l\u00e0 ki\u1ec3u\u00a0<code>boolean</code>, n\u00ean b\u1ea1n c\u00f3 th\u1ec3 g\u00e1n n\u00f3 v\u00e0o m\u1ed9t bi\u1ebfn b\u1ea5t k\u1ef3, nh\u01b0 l\u00e0y:</p> <pre><code>int a = 5;\nint b = 6;\n\nboolean result = a == b; // false\n\nSystem.out.println(\"Result: \" + result);\n\n// K\u1ebft qu\u1ea3 in ra tr\u00ean m\u00e0n h\u00ecnh:\n// \"Result: false\"\n\nif(result){ // vi\u1ebft t\u1eaft c\u1ee7a if(result == true)\n    System.out.println(\"Result is true\");\n}\n</code></pre> <p>\u0110\u1ebfn \u0111\u00e2y, c\u00f3 th\u1ec3 n\u00f3i c\u00e2u l\u1ec7nh\u00a0<code>if</code>\u00a0th\u1ef1c ch\u1ea5t nh\u1eadn v\u00e0o m\u1ed9t gi\u00e1 tr\u1ecb\u00a0<code>boolean</code>.</p>"},{"location":"java/#else","title":"else","text":"<p>Ti\u1ebfp theo, ch\u00fang ta t\u1edbi v\u1edbi d\u1ea1ng \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a\u00a0<code>if</code>\u00a0ch\u00ednh l\u00e0 c\u1ea5u tr\u00fac\u00a0<code>if else</code>.</p> <pre><code>if ([\u0111i\u1ec1u ki\u1ec7n]){\n    // Th\u1ef1c hi\u1ec7n \u0111o\u1ea1n code n\u1ebfu [\u0111i\u1ec1u ki\u1ec7n] l\u00e0 `true`.\n} else {\n    // Th\u1ef1c hi\u1ec7n \u0111o\u1ea1n code trong n\u00e0y n\u1ebfu [\u0111i\u1ec1u ki\u1ec7n] l\u00e0 `false`\n}\n//C\u00e1c \u0111o\u1ea1n code \u1edf d\u01b0\u1edbi th\u1ef1c hi\u1ec7n b\u00ecnh th\u01b0\u1eddng sau khi if ho\u1eb7c else di\u1ec5n ra\n</code></pre> <p>V\u00ed d\u1ee5:</p> <pre><code>int a = 5;\nif ( (a + 2) == 7 ){\n    System.out.println(\"B\u1eb1ng 7\");\n    // S\u1eed d\u1ee5ng bi\u1ebfn `a` \u1edf ngay trong scope {} c\u1ee7a `if`,, nh\u01b0 b\u00e0i #2 m\u00ecnh c\u00f3 n\u00f3i, bi\u1ebfn \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong c\u00e1c scope con ho\u1eb7c b\u1eb1ng c\u1ea5p\n    System.out.println(\"Gi\u00e1 tr\u1ecb l\u00fac n\u00e0y c\u1ee7a a = \" + a);\n}else{\n    System.out.println(\"Kh\u00e1c 7\");\n    System.out.println(\"Gi\u00e1 tr\u1ecb l\u00fac n\u00e0y c\u1ee7a a = \" + a);\n    int b = 7; // T\u1ea1o ra 1 bi\u1ebfn b trong else\n}\n\nb = 50; // L\u1ed7i, kh\u00f4ng bi\u1ebft b l\u00e0 g\u00ec, v\u00ec b \u1edf scope nh\u1ecf h\u01a1n, b\u00ean ngo\u00e0i kh\u00f4ng hi\u1ec3u.\n</code></pre>"},{"location":"java/#toan-tu-logic","title":"To\u00e1n t\u1eed logic","text":"<p>To\u00e1n t\u1eed logic l\u00e0 nh\u1eefng to\u00e1n t\u1eed gi\u00fap ch\u00fang ta k\u1ebft h\u1ee3p nhi\u1ec1u [\u0111i\u1ec1u ki\u1ec7n] l\u1ea1i v\u1edbi nhau.</p> <p>V\u00ed d\u1ee5 m\u00ecnh n\u00f3i:\u00a0<code>\"N\u1ebfu ab = 3 V\u00c0 ac = 4 V\u00c0 bc = 5 th\u00ec abc l\u00e0 tam gi\u00e1c vu\u00f4ng\"</code></p> <p>Th\u00ec trong code c\u1ea7n vi\u1ebft ch\u01b0\u01a1ng tr\u00ecnh nh\u01b0 th\u1ebf n\u00e0o?</p> <p>C\u00e1ch 1: S\u1eed d\u1ee5ng\u00a0<code>if</code>\u00a0th\u00f4ng th\u01b0\u1eddng.</p> <pre><code>int ab = 3;\nint ac = 4;\nint bc = 5;\n\nif(ab == 3){\n    if(ac == 4){\n        if(bc == 5){\n            System.out.println(\"abc l\u00e0 tam gi\u00e1c c\u1ef1c vu\u00f4ng\");\n        }\n    }\n}\n</code></pre> <p>C\u00e1ch 2: S\u1eed d\u1ee5ng\u00a0<code>if</code>\u00a0v\u00e0\u00a0<code>to\u00e1n t\u1eed logic</code></p> <pre><code>int ab = 3;\nint ac = 4;\nint bc = 5;\n\n// N\u1ebfu ab = 3 V\u00c0 ac = 4 V\u00c0 bc = 5\nif(ab == 3 &amp;&amp; ac == 4 &amp;&amp; bc==5){\n    // th\u00ec abc l\u00e0 tam gi\u00e1c vu\u00f4ng\n    System.out.println(\"abc l\u00e0 tam gi\u00e1c c\u1ef1c vu\u00f4ng\");\n}\n</code></pre> <p>C\u00e1c b\u1ea1n nh\u00ecn v\u00ed d\u1ee5 c\u0169ng \u0111o\u00e1n ra\u00a0<code>&amp;&amp;</code>\u00a0ch\u00ednh l\u00e0\u00a0<code>to\u00e1n t\u1eed logic</code>\u00a0\u0111\u1ea1i di\u1ec7n cho kh\u00e1i ni\u1ec7m\u00a0<code>AND</code>. Ch\u00fang ta c\u00f3 t\u1ea5t c\u1ea3 c\u00e1c lo\u1ea1i\u00a0<code>to\u00e1n t\u1eed logic</code>\u00a0nh\u01b0 sau:</p> <ul> <li><code>&amp;&amp;</code>: AND</li> <li><code>||</code>: OR</li> <li><code>!</code>: NOT</li> </ul> <p>M\u1ee5c ti\u00eau c\u1ee7a c\u00e1c\u00a0<code>to\u00e1n t\u1eed logic</code>\u00a0l\u00e0 t\u00e1c \u0111\u1ed9ng l\u00ean c\u00e1c bi\u1ec3u th\u1ee9c\u00a0<code>boolean</code>\u00a0\u0111\u1ec3 cho ra m\u1ed9 bi\u1ebfn\u00a0<code>boolean</code>\u00a0m\u1edbi.</p>"},{"location":"java/#phep-and","title":"Ph\u00e9p AND (&amp;&amp;)","text":"<p>Ph\u00e9p\u00a0<code>&amp;&amp;</code>\u00a0ho\u1ea1t \u0111\u1ed9ng theo nguy\u00ean t\u1eafc,\u00a0<code>ch\u1ec9 c\u1ea7n c\u00f3 1 c\u00e1i sai, th\u00ec t\u1ea5t c\u1ea3 \u0111\u1ec1u sai</code>\u00a0hay\u00a0<code>T\u1ea5t c\u1ea3 \u0111\u1ec1u ph\u1ea3i \u0111\u00fang, m\u1edbi l\u00e0 \u0111\u00fang</code></p> <p>N\u1ebfu\u00a0<code>\"A \u0111\u00fang v\u00e0 B \u0111\u00fang v\u00e0 C sai th\u00ec k\u1ebft qu\u1ea3 v\u1eabn l\u00e0 sai\"</code></p> <pre><code>// B\u1ea1n ch\u1ea1y th\u1eed xem n\u00f3 \u0111i v\u00e0o ph\u1ea7n n\u00e0o nh\u00e9\nif(true &amp;&amp; true &amp;&amp; true &amp;&amp; false){\n    System.out.println(\"true\");\n}else{\n    System.out.println(\"false\");\n}\n</code></pre>"},{"location":"java/#phep-or","title":"Ph\u00e9p OR (||)","text":"<p>Ph\u00e9p\u00a0<code>||</code>\u00a0th\u00ec r\u1ea5t d\u1ec5 d\u00e3i,\u00a0<code>Ch\u1ec9 1 c\u00e1i \u0111\u00fang l\u00e0 \u0111\u1ee7</code></p> <pre><code>// B\u1ea1n ch\u1ea1y th\u1eed xem n\u00f3 \u0111i v\u00e0o ph\u1ea7n n\u00e0o nh\u00e9\nif(false || false || true || false){\n    System.out.println(\"true\");\n}else{\n    System.out.println(\"false\");\n}\n</code></pre>"},{"location":"java/#phep-not","title":"Ph\u00e9p NOT (!)","text":"<p>Ph\u00e9p\u00a0<code>!</code>\u00a0l\u00e0m ph\u1ee7 \u0111\u1ecbnh gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ec3u th\u1ee9c, n\u1ebfu n\u00f3 \u0111ang\u00a0<code>true</code>\u00a0th\u00ec bi\u1ebfn n\u00f3 th\u00e0nh\u00a0<code>false</code>\u00a0v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <pre><code>int a = 7;\nif(!(a == 7)){ // (a==7) =&gt; true g\u1eb7p th\u1eb1ng ! l\u1ea1i b\u1ecb chuy\u1ec3n th\u00e0nh false. =&gt; v\u00e0o v\u1ebf else\n    System.out.println(\"\u0110\u00e1ng nh\u1ebd ra n\u00ean v\u00e0o \u0111\u00e2y\");\n}else{\n    System.out.println(\"But nope, n\u00f3 l\u1ea1i v\u00e0o \u0111\u00e2y\");\n}\n</code></pre>"},{"location":"java/#ham-function","title":"H\u00e0m (Function)","text":"<pre><code>public class Calculation {\n    public static void main(String[] args){\n        f(5,6);\n        f(2,3);\n        f(1,10);\n    }\n\n    public static void f(int x, int y){\n        int a = x + y;\n        System.out.println(\"In a ra m\u00e0n h\u00ecnh: \" + a);\n    }\n}\n// K\u1ebft qu\u1ea3 khi ch\u1ea1y:\n\n// In a ra m\u00e0n h\u00ecnh: 11\n// In a ra m\u00e0n h\u00ecnh: 5\n// In a ra m\u00e0n h\u00ecnh: 11\n</code></pre>"},{"location":"java/#cach-khai-bao_1","title":"C\u00e1ch khai b\u00e1o","text":"<p>C\u00e1ch khai b\u00e1o m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c nh\u01b0 sau:</p> <p><code>[ki\u1ec3u_truy_c\u1eadp] [ki\u1ec3u_tr\u1ea3_v\u1ec1] [t\u00ean_ph\u01b0\u01a1ng_th\u1ee9c] ([danh_s\u00e1ch_tham_s\u1ed1]){}</code></p> <p>v\u00ed d\u1ee5:</p> <pre><code>public static void f(int x, int y){\n    // Code c\u1ee7a b\u1ea1n\n}\n\npublic static void main(String[] args){\n\n}\n</code></pre> <p>V\u00e0 khai b\u00e1o \u1edf ngo\u00e0i h\u00e0m\u00a0<code>main()</code>. T\u1edbi \u0111\u00e2y, b\u1ea1n hi\u1ec3u\u00a0<code>main()</code>\u00a0c\u0169ng l\u00e0 m\u1ed9t\u00a0<code>h\u00e0m (function)</code>. Tuy nhi\u00ean n\u00f3 \u0111\u1eb7c bi\u1ec7t v\u00ec c\u00fa ph\u00e1p c\u1ee7a n\u00f3 l\u00e0 c\u1ed1 \u0111\u1ecbnh v\u00e0 \u0111\u01b0\u1ee3c\u00a0<code>Java</code>\u00a0t\u00ecm t\u1edbi \u0111\u1ec3 \u0111\u1ecdc \u0111\u1ea7u ti\u00ean.</p> <p>1 -\u00a0<code>[ki\u1ec3u_truy_c\u1eadp]</code>:</p> <p>Trong v\u00ed d\u1ee5 tr\u00ean\u00a0<code>[ki\u1ec3u_truy_c\u1eadp]</code>\u00a0ch\u00ednh l\u00e0 v\u1ebf\u00a0<code>public static</code>. N\u00f3 \u0111\u1ecbnh ngh\u0129a ph\u1ea1m vi\u00a0<code>h\u00e0m</code>\u00a0\u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng. ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u \u1edf c\u00e1c b\u00e0i sau nh\u00e9 c\u00e1c b\u1ea1n, b\u00e2y gi\u1edd b\u1ea1n h\u00e3y m\u1eb7c \u0111\u1ecbnh s\u1eed d\u1ee5ng\u00a0<code>public static</code>\u00a0\u1edf tr\u01b0\u1edbc m\u1ed7i h\u00e0m khai b\u00e1o \u0111\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c nh\u00e9. \u1ede b\u00e0i n\u00e0y, ch\u00fang ta t\u1ea1m hi\u1ec3u v\u1edbi nhau:\u00a0<code>public static</code>\u00a0l\u00e0\u00a0<code>\"truy c\u1eadp \u1edf b\u1ea5t c\u1ee9 \u0111\u00e2u\"</code>\u00a0t\u1ee9c c\u00f3 th\u1ec3 g\u1ecdi h\u00e0m n\u00e0y \u1edf b\u1ea5t k\u00ec ch\u1ed7 n\u00e0o.</p> <p>2 -\u00a0<code>[ki\u1ec3u_tr\u1ea3_v\u1ec1]</code>:</p> <p>T\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi ph\u1ea7n\u00a0<code>void</code>\u00a0\u1edf v\u00ed d\u1ee5 tr\u00ean, ki\u1ec3u tr\u1ea3 v\u1ec1 l\u00e0 gi\u00e1 tr\u1ecb ch\u00fang ta nh\u1eadn \u0111\u01b0\u1ee3c sau khi g\u1ecdi h\u00e0m.</p> <p>B\u1ea1n h\u00e3y nh\u1edb l\u1ea1i, khi truy\u1ec1n\u00a0<code>x</code>\u00a0v\u00e0o\u00a0<code>f(x)</code>\u00a0ch\u00fang ta s\u1ebd nh\u1eadn l\u1ea1i l\u00e0\u00a0<code>y</code>. Th\u00ec h\u00e0m c\u0169ng v\u1eady, ch\u00fang ta c\u00f3 th\u1ec3 tr\u1ea3 l\u1ea1i m\u1ed9t gi\u00e1 tr\u1ecb g\u00ec \u0111\u00f3. v\u00ed d\u1ee5:</p> <pre><code>// [ki\u1ec3u tr\u1ea3 v\u1ec1]: int\npublic static int tong(int x, int y){\n    int t = x + y; // T\u00ednh t\u1ed5ng 2 s\u00f3 x, y\n    return t; // tr\u1ea3 s\u1ed1 \u0111\u00f3 ra s\u1eed d\u1ee5ng c\u00e2u l\u1ec7nh `return {bi\u1ebfn}`\n}\n\npublic static void main(String[] args){\n    int t = tong(5,6); // L\u1ea5y gi\u00e1 tr\u1ecb tr\u1ea3 ra, g\u00e1n n\u00f3 v\u00e0o t;\n}\n</code></pre> <p>T\u00f4i \u0111\u1ecbnh ngh\u0129a m\u1ed9t h\u00e0m t\u00ednh t\u1ed5ng\u00a0<code>tong(x,y)</code>\u00a0nh\u1eadn v\u00e0o 2 s\u1ed1 nguy\u00ean, v\u00e0 y\u00eau c\u1ea7u n\u00f3 tr\u1ea3 ra m\u1ed9t s\u1ed1\u00a0<code>int</code>.</p> <p>C\u00e1c ki\u1ec3u tr\u1ea3 v\u1ec1:</p> <ul> <li><code>primitive</code>:\u00a0<code>int</code>,\u00a0<code>boolean</code>,\u00a0<code>char</code>, ...</li> <li><code>Object</code>:\u00a0<code>String</code>, (c\u00f2n r\u1ea5t nhi\u1ec1u, s\u1ebd h\u1ecdc \u1edf b\u00e0i ti\u1ebfp theo)</li> <li><code>void</code>: Kh\u00f4ng tr\u1ea3 v\u1ec1 g\u00ec c\u1ea3</li> </ul> <p>\u1ede v\u00ed d\u1ee5 \u0111\u1ea7u ti\u00ean m\u00ecnh \u0111\u00e3 s\u1eed d\u1ee5ng\u00a0<code>void</code>\u00a0\u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a h\u00e0m.</p> <pre><code>public static void f(int x, int y){\n    int a = x + y;\n    System.out.println(\"In a ra m\u00e0n h\u00ecnh: \" + a);\n}\n</code></pre> <p>\u0110i\u1ec1u n\u00e0y n\u00f3i l\u00e0 h\u00e0m c\u1ee7a ch\u00fang ta th\u1ef1c hi\u1ec7n m\u1ed9t ho\u1ea1t \u0111\u1ed9ng kh\u00e9p k\u00edn, v\u00e0 kh\u00f4ng c\u00f3 nhu c\u1ea7u tr\u1ea3 ra ngo\u00e0i c\u00e1i g\u00ec c\u1ea3. M\u00ecnh ch\u1ec9 t\u00ednh t\u1ed5ng r\u1ed3i in lu\u00f4n ra m\u00e0n h\u00ecnh th\u00f4i, kh\u00f4ng c\u1ea7n \u0111\u01b0a g\u00ec ra ngo\u00e0i c\u1ea3.</p> <p>3 -\u00a0<code>[danh_s\u00e1ch_tham_s\u1ed1]</code></p> <p>Tham s\u1ed1 \u0111\u1ea7u v\u00e0o, l\u00e0 nh\u1eefng th\u1ee9 ch\u00fang ta \u0111\u01b0a v\u00e0o h\u00e0m, \u0111\u1ecbnh ngh\u0129a tham s\u1ed1 \u0111\u1ea7u v\u00e0o bao g\u1ed3m\u00a0<code>[ki\u1ec3u_d\u1eef_li\u1ec7u] [t\u00ean_bi\u1ebfn]</code>. Ch\u00fang ta c\u00f3 truy\u1ec1n nhi\u1ec1u tham s\u1ed1 v\u00e0o\u00a0<code>h\u00e0m</code>\u00a0b\u1eb1ng c\u00e1ch \u0111\u1eb7t d\u1ea7u ph\u1ea9y\u00a0<code>,</code>\u00a0gi\u1eefa m\u1ed7i tham s\u1ed1.</p> <pre><code>public static int f(int x, int y, int z, ... ){\n    // code\n}\n</code></pre> <p>\u1ede \u0111\u00e2y l\u01b0u \u00fd ph\u1ea7n\u00a0<code>[t\u00ean_bi\u1ebfn]</code>\u00a0b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1eb7t t\u00ean b\u1ea5t k\u1ef3. ch\u1eb3ng h\u1ea1n:</p> <pre><code>// H\u00e0m nh\u1eadn v\u00e0o 2 bi\u1ebfn `x`, `y` v\u00e0 tr\u1ea3 ra k\u1ebft qu\u1ea3 `boolean` xem n\u00f3 c\u00f3 b\u1eb1ng nhau hay kh\u00f4ng\npublic static boolean bangnhau(int x, int y){\n    return x == y;\n}\n\npublic static void main(String[] args){\n    int a = 5; // t\u00ean bi\u1ebfn l\u00e0 `a`\n    int b = 6; // t\u00ean bi\u1ebfn l\u00e0 `b`\n\n    boolean ketqua = bangnhau(a,b); // \u0111\u01b0a `a` , `b` v\u00e0o h\u00e0m.\n    // b\u1ea3n ch\u1ea5t khi g\u1ecdi h\u00e0m `bangnhau`:\n    // int x = a;\n    // int y = b;\n    // return x == y;\n    //\n    System.out.println(\"K\u1ebft qu\u1ea3: \" + ketqua);\n}\n</code></pre> <p>B\u1ea1n \u0111\u1ecbnh ngh\u0129a\u00a0<code>tham s\u1ed1 \u0111\u1ea7u v\u00e0o</code>\u00a0l\u00e0\u00a0<code>x</code>\u00a0v\u00e0\u00a0<code>y</code>\u00a0th\u00ec n\u00f3 ch\u1ec9 hi\u1ec3u trong \u1edf h\u00e0m \u0111\u00f3 th\u00f4i, v\u00e0 nh\u1eefng gi\u00e1 tr\u1ecb truy\u1ec1n v\u00e0o s\u1ebd g\u00e1n v\u00e0o c\u00e1c bi\u1ebfn\u00a0<code>x</code>\u00a0v\u00e0\u00a0<code>y</code>.</p>"},{"location":"java/#nhap-xuat-du-lieu-trong-java","title":"Nha\u0323\u0302p xua\u0302\u0301t du\u031b\u0303 lie\u0323\u0302u trong Java","text":""},{"location":"java/#nhap-xuat-tu-ban-phim","title":"Nh\u1eadp xu\u1ea5t t\u1eeb b\u00e0n ph\u00edm","text":"<pre><code>public class Calculation {\n    public static void main(String[] args) {\n        // Ch\u00fang ta khai b\u00e1o 3 bi\u1ebfn a,b,c kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb.\n        int a, b, c;\n\n        //Khai b\u00e1o \u0111\u1ed1i t\u01b0\u1ee3ng Scanner, gi\u00fap ch\u00fang ta nh\u1eadn th\u00f4ng tin t\u1eeb keyboard\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Nh\u1eadp a: \"); //print thay v\u00ec println, n\u00f3 s\u1ebd in ra, nh\u01b0ng kh\u00f4ng xu\u1ed1ng d\u00f2ng\n\n        a = sc.nextInt(); // sc.nextInt() l\u00e0 c\u00e1ch \u0111\u1ec3 l\u1ea5y gi\u00e1 tr\u1ecb t\u1eeb b\u00e0n ph\u00edm, n\u00f3 s\u1ebd ch\u1edd t\u1edbi khi ch\u00fang ta nh\u1eadp m\u1ed9t s\u1ed1.\n        System.out.print(\"Nh\u1eadp b: \");\n        b = sc.nextInt();\n         System.out.print(\"Nh\u1eadp c: \");\n        c = sc.nextInt();\n        // In c\u00e1c gi\u00e1 tr\u1ecb ra m\u00e0n h\u00ecnh\n        System.out.println(\"a = \" + a + \", b = \" + b + \", c = \" + c);\n        //  \u0110\u00e2y l\u00e0 ph\u00e9p c\u1ed9ng String m\u00ecnh \u0111\u00e3 n\u00f3i trong B\u00e0i #1.\n}\n</code></pre> <p>C\u00e1i d\u00f2ng l\u1ec7nh n\u00e0y\u00a0<code>a = sc.nextInt()</code>. N\u00f3 s\u1ebd ch\u1edd cho t\u1edbi khi b\u1ea1n nh\u1eadp 1 s\u1ed1 nguy\u00ean v\u00e0 g\u00f5\u00a0<code>Enter</code>\u00a0th\u00ec th\u00f4i. Gi\u1ea3 s\u1eed m\u00ecnh nh\u1eadp\u00a0<code>5</code></p> <p>Ch\u01b0\u01a1ng tr\u00ecnh l\u1ea1i ti\u1ebfp t\u1ee5c ch\u1ea1y cho t\u1edbi khi g\u1eb7p c\u00e2u l\u1ec7nh\u00a0<code>sc.nextInt()</code>\u00a0ti\u1ebfp theo. V\u00e0 c\u1ee9 ti\u1ebfp t\u1ee5c nh\u01b0 v\u1eady cho t\u1edbi d\u00f2ng l\u1ec7nh cu\u1ed1i c\u00f9ng.</p> <p>T\u1eeb \u0111\u00e2y, c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>Scanner</code>\u00a0\u0111\u00e3 l\u00e0m nhi\u1ec7m v\u1ee5 l\u00e0 nh\u1eadn d\u1eef li\u1ec7u ng\u01b0\u1eddi d\u00f9ng nh\u1eadp t\u1eeb b\u00e0n ph\u00edm, v\u00e0 g\u00e1n n\u00f3 v\u00e0o bi\u1ebfn, b\u1eb1ng c\u00e2u l\u1ec7nh\u00a0<code>nextInt</code>.</p> <p>B\u00e2y gi\u1edd quay tr\u1edf ng\u01b0\u1ee3c l\u00ean tr\u00ean 1 ch\u00fat, \u1edf c\u00e2u l\u1ec7nh:</p> <pre><code>Scanner sc = new Scanner(System.in);\n</code></pre> <p>c\u00e1c b\u1ea1n s\u1ebd th\u1ea5y m\u1ed9t kh\u00e1i ni\u1ec7m l\u00e0\u00a0<code>new</code>. c\u00e1i n\u00e0y th\u00ec [B\u00e0i #5][link-bai5] m\u00ecnh s\u1ebd n\u00f3i chi ti\u1ebft, c\u00f2n \u1edf \u0111\u00e2y th\u00ec b\u1ea1n hi\u1ec3u n\u00f3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ea1o ra 1 \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>Scanner</code>. </p>"},{"location":"java/#cac-phuong-thuc-nhap-xuat","title":"C\u00e1c ph\u01b0\u01a1ng th\u1ee9c nh\u1eadp xu\u1ea5t","text":"<p><code>Scanner</code>\u00a0c\u00f3 m\u1ed9t lo\u1ea1t c\u00e1c h\u00e0m h\u1ed7 tr\u1ee3 nh\u01b0 sau:</p> <ul> <li><code>next()</code>: Nh\u1eadn v\u00e0o m\u1ed9t\u00a0<code>String token</code>\u00a0(nh\u1eadn v\u00e0o 1 t\u1eeb \u0111\u1ea7u ti\u00ean thay c\u1ea3 c\u00e2u)</li> <li><code>nextInt()</code>: Nh\u1eadn v\u00e0o m\u1ed9t s\u1ed1\u00a0<code>int</code></li> <li><code>nextLong()</code>: Nh\u1eadn v\u00e0o m\u1ed9t s\u1ed1\u00a0<code>long</code></li> <li><code>nextFloat()</code>: Nh\u1eadn v\u00e0o m\u1ed9t s\u1ed1\u00a0<code>float</code></li> <li><code>nextDouble()</code>: Nh\u1eadn v\u00e0o m\u1ed9t s\u1ed1\u00a0<code>double</code></li> <li><code>sc.nextLine()</code>: Nh\u1eadn v\u00e0o m\u1ed9t\u00a0<code>chu\u1ed7i String</code>\u00a0(C\u1ea3 1 c\u00e2u)</li> <li><code>nextByte()</code>: Nh\u1eadn v\u00e0o m\u1ed9t\u00a0<code>byte</code></li> <li><code>nextBoolean()</code>: Nh\u1eadn v\u00e0o m\u1ed9t\u00a0<code>boolean</code></li> </ul> <p>C\u00e1c h\u00e0m tr\u00ean b\u1ea1n hi\u1ec3u nguy\u00ean l\u00fd l\u00e0 n\u00f3 \u0111\u1ec1u s\u1ebd\u00a0<code>ch\u1edd</code>\u00a0cho t\u1edbi khi b\u1ea1n nh\u1eadp ki\u1ec3u d\u1eef li\u1ec7u n\u00f3 mu\u1ed1n v\u00e0o.</p> <p>C\u00f3\u00a0<code>next()</code>\u00a0v\u00e0\u00a0<code>nextLine()</code>\u00a0kh\u00e1 \u0111\u1eb7c bi\u1ec7t, m\u00ecnh s\u1ebd v\u00ed d\u1ee5:</p> <pre><code>Scanner sc = new Scanner(System.in); //T\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng Scanner\nSystem.out.print(\"Nh\u1eadp g\u00ec \u0111\u00f3: \");\nString a = sc.nextLine(); // nh\u1eadn v\u00e0o 1 string\nSystem.out.println(\"B\u1ea1n v\u1eeba nh\u1eadp: \"+a);\n\nSystem.out.print(\"Nh\u1eadp th\u00eam g\u00ec \u0111i: \");\nString b = sc.next(); // c\u0169ng nh\u1eadn v\u00e0o 1 String\nSystem.out.println(\"B\u1ea1n v\u1eeba nh\u1eadp: \"+b);\n</code></pre> <p><code>nextLine</code>\u00a0th\u00ec nh\u1eadn v\u00e0o c\u1ea3 1 chu\u1ed7i d\u00e0i\u00a0<code>String</code>, cho t\u1edbi khi b\u1ea1n nh\u1ea5n\u00a0<code>Enter</code>. C\u00f2n\u00a0<code>next</code>\u00a0d\u00f9 b\u1ea1n c\u00f3 nh\u1eadp d\u00e0i nh\u01b0 n\u00e0o, n\u00f3 c\u0169ng nh\u1eadn 1 t\u1eeb \u0111\u1ea7u ti\u00ean th\u00f4i.</p>"},{"location":"java/#ban-chat-cuanext","title":"B\u1ea3n ch\u1ea5t c\u1ee7a<code>next</code>","text":"<p>B\u1ea1n \u0111\u1ec3 \u00fd l\u00e0 c\u00e1c h\u00e0m l\u1ea5y gi\u00e1 tr\u1ecb t\u1eeb b\u00e0n ph\u00edm \u0111\u1ec1u c\u00f3 ch\u1eef\u00a0<code>next</code>. B\u00e2y gi\u1edd b\u1ea1n ch\u1ea1y cho m\u00ecnh v\u00ed d\u1ee5 n\u00e0y, b\u1ea1n s\u1ebd hi\u1ec3u:</p> <pre><code>public static void main(String[] args) {\n    int a,b,c;\n    Scanner sc = new Scanner(System.in); // T\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng Scanner\n    System.out.print(\"Nh\u1eadp a: \");\n    a = sc.nextInt();\n    b = sc.nextInt();\n    c = sc.nextInt();\n    System.out.println(\"a = \"+a);\n    System.out.println(\"b = \"+b);\n    System.out.println(\"c = \"+c);\n}\n</code></pre> <p>B\u1ea1n s\u1ebd th\u1ea5y l\u00e0, n\u00f3 \u0111\u01b0a\u00a0tu\u1ea7n t\u1ef1\u00a0c\u00e1c gi\u00e1 tr\u1ecb hi\u1ec7n c\u00f3 tr\u00ean b\u00e0n ph\u00edm v\u00e0o c\u00e1c bi\u1ebfn. b\u1ea3n ch\u1ea5t c\u1ee7a ch\u1eef\u00a0<code>next</code>\u00a0ch\u00ednh l\u00e0\u00a0tu\u1ea7n t\u1ef1. N\u00f3 s\u1ebd ch\u1edd b\u1ea1n nh\u1eadp n\u1ebfu kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb g\u00ec tr\u00ean m\u00e0n h\u00ecnh, nh\u01b0ng n\u1ebfu \u0111\u00e3 c\u00f3 s\u1eb5n gi\u00e1 tr\u1ecb r\u1ed3i, n\u00f3 s\u1ebd ghi nh\u1edb trong\u00a0<code>b\u1ed9 \u0111\u1ec7m</code>\u00a0v\u00e0 khi g\u1eb7p h\u00e0m\u00a0<code>nextInt()</code>\u00a0n\u00f3 kh\u00f4ng ch\u1edd n\u1eefa, m\u00e0 n\u00f3 l\u1ea5y lu\u00f4n c\u00e1i gi\u00e1 tr\u1ecb c\u00f2n th\u1eeba ra, ch\u01b0a s\u1eed d\u1ee5ng \u0111\u1ebfn \u0111\u1ec3 g\u1eafn lu\u00f4n v\u00e0o bi\u1ebfn \ud83d\ude02</p> <p>Nh\u00ecn nh\u01b0 nh\u01b0 n\u00e0y cho d\u1ec5 hi\u1ec3u:</p> <pre><code>public static void main(String[] args) {\n    int a,b,c;\n    Scanner sc = new Scanner(System.in); // T\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng Scanner\n    System.out.print(\"Nh\u1eadp a: \");\n    a = sc.nextInt(); // Ch\u1edd b\u1ea1n nh\u1eadp.\n    // b\u1ea1n nh\u1eadp: 5 6 7 8 9 10\n    // b\u1ed9 \u0111\u1ec7m = 5 6 7 8 9 10\n    // l\u1ea5y 5 ra, g\u1eafn v\u00e0o a\n    // b\u1ed9 \u0111\u1ec7m c\u00f2n: 6 7 8 9 10\n    b = sc.nextInt(); // g\u1eb7p l\u1ec7nh nextInt()\n    // th\u1ea5y b\u1ed9 \u0111\u1ec7m c\u00f2n, l\u1ea5y 6 ra, g\u1eafn v\u00e0o b\n    // b\u1ed9 \u0111\u1ec7m c\u00f2n: 7 8 9 10\n    c = sc.nextInt(); // g\u1eb7p l\u1ec7nh nextInt()\n    // th\u1ea5y b\u1ed9 \u0111\u1ec7m c\u00f2n th\u1eeba, l\u1ea5y 7 ra, g\u1eafn v\u00e0o b\n    // b\u1ed9 \u0111\u1ec7m c\u00f2n: 8 9 10\n    System.out.println(\"a = \"+a); // in a\n    System.out.println(\"b = \"+b); // in b\n    System.out.println(\"c = \"+c); // in c\n}\n</code></pre>"},{"location":"java/#input-output-tu-file","title":"Inp\u1ee5t/ outp\u1ee5t t\u1eeb File","text":"<p>\u0110\u1ec3 cho thu\u1eadn ti\u1ec7n trong vi\u1ec7c \u0111\u1ecdc ghi, th\u00ec ngo\u00e0i b\u00e0n ph\u00edm, m\u1ed9t trong nh\u1eefng y\u00eau c\u1ea7u quan tr\u1ecdng khi l\u1eadp tr\u00ecnh \u0111\u00f3 l\u00e0 nh\u1eadp xu\u1ea5t d\u1eef li\u1ec7u t\u1eeb File, ph\u1ea7n n\u00e0y s\u1ebd kh\u00f4ng kh\u00e1c nhi\u1ec1u v\u1edbi t\u1eeb b\u00e0n ph\u00edm \u0111\u00e2u c\u00e1c b\u1ea1n, m\u00ecnh s\u1ebd h\u01b0\u1edbng d\u1eabn.</p> <p>T\u1ea1i th\u01b0 m\u1ee5c g\u1ed1c c\u1ee7a project, b\u1ea1n click\u00a0<code>New</code>\u00a0&gt;\u00a0<code>File</code>. T\u1ea1o 1 t\u1ec7p t\u00ean l\u00e0\u00a0<code>input.txt</code>. Nh\u01b0 h\u00ecnh:</p> <pre><code>public static void main(String[] args) throws FileNotFoundException { // Th\u00eam c\u00e1i n\u00e0y v\u00e0o \u0111\u00e2y\n    int a,b,c;\n    Scanner sc = new Scanner(new File(\"input.txt\")); // T\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng Scanner \u0111\u1ecdc t\u1edbi c\u00e1i file v\u1eeba t\u1ea1o\n    System.out.print(\"Nh\u1eadp a: \");\n    a = sc.nextInt();\n    b = sc.nextInt();\n    c = sc.nextInt();\n    System.out.println(\"a = \"+a); // in a\n    System.out.println(\"b = \"+b); // in b\n    System.out.println(\"c = \"+c); // in c\n}\n// K\u1ebft qu\u1ea3 ch\u1ea1y:\n// Nh\u1eadp a: a = 5\n// b = 7\n// c = 8\n</code></pre> <p>\u0110o\u1ea1n\u00a0<code>throws FileNotFoundException</code>. \u1ede \u0111\u00e2y th\u00ec b\u1ea1n hi\u1ec3u n\u00f3 l\u00e0 l\u1ed7i c\u00f3 th\u1ec3 x\u1ea3y ra, n\u1ebfu n\u00f3 kh\u00f4ng t\u00ecm th\u1ea5y file\u00a0<code>input.txt</code>\u00a0th\u00ec n\u00f3 s\u1ebd x\u1ea3y ra c\u00e1i l\u1ed7i kia. Ch\u00fang ta s\u1ebd x\u1eed l\u00fd l\u1ed7i \u0111\u00f3 sau, hi\u1ec7n t\u1ea1i th\u00ec n\u1ebfu b\u1ea1n nh\u1eadp \u0111\u00fang t\u00ean File th\u00ec kh\u00f4ng th\u1ec3 l\u1ed7i \u0111\u01b0\u1ee3c.# Vi\u0300 sao ne\u0302n su\u031b\u0309 du\u0323ng StringBuffer</p> <p>C\u00f9ng xem v\u00ed d\u1ee5 n\u00e0y nh\u00e9:</p> <pre><code>long start = System.nanoTime();\n\nString s = \"Hello\";\nfor (int i = 0; i &lt; 1000; i++) {\n    s += \" world\";\n}\nlong end = System.nanoTime();\nSystem.out.println(\"Total time: \"+(end-start));\n\n// K\u1ebft qu\u1ea3:\n// Total time: 17495917 ns\n// = 17.4 ms (Milliseconds)\n</code></pre> <p>B\u00e2y gi\u1edd, v\u1eabn l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh t\u01b0\u01a1ng t\u1ef1, m\u00ecnh s\u1eed s\u1ee5ng\u00a0<code>String Buffer</code></p> <pre><code>long start = System.nanoTime();\n\nStringBuffer sb = new StringBuffer(\"Hello\");\nfor (int i = 0; i &lt; 1000; i++) {\n    sb.append(\" world\");\n}\nString s = sb.toString();\nlong end = System.nanoTime();\nSystem.out.println(\"Total time: \"+(end-start));\n\n// K\u1ebft qu\u1ea3:\n// Total time: 461198 ns\n// = 0.46 ms\n</code></pre> <p><code>String Buffer</code>\u00a0nhanh h\u01a1n g\u1ea5p\u00a038 l\u1ea7n.</p> <p>Hi\u1ec7u n\u0103ng \u0111\u01b0\u1ee3c ch\u1ea1y tr\u00ean Mac Pro 2017, t\u1ea1i m\u00e1y b\u1ea1n c\u00f3 th\u1ec3 s\u1ebd kh\u00e1c, nh\u01b0ng ch\u1eafc ch\u1eafn r\u1eb1ng\u00a0<code>StringBuffer</code>\u00a0lu\u00f4n nhanh h\u01a1n!</p>"},{"location":"java/#goc-giai-thich","title":"G\u00f3c gi\u1ea3i th\u00edch","text":"<p>C\u00f3 m\u1ed9t \u0111i\u1ec1u \u00edt b\u1ea1n h\u1ecdc l\u1eadp tr\u00ecnh\u00a0<code>Java</code>\u00a0\u0111\u1ec3 \u00fd, \u0111\u00f3 l\u00e0\u00a0<code>String</code>\u00a0l\u00e0\u00a0<code>immutable</code>. T\u1ee9c n\u1ed9i dung trong\u00a0<code>String</code>\u00a0l\u00e0 kh\u00f4ng \u0111\u01b0\u1ee3c quy\u1ec1n thay \u0111\u1ed5i.</p> <p>Nhi\u1ec1u b\u1ea1n l\u1ea7m t\u01b0\u1edfng r\u1eb1ng vi\u1ec7c n\u1ed1i x\u00e2u l\u00e0 b\u1ea1n thay \u0111\u1ed5i n\u1ed9i dung c\u1ee7a\u00a0<code>String</code>, nh\u01b0ng th\u1ef1c ch\u1ea5t b\u1ea1n \u0111ang t\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng ho\u00e0n to\u00e0n m\u1edbi:</p> <pre><code>String s = \"A\";\ns += \"B\";\n// Complier s\u1ebd t\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng m\u1edbi l\u00e0 \"AB\"\n// V\u00e0 g\u00e1n v\u00e0o `s`\n// B\u1ea3n ch\u1ea5t `s` b\u00e2y gi\u1edd l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng m\u1edbi ch\u1ee9 b\u1ea1n kh\u00f4ng h\u1ec1 thay \u0111\u1ed5i n\u1ed9i dung ban \u0111\u1ea7u c\u1ee7a `s`.\n// \u0110\u00e2y l\u00e0 nh\u1eefng g\u00ec \u1edf d\u01b0\u1edbi Compiler s\u1ebd l\u00e0m:\nStringBuffer sb = new StringBuffer(\"A\"); // Compiler V\u1eabn ph\u1ea3i x\u00e0i t\u1edbi StringBuffer\nsb.append(\"B\");\ns = sb.toString();\n</code></pre> <p>V\u00ec v\u1eady khi n\u1ed1i x\u00e2u trong\u00a0<code>Java</code>, vi\u1ec7c b\u1ea1n th\u1ef1c hi\u1ec7n n\u00f3 li\u00ean t\u1ee5c, s\u1ebd t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c kh\u1edfi t\u1ea1o li\u00ean t\u1ee5c v\u00e0 n\u1ed1i 2 x\u00e2u l\u1ea1i r\u1ed3i tr\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>String</code>\u00a0m\u1edbi d\u1eabn t\u1edbi chi ph\u00ed l\u1edbn.</p> <p><code>StringBuffer</code>\u00a0cho ph\u00e9p ch\u00fang ta thao t\u00e1c tr\u00ean m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng duy nh\u1ea5t v\u00e0 thay \u0111\u1ed5i \u0111\u01b0\u1ee3c n\u1ed9i dung trong n\u00f3. N\u1ebfu ban \u0111\u1ea7u n\u1ed9i dung l\u00e0\u00a0<code>\"A\"</code>, b\u1ea1n mu\u1ed1n n\u1ed1i th\u00eam\u00a0<code>\"B\"</code>\u00a0v\u00e0o. Th\u00ec n\u00f3 ch\u1ec9 c\u1ea7n g\u1eafn chu\u1ed7i\u00a0<code>bytes</code>\u00a0c\u1ee7a\u00a0<code>\"B\"</code>\u00a0v\u00e0o li\u1ec1n k\u1ec1 ngay sau\u00a0<code>\"A\"</code>\u00a0l\u00e0 xong. (V\u00ec n\u00f3 c\u00f3 th\u1ec3 thay \u0111\u1ed5i, kh\u00e1c v\u1edbi\u00a0<code>String</code>\u00a0l\u00e0\u00a0<code>immutable</code>).</p>"},{"location":"java/#huong-dan-java-reflection","title":"Hu\u031bo\u031b\u0301ng da\u0302\u0303n Java Reflection","text":""},{"location":"java/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p><code>Java Relection</code>\u00a0l\u00e0 m\u1ed9t core package trong th\u01b0 vi\u1ec7n chu\u1ea9n c\u1ee7a\u00a0<code>Java</code>. M\u1ee5c \u0111\u00edch c\u1ee7a n\u00f3 l\u00e0 cho ph\u00e9p ch\u00fang ta truy c\u1eadp v\u00e0o\u00a0g\u1ea7n nh\u01b0 m\u1ecdi th\u1ee9\u00a0b\u00ean trong \u0111\u1ed1i t\u01b0\u1ee3ng. \"D\u01b0\u1edbi m\u1ed9t g\u00f3c \u0111\u1ed9 kh\u00e1c\"!</p> <p>Ch\u00fang ta th\u01b0\u1eddng bi\u1ebft t\u1edbi\u00a0<code>Java</code>\u00a0th\u00f4ng qua kh\u00e1i ni\u1ec7m h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng nh\u01b0 sau:</p> <pre><code>String str = \"Hello Loda\";\nstr.toUpperCase(); // Ch\u00fang ta g\u1ecdi h\u00e0m toUpperCase() th\u00f4ng qua to\u00e1n t\u1eed \".\"\n// M\u1ecdi th\u1ee9 trong \u0111\u1ed1i t\u01b0\u1ee3ng l\u00e0 kh\u00e9p k\u00edn, ch\u00fang ta ph\u1ea3i g\u1ecdi th\u00f4ng qua h\u00e0m public\n</code></pre> <p>Ho\u1eb7c</p> <pre><code>public class Girl {\n    String name;\n    int age;\n    int atk;\n    int agi;\n    int def;\n    // ... V\u00e0 1000 thu\u1ed9c t\u00ednh kh\u00e1c\n\n    public static void main(String[] args) {\n        Girl girl = new Girl();\n        // Ch\u00fang ta th\u01b0\u1eddng ph\u1ea3i nh\u1edb t\u00ean thu\u1ed9c t\u00ednh \u0111\u1ec3 g\u1ecdi n\u00f3 ra\n        girl.name = \"Ngoc Trinh\";\n\n        // Gi\u00e1 s\u1eed class n\u00e0y c\u00f3 100 thu\u1ed9c t\u00ednh l\u00e0 String.\n        // B\u1ea1n mu\u1ed1n set gi\u00e1 tr\u1ecb c\u1ee7a t\u1ea5t c\u1ea3 tr\u01b0\u1eddng String l\u00e0 \"Ngoc Trinh\"\n        // B\u1ea1n s\u1ebd r\u1ea5t b\u1ed1i r\u1ed1i vs vi\u1ec7c g\u1ecdi t\u1eebng thu\u1ed9c t\u00ednh b\u1eb1ng vi\u1ec7c \".{t\u00ean thu\u1ed9c t\u00ednh}\" nh\u01b0 n\u00e0y.\n\n        // C\u00f3 c\u00e1ch n\u00e0o cho code duy\u1ec7t t\u00ecm to\u00e0n b\u1ed9 thu\u1ed9c t\u00ednh, c\u00e1i n\u00e0o l\u00e0 String th\u00ec \u0111\u1ed5i n\u00f3 th\u00e0nh \"Ngoc Trinh\"?\n    }\n}\n</code></pre> <p>\u0110\u00fang v\u1eady, khi ch\u00fang ta mu\u1ed1n g\u1ecdi t\u00ean thu\u1ed9c t\u00ednh, m\u00e0 l\u1ea1i kh\u00f4ng mu\u1ed1n g\u00f5\u00a0<code>.</code>\u00a0v\u00e0 nh\u1edb ra t\u00ean thu\u1ed9c t\u00ednh, th\u00ec l\u00e0m nh\u01b0 n\u00e0o?</p> <p>B\u00e2y gi\u1edd, ch\u00fang ta ph\u1ea3i ti\u1ebfp c\u1eadn t\u1eeb g\u00f3c nh\u00ecn kh\u00e1c. Ch\u00fang ta s\u1ebd \u01b0\u1edbc m\u00ecnh c\u00f3 th\u1ec3\u00a0duy\u1ec7t h\u1ebft t\u1ea5t c\u1ea3\u00a0c\u00e1c thu\u1ed9c t\u00ednh c\u1ee7a 1 class b\u1eb1ng v\u00f2ng l\u1eb7p. R\u1ed3i check xem thu\u1ed9c t\u00ednh c\u00f3 l\u00e0\u00a0<code>String</code>\u00a0kh\u00f4ng? n\u1ebfu c\u00f3 th\u00ec g\u00e1n gi\u00e1 tr\u1ecb m\u1edbi l\u00e0 \"Ngoc Trinh\"!</p> <p>\u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, ch\u00fang ta c\u1ea7n \u0111\u00e0o s\u00e2u v\u00e0o\u00a0<code>Class</code>\u00a0v\u00e0 ph\u00e1 v\u1ee1 gi\u1edbi h\u1ea1n c\u1ee7a java truy\u1ec1n th\u1ed1ng. \u0110\u00e2y l\u00e0 l\u00fac\u00a0<code>Java Reflection</code>\u00a0(S\u1ef1 ph\u1ea3n chi\u1ebfu) v\u00e0o tr\u1eadn.</p>"},{"location":"java/#java-reflection","title":"Java Reflection","text":"<p><code>Java Reflecion</code>\u00a0cho ph\u00e9p b\u1ea1n \u0111\u00e1nh gi\u00e1, s\u1eeda \u0111\u1ed5i c\u1ea5u tr\u00fac v\u00e0 h\u00e0nh vi c\u1ee7a m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng t\u1ea1i th\u1eddi gian ch\u1ea1y (runtime) c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh. \u0110\u1ed3ng th\u1eddi n\u00f3 cho ph\u00e9p b\u1ea1n truy c\u1eadp v\u00e0o c\u00e1c th\u00e0nh vi\u00ean private (private member) t\u1ea1i m\u1ecdi n\u01a1i trong \u1ee9ng d\u1ee5ng, \u0111i\u1ec1u n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c ph\u00e9p v\u1edbi c\u00e1ch ti\u1ebfp c\u1eadn truy\u1ec1n th\u1ed1ng.</p>"},{"location":"java/#lay-ra-thuoc-tinh-field","title":"L\u1ea5y ra Thu\u1ed9c t\u00ednh (Field)","text":"<p>Quay tr\u1edf l\u1ea1i v\u00ed d\u1ee5 tr\u00ean, Ch\u00fang ta s\u1ebd l\u1ea5y ra to\u00e0n b\u1ed9 thu\u1ed9c t\u00ednh c\u1ee7a\u00a0<code>Girl</code>. T\u00ecm xem c\u00e1i n\u00e0o t\u00ean\u00a0<code>name</code>\u00a0v\u00e0 b\u1ed5 sung gi\u00e1 tr\u1ecb m\u1edbi cho n\u00f3.</p> <pre><code>public class Girl {\n    private String name;\n\n    public Girl() {\n\n    }\n\n    public Girl(String name) {\n        this.name = name;\n    }\n\n    public void setName(String name){\n        this.name = name;\n    }\n\n    @Override\n    public String toString() {\n        return \"Girl{\" +\n               \"name='\" + name + '\\'' +\n               '}';\n    }\n\n    public static void main(String[] args) throws Exception {\n        Girl girl = new Girl(); // KH\u1edfi t\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng Girl\n        girl.setName(\"Ngoc trinh\");\n\n        // Lay ra tat ca field cua object\n        // Ch\u1ec9 \u0111\u1ec3 b\u1ea1n xem v\u00ed d\u1ee5 th\u00f4i, b\u1ecf qua ph\u1ea7n n\u00e0y nh\u00e9!\n        for(Field field : girl.getClass().getDeclaredFields()){\n            System.out.println();\n            System.out.println(\"Field: \" +field.getName());\n            System.out.println(\"Type: \" +field.getType());\n        }\n\n        // PH\u1ea6N CH\u00cdNH\n        Field nameField = girl.getClass().getDeclaredField(\"name\"); // L\u1ea5y ra field c\u00f3 t\u00ean \"name\" (n\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y, n\u00f3 s\u1ebd b\u1eafn NoSuchFieldException)\n        nameField.setAccessible(true); // Cho ph\u00e9p truy c\u1eadp t\u1ea1m th\u1eddi. (V\u00ec n\u00f3 \u0111ang l\u00e0 Private m\u00e0)\n\n        // B\u00e2y gi\u1edd c\u00e1i \"nameField\" \u0111\u1ea1i di\u1ec7n cho thu\u1ed9c t\u00ednh \"name\" c\u1ee7a m\u1ecdi object c\u00f3 class Girl.\n        nameField.set(girl, \"Bella\"); // thay gi\u00e1 tr\u1ecb m\u1edbi c\u1ee7a `girl` b\u1eb1ng nameField.\n\n        System.out.println(girl);\n    }\n}\n// Output:\n// Field: name\n// Type: class java.lang.String\n// Girl{name='Bella'}\n</code></pre>"},{"location":"java/#lay-ra-ham-method","title":"L\u1ea5y ra H\u00e0m (Method)","text":"<p>V\u1ea5n \u0111\u1ec1 \u0111\u1eb7t ra, gi\u1ed1ng v\u1edbi\u00a0<code>field</code>. Ch\u00fang ta c\u0169ng s\u1ebd c\u00f3 nhu c\u1ea7u duy\u1ec7t t\u00ecm m\u1ed9t\u00a0<code>method</code>\u00a0n\u00e0o \u0111\u00f3 v\u00e0 s\u1eed d\u1ee5ng n\u00f3:</p> <pre><code>public static void main(String[] args) throws Exception {\n    Class&lt;Girl&gt; girlClass = Girl.class;\n\n    // Su dung getDeclaredMethods de lay ra nhung method cua class va cha no.\n    Method[] methods = girlClass.getDeclaredMethods();\n    for(Method method : methods){\n        System.out.println();\n        System.out.println(\"Method: \" + method.getName());\n        System.out.println(\"Parameters: \" + Arrays.toString(method.getParameters()));\n    }\n\n    // Lay ra method ten la setName va co 1 tham so truyen vao -&gt;\n    // =&gt; ch\u00ednh l\u00e0: setName(String name)\n    Method methodSetName = girlClass.getMethod(\"setName\", String.class);\n    // B\u00e2y gi\u1edd methodSetName s\u1ebd \u0111\u1ea1i di\u1ec7n cho method setName(String name) c\u1ee7a m\u1ecdi object c\u00f3 class l\u00e0 Girl\n\n    Girl girl = new Girl(); // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng Girl\n\n    // Th\u1ef1c hi\u1ec7n h\u00e0m setName() tr\u00ean \u0111\u1ed1i t\u01b0\u1ee3ng girl, gi\u00e1 tr\u1ecb truy\u1ec1n v\u00e0o l\u00e0 \"Ngoc Trinh\"\n    methodSetName.invoke(girl, \"Ngoc Trinh\");\n    System.out.println(girl);\n}\n</code></pre>"},{"location":"java/#lay-ra-constructor","title":"L\u1ea5y ra Constructor","text":"<p>L\u1ea5y ra h\u00e0m kh\u1edfi t\u1ea1o c\u1ee7a m\u1ed9t class. T\u1eeb \u0111\u00f3 cho ph\u00e9p ch\u00fang ta c\u00e1ch t\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb theo m\u1ed9t c\u00e1ch kh\u00e1c, thay v\u00ec\u00a0<code>new Class()</code>\u00a0nh\u01b0 b\u00ecnh th\u01b0\u1eddng</p> <pre><code>public static void main(String[] args) {\n    Class&lt;Girl&gt; girlClass = Girl.class;\n    System.out.println(\"Class: \" + girlClass.getSimpleName());\n    System.out.println(\"Constructors: \" + Arrays.toString(girlClass.getConstructors())); // L\u1ea5y ra to\u00e0n b\u1ed9 Constructor c\u1ee7a class n\u00e0y\n    try {\n        // T\u1ea1o ra m\u1ed9t object Girl t\u1eeb class. (Kh\u1edfi t\u1ea1o kh\u00f4ng tham s\u1ed1)\n        Girl girl1 = girlClass.newInstance();\n        System.out.println(\"Girl1: \" + girl1);\n\n        // L\u1ea5y ra h\u00e0m constructor v\u1edbi tham s\u1ed1 l\u00e0 1 string\n        // Ch\u00ednh l\u00e0 -&gt; public Girl(String name) {}\n        Constructor&lt;Girl&gt; girlConstructor = girlClass.getConstructor(String.class);\n        Girl girl2 = girlConstructor.newInstance(\"Hello\");\n\n        System.out.println(\"Girl2: \" + girl2);\n    } catch (Exception e) {\n        // Exception xay ra khi constructor khong ton tai hoac tham so truyen vao khong dung\n        e.printStackTrace();\n    }\n}\n</code></pre>"},{"location":"java/#lay-ra-annotation-tren-field-method-class","title":"L\u1ea5y ra Annotation tr\u00ean Field, Method, Class","text":"<p>\u0110\u00fang v\u1eady, \u0111\u00e2y c\u0169ng ch\u00ednh l\u00e0 m\u1ed9t trong nh\u1eefng ph\u1ea7n quan tr\u1ecdng b\u1eadc nh\u1ea5t c\u1ee7a\u00a0<code>Java Reflection</code>. Cho ph\u00e9p ch\u00fang ta ki\u1ec3m tra\u00a0<code>Class</code>\u00a0hi\u1ec7n t\u1ea1i \u0111ang \u0111\u01b0\u1ee3c ch\u00fa th\u00edch b\u1edfi nh\u1eefng\u00a0<code>Annotation</code>\u00a0n\u00e0o.</p> <pre><code>@SuppressWarnings(\"deprecation\")\n@Deprecated\npublic class Girl {\n    private String name;\n\n    public Girl() {\n\n    }\n\n    public Girl(String name) {\n        this.name = name;\n    }\n\n    @Nullable\n    public void setName(String name){\n        this.name = name;\n    }\n\n    @Override\n    public String toString() {\n        return \"Girl{\" +\n               \"name='\" + name + '\\'' +\n               '}';\n    }\n\n    public static void main(String[] args) {\n        Class&lt;Girl&gt; girlClass = Girl.class;\n        System.out.println(\"Class: \"+girlClass.getSimpleName()); // L\u1ea5y ra t\u00ean Class\n        for(Annotation annotation : girlClass.getDeclaredAnnotations()){\n            System.out.println(\"Annotation: \" + annotation.annotationType()); // L\u1ea5y ra t\u00ean c\u00e1c Annatation tr\u00ean class n\u00e0y\n        }\n\n        for(Method method: girlClass.getDeclaredMethods()){ // L\u1ea5y ra c\u00e1c method c\u1ee7a class\n            System.out.println(\"\\nMethod: \" + method.getName()); //T\u00ean method\n            for(Annotation annotation : method.getAnnotations()){\n                System.out.println(\"Annotation: \" + annotation.annotationType()); // L\u1ea5y ra t\u00ean c\u00e1c Annatation tr\u00ean method n\u00e0y\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"java/#huong-dan-tu-tao-mot-annotations","title":"Hu\u031bo\u031b\u0301ng da\u0302\u0303n tu\u031b\u0323 ta\u0323o mo\u0323\u0302t Annotations","text":""},{"location":"java/#khai-niem","title":"Kh\u00e1i ni\u1ec7m","text":"<p><code>Annotation</code>\u00a0(Ch\u00fa th\u00edch) \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3\u00a0ch\u00fa th\u00edch\u00a0tr\u00ean m\u1ed9t\u00a0<code>class</code>, m\u1ed9t tr\u01b0\u1eddng (<code>field</code>) ho\u1eb7c m\u1ed9t\u00a0<code>method</code>\u00a0\u0111\u1ec3 cung c\u1ea5p ho\u1eb7c b\u1ed5 sung c\u00e1c th\u00f4ng tin. N\u00f3 ho\u00e0n to\u00e0n kh\u00f4ng \u1ea3nh h\u01b0\u1edfng t\u1edbi code c\u1ee7a b\u1ea1n.</p> <p>Trong b\u00e0i c\u00f3 s\u1eed d\u1ee5ng c\u00e1c ki\u1ebfn th\u1ee9c:</p> <ol> <li>Optional</li> <li>Functional Interface &amp; Lambda</li> <li>Java Reflection</li> </ol> <p><code>Annotation</code>\u00a0\u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u1edf 3 d\u1ea1ng:</p> <ul> <li>Ch\u00fa th\u00edch cho tr\u00ecnh bi\u00ean d\u1ecbch (Compiler)</li> <li>Ch\u00fa th\u00edch cho qu\u00e1 tr\u00ecnh build</li> <li>Ch\u00fa th\u00edch trong qu\u00e1 tr\u00ecnh ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh (Runtime)</li> </ul> <p>H\u1eb3n b\u1ea1n \u0111\u00e3 1 l\u1ea7n t\u1eebng th\u1ea5y c\u00e1i\u00a0<code>@Override</code>\u00a0ph\u1ea3i kh\u00f4ng? n\u00f3 l\u00e0 m\u1ed9t\u00a0Annotation ch\u00fa th\u00edch cho tr\u00ecnh bi\u00ean d\u1ecbch, \u0111\u1ec3 cho tr\u00ecnh bi\u00ean d\u1ecbch bi\u1ebft h\u00e0m \u0111\u00f3 \u0111\u00e3 b\u1ecb ghi \u0111\u00e8.</p> <p>C\u00f2n\u00a0ch\u00fa th\u00edch cho qu\u00e1 tr\u00ecnh build\u00a0th\u00ec kh\u00f4ng h\u1eb3n c\u00f3 v\u00ed d\u1ee5 c\u1ee5 th\u1ec3, nh\u01b0ng b\u1ea1n h\u00e3y ngh\u0129 t\u1edbi\u00a0<code>Maven</code>,\u00a0<code>Gradle</code>\u00a0nh\u1eefng c\u00f4ng c\u1ee5 build n\u00e0y s\u1ebd c\u00f3 th\u00eam th\u00f4ng tin khi build \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n khi g\u1eb7p m\u1ed9t s\u1ed1\u00a0<code>Annotation</code>\u00a0\u0111\u1eb7c bi\u1ec7t, v\u00e0 s\u1ebd b\u1ed5 sung th\u00eam code v\u00e0o \u0111\u00f3.</p> <p>Ch\u00fa th\u00edch trong qu\u00e1 tr\u00ecnh ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh\u00a0s\u1ebd l\u00e0 n\u1ed9i dung ch\u00ednh c\u1ee7a ch\u00fang ta h\u00f4m nay. \u0110\u00e2y l\u00e0 nh\u1eefng\u00a0<code>Annotation</code>\u00a0m\u00e0 ch\u1ec9 khi b\u1ea1n ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh r\u1ed3i th\u00ec n\u00f3 m\u1edbi t\u00e1c \u0111\u1ed9ng t\u1edbi code. C\u00f9ng v\u00e0o v\u00ed d\u1ee5 \u0111\u1ec3 d\u1ec5 hi\u1ec3u nh\u00e9!</p>"},{"location":"java/#khai-bao-annotation","title":"Khai b\u00e1o Annotation","text":"<p>C\u00e1ch khai b\u00e1o\u00a0<code>Annotation</code>\u00a0l\u00e0 s\u1eed d\u1ee5ng\u00a0<code>@interface</code></p> <p>v\u1eady l\u00e0 b\u1ea1n \u0111\u00e3 c\u00f3 1\u00a0<code>Annotation</code>. Gi\u1edd g\u1ecdi n\u00f3 ra v\u00e0 s\u1eed d\u1ee5ng:</p>"},{"location":"java/#khai-bao-pham-vi-cho-annotation","title":"Khai b\u00e1o ph\u1ea1m vi cho Annotation","text":"<p>Ch\u00fang ta c\u00f3 th\u1ec3 quy \u0111\u1ecbnh ph\u1ea1m vi s\u1eed d\u1ee5ng c\u1ee7a\u00a0<code>Annotation</code>\u00a0b\u1eb1ng c\u00e1ch:</p> <p><code>@Retention</code>: D\u00f9ng \u0111\u1ec3 ch\u00fa th\u00edch\u00a0m\u1ee9c \u0111\u1ed9 t\u1ed3n t\u1ea1i\u00a0c\u1ee7a m\u1ed9t annotation n\u00e0o \u0111\u00f3. C\u1ee5 th\u1ec3 c\u00f3 3 m\u1ee9c nh\u1eadn th\u1ee9c t\u1ed3n t\u1ea1i c\u1ee7a v\u1eadt \u0111\u01b0\u1ee3c ch\u00fa th\u00edch:</p> <ol> <li><code>RetentionPolicy.SOURCE</code>: T\u1ed3n t\u1ea1i tr\u00ean code ngu\u1ed3n, v\u00e0 kh\u00f4ng \u0111\u01b0\u1ee3c b\u1ed9 d\u1ecbch (compiler) nh\u1eadn ra.</li> <li><code>RetentionPolicy.CLASS</code>: M\u1ee9c t\u1ed3n t\u1ea1i \u0111\u01b0\u1ee3c b\u1ed9 d\u1ecbch nh\u1eadn ra, nh\u01b0ng kh\u00f4ng \u0111\u01b0\u1ee3c nh\u1eadn bi\u1ebft b\u1edfi m\u00e1y \u1ea3o t\u1ea1i th\u1eddi \u0111i\u1ec3m ch\u1ea1y (Runtime).</li> <li><code>RetentionPolicy.RUNTIME</code>: M\u1ee9c t\u1ed3n t\u1ea1i l\u1edbn nh\u1ea5t, \u0111\u01b0\u1ee3c b\u1ed9 d\u1ecbch (compiler) nh\u1eadn bi\u1ebft, v\u00e0 m\u00e1y \u1ea3o (jvm) c\u0169ng nh\u1eadn ra khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh.</li> </ol> <p><code>@Target</code>: D\u00f9ng \u0111\u1ec3 ch\u00fa th\u00edch\u00a0ph\u1ea1m vi s\u1eed d\u1ee5ng\u00a0c\u1ee7a m\u1ed9t\u00a0<code>Annotation</code></p> <ol> <li><code>ElementType.TYPE</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u00ean Class, interface, enum, annotation.</li> <li><code>ElementType.FIELD</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u01b0\u1eddng (field), bao g\u1ed3m c\u1ea3 c\u00e1c h\u1eb1ng s\u1ed1 enum.</li> <li><code>ElementType.METHOD</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u00ean method.</li> <li><code>ElementType.PARAMETER</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u00ean parameter</li> <li><code>ElementType.CONSTRUCTOR</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u00ean constructor</li> <li><code>ElementType.LOCAL_VARIABLE</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u00ean bi\u1ebfn \u0111\u1ecba ph\u01b0\u01a1ng.</li> <li><code>ElementType.ANNOTATION_TYPE</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u00ean Annotation kh\u00e1c</li> <li><code>ElementType.PACKAGE</code>\u00a0- Cho ph\u00e9p ch\u00fa th\u00edch tr\u00ean package.</li> </ol>"},{"location":"java/#xu-ly-annotation","title":"X\u1eed l\u00fd Annotation","text":"<p>B\u01b0\u1edbc 1: Ch\u00fa th\u00edch b\u1ea5t k\u00ec ch\u1ed7 n\u00e0o b\u1ea1n mu\u1ed1n.</p> <p>B\u01b0\u1edbc 2: Vi\u1ebft class x\u1eed l\u00fd\u00a0<code>@JsonName</code></p> <p>B\u01b0\u1edbc 3: Ch\u1ea1y th\u1eed:</p> <pre><code>public @interface JsonName {\n    String value(); // c\u00e1c gi\u00e1 tr\u1ecb trong @interface \u0111\u1ec1u d\u1ea1ng h\u00e0m abstract, kh\u00f4ng tham s\u1ed1\n}\n</code></pre> <pre><code>@JsonName(value = \"super_man\")\npublic class SuperMan extends Person {\n    private String name;\n}\n</code></pre> <pre><code>@Retention(RetentionPolicy.RUNTIME) // T\u1ed3n t\u1ea1i trong l\u00fac ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh\n@Target({ ElementType.TYPE, ElementType.FIELD, ElementType.METHOD}) // \u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng tr\u00ean class, interface, method, bi\u1ebfn\npublic @interface JsonName {\n    String value();\n}\n</code></pre> <pre><code>@JsonName(value = \"super_man\")\npublic class SuperMan {\n    // Kh\u00f4ng ch\u00fa th\u00edch, th\u00ec ch\u00fang ta s\u1ebd coi nh\u01b0 l\u1ea5y t\u00ean field l\u00e0 `name` lu\u00f4n\n    private String name;\n\n    @JsonName(\"date_of_birth\")\n    private LocalDateTime dateOfBirth;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public LocalDateTime getDateOfBirth() {\n        return dateOfBirth;\n    }\n\n    public void setDateOfBirth(LocalDateTime dateOfBirth) {\n        this.dateOfBirth = dateOfBirth;\n    }\n}\n</code></pre> <pre><code>public class JsonNameProcessor {\n    public static String toJson(Object object) throws IllegalAccessException {\n        StringBuilder sb = new StringBuilder(); // D\u00f9ng StringBuilder de tao json tu class\n\n        Class&lt;?&gt; clazz = object.getClass();\n        JsonName jsonClassName = clazz.getDeclaredAnnotation(JsonName.class); // Lay ra annotation @JsonName tren Class\n\n        sb.append(\"{\\n\")\n          .append(\"\\t\\\"\")\n          // Lay gia tri cua Annotation, neu annotation la null thi lay ten Class de thay the\n          .append(Optional.ofNullable(jsonClassName).map(JsonName::value).orElse(clazz.getSimpleName()))\n          .append(\"\\\": {\\n\"); //\n\n        Field fields[] = clazz.getDeclaredFields();\n        for (int i = 0; i &lt; fields.length; i++) {\n            fields[i].setAccessible(true); // Set setAccessible = true. De co the truy cap vao private field\n            JsonName jsonFieldName = fields[i].getDeclaredAnnotation(JsonName.class); // get annotation tren field\n            sb.append(\"\\t\\t\\\"\")\n              // Lay gia tri cua Annotation, neu annotation la null thi lay ten field thay the\n              .append(Optional.ofNullable(jsonFieldName).map(JsonName::value).orElse(fields[i].getName())) // L\n              .append(\"\\\": \")\n              // Neu field la String hoac Object. thi append dau ngoac kep vao\n              .append(fields[i].getType() == String.class || !fields[i].getType().isPrimitive() ? \"\\\"\" : \"\")\n              // Lay gia tri cua field\n              .append(fields[i].get(object))\n              // Neu field la String hoac Object. thi append dau ngoac kep vao\n              .append(fields[i].getType() == String.class || !fields[i].getType().isPrimitive()? \"\\\"\" : \"\")\n              // N\u1ebfu l\u00e0 field cu\u1ed1i c\u00f9ng, th\u00ec kh\u00f4ng append d\u1ea5u \",\"\n              .append(i != fields.length -1 ? \",\\n\" : \"\\n\");\n        }\n        sb.append(\"\\t}\\n\");\n        sb.append(\"}\");\n\n        return sb.toString();\n    }\n}\n</code></pre> <pre><code>public static void main(String[] args) throws IllegalAccessException {\n    SuperMan superMan = new SuperMan(); // Tao doi tuong super man\n    superMan.setDateOfBirth(LocalDateTime.now());\n    superMan.setName(\"loda\");\n\n    String json =JsonNameProcessor.toJson(superMan);\n    System.out.println(json);\n}\n// OUTPUT:\n/*\n{\n    \"super_man\": {\n        \"name\": \"loda\",\n        \"date_of_birth\": \"2019-04-03T21:07:23.983\"\n    }\n}\n*/\n</code></pre>"},{"location":"java/#java-8functional-interfaces-lambda-expressions-cuc-de-hieu","title":"\u300cJava 8\u300dFunctional Interfaces &amp; Lambda Expressions cu\u031b\u0323c de\u0302\u0303 hie\u0302\u0309u","text":""},{"location":"java/#gioi-thieu_1","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Kh\u00e1i ni\u1ec7m\u00a0<code>Functional Interfaces</code>\u00a0\u0111\u01b0\u1ee3c\u00a0<code>Java</code>\u00a0\u0111\u01b0a ra c\u00f9ng v\u1edbi phi\u00ean b\u1ea3n\u00a0<code>Java 8</code>. v\u1ec1 c\u01a1 b\u1ea3n, c\u00f3 th\u1ec3 hi\u1ec3u:</p> <p>Functional Interfaces\u00a0l\u00e0 interface nh\u01b0ng ch\u1ec9 c\u00f3 m\u1ed9t 1 abstract function duy nh\u1ea5t.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>interface Runable {\n    public void run(); // Ch\u1ec9 c\u00f3 duy nh\u1ea5t m\u1ed9t abstract function.\n}\n</code></pre>"},{"location":"java/#functional-programming","title":"Functional Programming","text":"<p>Tr\u01b0\u1edbc khi \u0111i v\u00e0o chi ti\u1ebft, ch\u00fang ta c\u00f9ng t\u00ecm hi\u1ec3u kh\u00e1i ni\u1ec7m\u00a0<code>L\u1eadp tr\u00ecnh h\u01b0\u1edbng h\u00e0m</code>.</p> <p>C\u00f9ng xem v\u00ed d\u1ee5 d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>public static void main(String[] args) {\n    // M\u00ecnh mu\u1ed1n x\u1eed l\u00fd d\u1eef li\u1ec7u tr\u01b0\u1edbc khi \u1ec9n ra m\u00e0n h\u00ecnh.\n    System.out.println(process(\"Hey Loda!!!\"));\n}\n\npublic static String process(String input){\n    // Cho t\u1ea5t c\u1ea3 vi\u1ebft hoa l\u00ean.\n    return input.toUpperCase();\n}\n\n// Output:\nHEY LODA!!!\n</code></pre> <p>Tuy nhi\u00ean b\u1ea1n s\u1ebd th\u1ea5y c\u00e1ch l\u00e0m n\u00e0y kh\u00f4ng\u00a0<code>flexible</code>, v\u00ec c\u00e1c b\u1ea1n ch\u1ec9 c\u00f3 th\u1ec3 x\u1eed l\u00fd cho ch\u1eef th\u00e0nh\u00a0<code>UPPER CASE</code>. Mu\u1ed1n l\u00e0m g\u00ec \u0111\u00f3 kh\u00e1c, nh\u01b0\u00a0<code>toLowerCase</code>\u00a0ch\u1eb3ng h\u1ea1n, m\u00ecnh s\u1ebd ph\u1ea3i vi\u1ebft m\u1ed9t\u00a0<code>function</code>\u00a0m\u1edbi.</p> <p>Ch\u00fang ta gi\u1ea3i quy\u1ebft c\u00e1ch c\u00e1ch n\u00e0y b\u1eb1ng\u00a0<code>Anonymous function (H\u00e0m \u1ea9n danh)</code></p> <p>S\u1eeda code ch\u00fat:</p> <pre><code>public interface StringProcessor{\n    public String process(String input);\n}\n\n// StringProcessor \u1edf \u0111\u00e2y l\u00e0 m\u1ed9t Interface, hay Functional Interface\npublic static String getStr(String input, StringProcessor processor){\n    return processor.process(input);\n}\n\npublic static void main(String[] args) {\n    // In ra ch\u1eef hoa\n    System.out.println(getStr(\"Hello Loda!\", new StringProcessor() {\n        @Override\n        public String process(String input) {\n            return input.toUpperCase();\n        }\n    }));\n\n    // In ra ch\u1eef th\u01b0\u1eddng\n    System.out.println(getStr(\"Hey Loda!\", new StringProcessor() {\n        @Override\n        public String process(String input) {\n            return input.toLowerCase();\n        }\n    }));\n}\n// Output:\n// HELLO LODA!\n// hey loda!\n</code></pre>"},{"location":"java/#lambda-expressions","title":"Lambda Expressions","text":"<p>Quay l\u1ea1i v\u00ed d\u1ee5 \u1edf tr\u00ean, ch\u00fang ta th\u1ea5y l\u00e0\u00a0<code>StringProcessor</code>\u00a0ch\u1ec9 c\u00f3 duy nh\u1ea5t m\u1ed9t\u00a0<code>function process(x)</code>. N\u00ean m\u1ecdi \u0111o\u1ea1n code \u0111\u1ec1u s\u1ebd gi\u1ed1ng h\u1ec7t nhau \u1edf vi\u1ec7c\u00a0<code>implement function</code>\u00a0n\u00e0y.</p> <pre><code>new StringProcessor() {\n    @Override\n    public String process(String input) {\n        // Do something here\n        // Ch\u1ec9 kh\u00e1c nhau \u0111o\u1ea1n code \u1edf gi\u1eefa\n        return x;\n    }\n}\n</code></pre> <p>Th\u1ef1c ra c\u00e1i ch\u00fang ta quan t\u00e2m l\u00e0: <code>Input -&gt; Process -&gt; Output</code>. H\u00e3y th\u1eed nh\u00ecn \u1edf v\u00ed d\u1ee5 d\u01b0\u1edbi cho Lambda Expressions:</p> <pre><code>// (input) -&gt; input.toUpperCase()\n// \u0111\u1ea7u v\u00e0o -&gt; \u0111\u1ea7u ra\nSystem.out.println(getStr(\"Hello Loda!\", input -&gt; input.toUpperCase()));\n\n// C\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t lambda nh\u01b0 sau:\n// parameter -&gt; expression body\n</code></pre> <p>Trong \u0111\u00f3:</p> <ul> <li><code>parameter</code>\u00a0l\u00e0 nh\u1eefng tham s\u1ed1 \u0111\u1ea7u v\u00e0o c\u1ee7a h\u00e0m (m\u1ed9t ho\u1eb7c nhi\u1ec1u)</li> <li><code>expression body</code>\u00a0l\u00e0 ph\u1ea7n x\u1eed l\u00fd\u00a0<code>parameter</code>, b\u1ea1n c\u1ea7n tr\u1ea3 ra \u0111\u00fang ki\u1ec3u d\u1eef li\u1ec7u \u0111\u00e3 khai b\u00e1o trong\u00a0<code>Functional Interface</code></li> </ul> <p>N\u1ebfu\u00a0<code>code</code>\u00a0b\u1ea1n ch\u1ec9 c\u1ea7n 1 thao t\u00e1c, th\u00ec kh\u00f4ng c\u1ea7n\u00a0<code>return</code>\u00a0gi\u1ed1ng v\u00ed d\u1ee5 \u1edf tr\u00ean. C\u00f2n n\u1ebfu\u00a0<code>code</code>\u00a0y\u00eau c\u1ea7u x\u1eed l\u00fd nhi\u1ec1u, th\u00ec d\u1ea1ng \u0111\u1ea7y \u0111\u1ee7 c\u1ee7a n\u00f3 nh\u01b0 sau:</p> <pre><code>parameter -&gt; {\n    expression body\n    [return] // (kh\u00f4ng tr\u1ea3 v\u1ec1 n\u1ebfu l\u00e0 void)\n}\n</code></pre> <p>v\u00ed d\u1ee5:</p> <pre><code>System.out.println(getStr(\"Hello Loda!\", input -&gt; {\n    String temp =  input + \" Oke!!!\";\n    return temp.toLowerCase();\n}));\n</code></pre>"},{"location":"java/#functional-interface","title":"Functional Interface","text":"<p>T\u1edbi \u0111\u00e2y, b\u1ea1n \u0111\u00e3 hi\u1ec3u \u00fd ngh\u0129a c\u1ee7a vi\u1ec7c cho ra \u0111\u1eddi kh\u00e1i ni\u1ec7m\u00a0<code>Functional Interface</code>, n\u00f3 l\u00e0 m\u1ed9t quy \u0111\u1ecbnh chung ph\u1ea3i c\u00f3 \u0111\u1ec3 c\u00f3 th\u1ec3 vi\u1ebft code d\u01b0\u1edbi d\u1ea1ng bi\u1ec3u th\u1ee9c\u00a0<code>Lambda</code>. M\u1ed9t s\u1ed1 \u0111i\u1ec1u c\u1ea7n l\u01b0u \u00fd v\u1edbi\u00a0<code>Functional Interface</code>\u00a0nh\u01b0 sau:</p>"},{"location":"java/#functionalinterface","title":"@FunctionalInterface","text":"<p><code>Annotation</code>\u00a0n\u00e0y ch\u1ec9 \u0111\u1ec3 b\u1ed5 sung, n\u00f3 \u0111\u00e1nh d\u1ea5u m\u1ed9t\u00a0<code>interface</code>\u00a0l\u00e0\u00a0<code>Functional Interface</code>. L\u00fac n\u00e0y b\u1ea1n khai b\u00e1o 2\u00a0<code>abtract function</code>\u00a0b\u00ean trong\u00a0<code>interface</code>\u00a0th\u00ec s\u1ebd b\u00e1o l\u1ed7i.</p> <pre><code>@FunctionalInterface // G\u1eafn c\u00e1i n\u00e0y l\u00ean interface, n\u00f3 \u0111\u00e1nh d\u1ea5u interface ch\u1ec9 \u0111\u01b0\u1ee3c ph\u00e9p c\u00f3 1 funtion th\u00f4i\npublic interface StringProcessor{\n    public String process(String input);\n    public String preProcess(String input); // l\u1ed7i\n}\n</code></pre>"},{"location":"java/#default-function-static-funtion","title":"default function &amp; static funtion","text":"<p><code>Java 8</code>\u00a0c\u1ea3i ti\u1ebfn cho ph\u00e9p\u00a0<code>interface</code>\u00a0\u0111\u01b0\u1ee3c khai b\u00e1o\u00a0<code>code</code>\u00a0b\u00ean trong n\u00f3, v\u1edbi \u0111i\u1ec1u ki\u1ec7n\u00a0<code>code</code>\u00a0ph\u1ea3i n\u1eb1m trong\u00a0<code>default</code>\u00a0ho\u1eb7c\u00a0<code>static</code>. <code>default</code>\u00a0v\u00e0\u00a0<code>static</code>\u00a0kh\u00f4ng ph\u00e1 v\u1ee1 quy lu\u1eadt c\u1ee7a\u00a0<code>@FunctionInterfaces</code></p> <pre><code>@FunctionalInterface // G\u1eafn c\u00e1i n\u00e0y l\u00ean interface, n\u00f3 \u0111\u00e1nh d\u1ea5u interface ch\u1ec9 \u0111\u01b0\u1ee3c ph\u00e9p c\u00f3 1 funtion th\u00f4i\npublic interface StringProcessor{\n    public String process(String input);\n\n    // M\u1ecdi class implement StringProcessor \u0111\u1ec1u c\u00f3 th\u1ec3 g\u1ecdi h\u00e0m n\u00e0y \u0111\u1ec3 s\u1eed d\u1ee5ng lu\u00f4n\n    public default void printf(Object t){\n        System.out.println(t);\n    }\n\n    // L\u00e0 h\u00e0m static, g\u1ecdi t\u1eeb class c\u0169ng \u0111\u01b0\u1ee3c.         \n    // StringProcessor.concat(a,b)\n    public static String concat(String a, String b){\n        return a + b;\n    }\n}\n</code></pre>"},{"location":"java/#method-reference","title":"Method reference","text":"<p>Ph\u1ea7n n\u00e0y ch\u1ec9 \u0111\u1ec3 b\u1ed5 sung, kh\u00f4ng c\u00f3 n\u00f3, b\u1ea1n v\u1eabn c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng\u00a0<code>Lambda Expressions</code>\u00a0b\u00ecnh th\u01b0\u1eddng. Nh\u01b0ng v\u1edbi\u00a0<code>Method reference</code>, code c\u1ee7a b\u1ea1n s\u1ebd c\u00f2n s\u1ea1ch s\u1ebd h\u01a1n n\u1eefa.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>System.out.println(getStr(\"Hello Loda!\", input -&gt; input.toUpperCase()));\n// T\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c vi\u1ebft nh\u01b0 n\u00e0y:\nSystem.out.println(getStr(\"Hello Loda!\", String::toUpperCase));\n</code></pre> <p>ho\u1eb7c</p> <pre><code>System.out.println(getStr(\"Hello Loda!\", input -&gt; new String(input));\n// T\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi vi\u1ec7c vi\u1ebft nh\u01b0 n\u00e0y:\nSystem.out.println(getStr(\"Hello Loda!\", String::new));\n</code></pre> <p><code>Method reference</code>\u00a0l\u00e0 c\u00e1ch vi\u1ebft ng\u1eafn g\u1ecdn, s\u1ebd b\u1ecf qua lu\u00f4n c\u1ea3 ph\u1ea7n\u00a0<code>parameter</code>\u00a0v\u00ec b\u1ea3n th\u00e2n t\u00ean h\u00e0m \u0111\u00e3 bi\u1ebft n\u00f3 s\u1ebd nh\u1eadn v\u00e0o g\u00ec v\u00e0 tr\u1ea3 ra c\u00e1i g\u00ec r\u1ed3i. Vi\u1ec7c c\u00f2n l\u1ea1i \u0111\u1ec3\u00a0<code>Compiler</code>\u00a0lo th\u00f4i kakaka. C\u00f3 c\u00e1c c\u00e1ch \u0111\u1ec3 g\u1ecdi\u00a0<code>Method reference</code>\u00a0nh\u01b0 sau:</p> <ul> <li><code>[T\u00ean Class]::[T\u00ean method]</code>: Gi\u1ed1ng v\u1edbi v\u00ed d\u1ee5 \u1edf tr\u00ean\u00a0<code>String::toUpperCase</code>.</li> <li><code>[T\u00ean Class]::new</code>: T\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng m\u1edbi, t\u1eeb tham s\u1ed1 \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o</li> </ul>"},{"location":"java/#huong-dan-stream-api","title":"Hu\u031bo\u031b\u0301ng da\u0302\u0303n Stream API","text":""},{"location":"java/#khai-quat","title":"Kh\u00e1i qu\u00e1t","text":"<p><code>Stream</code>\u00a0l\u00e0 m\u1ed9t abtract layer cho ph\u00e9p b\u1ea1n x\u1eed l\u00fd m\u1ed9t d\u00f2ng d\u1eef li\u1ec7u d\u1ef1a tr\u00ean c\u00e1c thao t\u00e1c \u0111\u00e3 \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc. B\u1ea1n c\u00f3 th\u1ec3 t\u1ea1o\u00a0<code>Stream</code>\u00a0t\u1eeb c\u00e1c ngu\u1ed3n d\u1eef li\u1ec7u nh\u01b0\u00a0<code>Collections</code>,\u00a0<code>Arrays</code>\u00a0ho\u1eb7c\u00a0<code>I/O resources</code>. M\u1eb7c \u0111\u1ecbnh c\u00e1c l\u1edbp k\u1ebf th\u1eeba c\u1ee7a\u00a0<code>Collection</code>\u00a0\u0111\u1ec1u c\u00f3 h\u00e0m\u00a0<code>.stream()</code>:</p> <pre><code>Collection&lt;String&gt; collection = Arrays.asList(\"hello\", \"loda\", \"kaka\");\nStream&lt;String&gt; streamOfCollection = collection.stream(); // T\u1ea1o ra m\u1ed9t stream t\u1eeb collection\nList&lt;String&gt; list = new ArrayList&lt;&gt;();\nStream&lt;String&gt; stream = list.stream(); // t\u1ea1o ra 1 lu\u1ed3ng\nStream&lt;String&gt; parallelStream = list.parallelStream(); // lu\u1ed3ng d\u1eef li\u1ec7u song song (x\u1eed l\u00fd tr\u00ean nhi\u1ec1u thread c\u00f9ng l\u00fac)\n</code></pre>"},{"location":"java/#cach-su-dung","title":"C\u00e1ch s\u1eed d\u1ee5ng","text":"<p>Ch\u1ee9c n\u0103ng c\u1ee7a\u00a0<code>Stream</code>\u00a0l\u00e0 c\u1ef1c k\u00ec \u0111a d\u1ea1ng gi\u00fap b\u1ea1n thao t\u00e1c d\u1eef li\u1ec7u d\u1ec5 d\u00e0ng h\u01a1n.</p>"},{"location":"java/#foreach-duyet-qua-toan-bo-du-lieu-cua-ban","title":"<code>forEach()</code>: Duy\u1ec7t qua to\u00e0n b\u1ed9 d\u1eef li\u1ec7u c\u1ee7a b\u1ea1n","text":"<pre><code>list.stream().forEach(s -&gt; System.out.println(s));\n</code></pre>"},{"location":"java/#map-tao-ra-cac-gia-tri-moi-tu-du-lieu-hien-co","title":"<code>map()</code>: T\u1ea1o ra c\u00e1c gi\u00e1 tr\u1ecb m\u1edbi t\u1eeb d\u1eef li\u1ec7u hi\u1ec7n c\u00f3","text":"<pre><code>Arrays.asList(3, 5, 7)\n    .stream() // t\u1ea1o ra Stream t\u1eeb List&lt;Integer&gt;\n    .map(i -&gt; \"loda-\"+i) // bi\u1ebfn \u0111\u1ed5i t\u1eebng ph\u1ea7n t\u1eed th\u00e0nh String\n    .map(String::toUpperCase) // bi\u1ebfn \u0111\u1ed5i t\u1eebng ph\u1ea7n t\u1eed th\u00e0nh Upper case\n    .forEach(System.out::println); // in ra xem th\u1eed\n</code></pre>"},{"location":"java/#filter-giup-chung-ta-thao-tac-voi-nhung-du-lieu-mong-muon","title":"<code>filter()</code>\u00a0g\u00edup ch\u00fang ta thao t\u00e1c v\u1edbi nh\u1eefng d\u1eef li\u1ec7u mong mu\u1ed1n.","text":"<pre><code>Arrays.asList(2, 3, 5, 7)\n    .stream()\n    .filter(i -&gt; i % 2 != 0) //t\u1eeb \u0111\u00e2y tr\u1edf \u0111i, ch\u00fang ta ch\u1ec9 mu\u1ed1n l\u00e0m vi\u1ec7c v\u1edbi s\u1ed1 l\u1ebb\n    .map(i -&gt; \"loda-\" + i)\n    .map(String::toUpperCase)\n    .forEach(System.out::println);\n</code></pre>"},{"location":"java/#limit-gioi-han-so-luong-du-lieu-can-xu-ly","title":"<code>limit()</code>: Gi\u1edbi h\u1ea1n s\u1ed1 l\u01b0\u1ee3ng d\u1eef li\u1ec7u c\u1ea7n x\u1eed l\u00fd","text":"<pre><code>IntStream.range(1, 1000).boxed() // T\u1ea1o ra Stream c\u00f3 d\u1eef li\u1ec7u t\u1eeb 1-&gt;999\n            .filter(i -&gt; i % 2 != 0)\n            .map(i -&gt; \"loda-\" + i)\n            .map(String::toUpperCase)\n            .limit(10) // Ch\u00fang ta gi\u1edbi h\u1ea1n l\u1ea5y 10 c\u00e1i r\u1ed3i in ra\n            .forEach(System.out::println);\n</code></pre>"},{"location":"java/#sorted-sap-xep-stream-ban-co-the-tu-inh-nghia-cach-sort-bang-cach-them-comparator-vao","title":"<code>sorted()</code>: s\u1eafp x\u1ebfp\u00a0<code>Stream</code>. B\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 \u0111\u1ecbnh ngh\u0129a c\u00e1ch sort b\u1eb1ng c\u00e1ch th\u00eam Comparator v\u00e0o","text":"<pre><code>sorted((o1, o2) -&gt; o1.compareTo(o2))\n</code></pre> <pre><code>List&lt;String&gt; result = IntStream.range(1, 1000).boxed()\n                                .filter(i -&gt; i % 2 != 0)\n                                .map(i -&gt; \"loda-\" + i)\n                                .map(String::toUpperCase)\n                                .limit(10)\n                                .sorted(Comparator.naturalOrder()) // m\u1ed9t c\u00e1ch kh\u00e1c \u0111\u1ec3 sort\n                                .collect(Collectors.toList());\n</code></pre>"},{"location":"java/#collect-giup-chung-ta-lay-toan-bo-du-lieu-a-bien-oi-trong-stream-thanh-oi-tuong-minh-mong-muon","title":"<code>collect()</code>\u00a0gi\u00fap ch\u00fang ta l\u1ea5y to\u00e0n b\u1ed9 d\u1eef li\u1ec7u \u0111\u00e3 bi\u1ebfn \u0111\u1ed5i trong\u00a0<code>Stream</code>\u00a0th\u00e0nh \u0111\u1ed1i t\u01b0\u1ee3ng m\u00ecnh mong mu\u1ed1n.","text":"<pre><code>List&lt;String&gt; result = Stream.of(\"b\u1ea1n\", \"h\u00e3y\", \"like\", \"Fanpage\", \"loda\",\"d\u1ec3\",\"c\u1eadp\",\"nh\u1eadt\",\"nhi\u1ec1u\",\"h\u01a1n\")\n                            .filter(s -&gt; {\n                                System.out.println(\"[filtering] \" + s);\n                                return s.length()&gt;=4;\n                            })\n                            .map(s -&gt; {\n                                System.out.println(\"[mapping] \" + s);\n                                return s.toUpperCase();\n                            })\n                            .limit(3)\n                            .collect(Collectors.toList());\nSystem.out.println(\"----------------------\");\nSystem.out.println(\"Result:\");\nresult.forEach(System.out::println);\n</code></pre> <pre><code>[filtering] b\u1ea1n // kh\u00f4ng tho\u1ea3 m\u00e3n\n[filtering] h\u00e3y // ti\u1ebfp t\u1ee5c t\u00ecm, c\u0169ng k tho\u1ea3 m\u00e3n\n[filtering] like // tho\u1ea3 m\u00e3n\n[mapping] like // mapping n\u00f3 lu\u00f4n\n[filtering] Fanpage // l\u1ea1i quay l\u1ea1i filter t\u00ecm ti\u1ebfp, tho\u1ea3 m\u00e3n\n[mapping] Fanpage // mapping\n[filtering] loda // tho\u1ea3 m\u00e3n\n[mapping] loda // mapping\n// \u0110\u1ee7 3 tr\u01b0\u1eddng h\u1ee3p tho\u1ea3 m\u00e3n, d\u1eebng.\n----------------------\nResult:\nLIKE\nFANPAGE\nLODA\n</code></pre>"},{"location":"java/#ban-chat-cua-stream","title":"B\u1ea3n ch\u1ea5t c\u1ee7a Stream","text":"<p>(C\u00f3 v\u00ed d\u1ee5 trong b\u00e0i g\u1ed1c n\u1eefa)</p> <p><code>Stream</code>\u00a0l\u00e0\u00a0<code>Lazy evaluation</code>. Hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 n\u00f3 s\u1ebd kh\u00f4ng x\u1eed l\u00fd d\u1eef li\u1ec7u tr\u1ef1c ti\u1ebfp qua t\u1eebng b\u01b0\u1edbc, m\u00e0 ch\u1edd b\u1ea1n khai b\u00e1o xong t\u1ea5t c\u1ea3 c\u00e1c thao t\u00e1c\u00a0<code>operation</code>\u00a0nh\u01b0\u00a0<code>map</code>,\u00a0<code>filter</code>,v.v.. cho t\u1edbi khi g\u1eb7p l\u1ec7nh\u00a0<code>.collect()</code>\u00a0th\u00ec n\u00f3 th\u1ef1c hi\u1ec7n to\u00e0n b\u1ed9 trong m\u1ed9t v\u00f2ng l\u1eb7p duy nh\u1ea5t.</p> <p>H\u00e0m\u00a0<code>.collect()</code>\u00a0v\u00e0 m\u1ed9t s\u1ed1 h\u00e0m nh\u01b0\u00a0<code>min()</code>,\u00a0<code>max()</code>,\u00a0<code>count()</code>\u00a0\u0111\u01b0\u1ee3c g\u1ecdi l\u00e0\u00a0<code>terminal operation</code>. Khi g\u1ecdi nh\u1eefng function c\u00f3 d\u1ea1ng\u00a0<code>terminal</code>\u00a0th\u00ec\u00a0<code>Stream</code>\u00a0m\u1edbi ch\u00ednh th\u1ee9c ho\u1ea1t \u0111\u1ed9ng. </p> <p>M\u1ed9t l\u01b0u \u00fd khi s\u1eed d\u1ee5ng l\u00e0\u00a0Stream kh\u00f4ng \u0111\u01b0\u1ee3c t\u00e1i s\u1eed d\u1ee5ng. V\u00ec\u00a0<code>Stream</code>\u00a0\u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ec3\u00a0x\u1eed l\u00fd\u00a0d\u1eef li\u1ec7u ch\u1ee9 kh\u00f4ng ph\u1ea3i \u0111\u1ec3\u00a0l\u01b0u tr\u1eef! N\u00ean mu\u1ed1n s\u1eed d\u1ee5ng, m\u1ed7i l\u1ea7n b\u1ea1n s\u1ebd c\u1ea7n t\u1ea1o ra 1\u00a0<code>Stream</code>\u00a0m\u1edbi.</p> <pre><code>Stream&lt;String&gt; stream =\n  Stream.of(\"loda\", \".\", \"me\",\"like\").filter(element -&gt; element.contains(\"e\"));\nOptional&lt;String&gt; anyElement = stream.findAny(); //L\u1ea5y ra m\u1ed9t ph\u1ea7n t\u1eed b\u1ea5t k\u1ef3 trong Stream, n\u00f3 s\u1ebd tr\u1ea3 ra Optional\n\n// Th\u1ef1c hi\u1ec7n d\u00f2ng l\u1ec7nh ti\u1ebfp theo s\u1ebd b\u1eafn ra IllegalStateException\nOptional&lt;String&gt; firstElement = stream.findFirst();\n</code></pre>"},{"location":"java/#khai-niem-threadpool-va-executor-trong-java","title":"Kha\u0301i nie\u0323\u0302m ThreadPool va\u0300 Executor trong Java","text":"<p>M\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n nh\u00e9 (Trong th\u1ef1c t\u1ebf s\u1ebd kh\u00e1c, h\u00e3y coi \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5 nha):</p> <p>B\u00e2y gi\u1edd, gi\u1ea3 s\u1eed b\u1ea1n c\u00f3 m\u1ed9t Server Web. N\u1ebfu ch\u00fang ta nh\u1eadn 1 request t\u1eeb client, ch\u00fang ta s\u1ebd x\u1eed l\u00fd m\u1ea5t 0.5s v\u00e0 tr\u1ea3 v\u1ec1 k\u1ebft qu\u1ea3 cho ng\u01b0\u1eddi d\u00f9ng.</p> <p>Th\u1ebf n\u1ebfu c\u00f3 2 ng\u01b0\u1eddi request c\u00f9ng l\u00fac? =&gt; gi\u1ea3i quy\u1ebft b\u1eb1ng c\u00e1ch m\u1ed7i m\u1ed9t request s\u1ebd x\u1eed l\u00fd \u1edf 1 thread, \u0111\u01a1n gi\u1ea3n.</p> <p>Th\u1ebf n\u1ebfu c\u00f3 100 ng\u01b0\u1eddi request c\u00f9ng l\u00fac? =&gt; m\u1ed7i ng\u01b0\u1eddi t\u1ea1o m\u1ed9t thre... wait a minute.... (n\u1ebfu 1 th\u00e1ng c\u00f3 10M l\u01b0\u1ee3t request =&gt; t\u1ea1o ra 10M thread)</p> <p>N\u1ebfu b\u1ea1n t\u1ea1o 1-2 thread m\u1edbi, ch\u1ea3 ai tr\u00e1ch g\u00ec b\u1ea1n c\u1ea3. Nh\u01b0ng n\u1ebfu b\u1ea1n t\u1ea1o li\u00ean t\u1ee5c v\u00e0 t\u1edbi h\u00e0ng tr\u0103m c\u00e1i m\u1edbi m\u1ed7i l\u1ea7n nh\u01b0ng l\u1ea1i gi\u1ea3i quy\u1ebft c\u00f9ng 1 v\u1ea5n \u0111\u1ec1 th\u00ec c\u00f3 l\u1ed7 h\u1ed5ng \u0111\u1ea5y. V\u00ec chi ph\u00ed c\u1ee7a vi\u1ec7c t\u1ea1o 1 thread l\u00e0 t\u01b0\u01a1ng \u0111\u1ed1i l\u1edbn, th\u01b0\u1eddng d\u1eabn t\u1edbi c\u00e1c v\u1ea5n \u0111\u1ec1 v\u1ec1 hi\u1ec7u n\u0103ng v\u00e0 c\u1ea5p ph\u00e1t d\u1eef li\u1ec7u.</p> <p>V\u1edbi vi\u1ec7c x\u1eed l\u00fd c\u00e1c t\u00e1c v\u1ee5 li\u00ean t\u1ee5c nh\u01b0 v\u1eady, c\u00f3 m\u1ed9t gi\u1ea3i ph\u00e1p l\u00e0 s\u1eed d\u1ee5ng\u00a0<code>Thread Pool</code>.</p> <p>\u1ede v\u00ed d\u1ee5 tr\u00ean, B\u00e2y gi\u1edd t\u00f4i s\u1ebd ch\u1ec9 s\u1eed d\u1ee5ng 30 thread th\u00f4i! V\u00e0 \u0111\u1eb7t 30 thread n\u00e0y \u1edf tr\u1ea1ng th\u00e1i kh\u00f4ng l\u00e0m g\u00ec v\u00e0 v\u1ee9t v\u00e0o 1 c\u00e1i\u00a0<code>Pool</code>\u00a0(1 c\u00e1i b\u1ec3 ch\u1ee9a, ki\u1ec3u v\u1eady). V\u1edbi m\u1ed7i request \u0111\u1ebfn, t\u00f4i s\u1ebd l\u1ea5y trong\u00a0<code>Pool</code>\u00a0ra 1 thread v\u00e0 x\u1eed l\u00fd c\u00f4ng vi\u1ec7c, x\u1eed l\u00fd xong, th\u00ec c\u1ea5t thread v\u00e0o ng\u01b0\u1ee3c tr\u1edf l\u1ea1i pool. \u0110\u01a1n gi\u1ea3n v\u1eady th\u00f4i, nh\u01b0 th\u1ebf ch\u00fang ta s\u1ebd kh\u00f4ng ph\u1ea3i t\u1ea1o m\u1edbi Thread n\u1eefa. Tr\u00e1nh t\u00ecnh t\u1ed1n chi ph\u00ed v\u00e0 hi\u1ec7u n\u0103ng.</p> <p>V\u1ea5n \u0111\u1ec1 l\u00e0 gi\u1ea3 s\u1eed c\u00f3 h\u01a1n 31 request t\u1edbi c\u00f9ng l\u00fac th\u00ec sao? r\u1ea5t \u0111\u00fang, tr\u01b0\u1eddng h\u1ee3p n\u00e0y l\u00e0 ch\u1eafc ch\u1eafn c\u00f3. L\u00fac n\u00e0y\u00a0<code>Pool</code>\u00a0s\u1ebd kh\u00f4ng c\u00f2n thread n\u00e0o s\u1eb5n c\u00f3 n\u1eefa. N\u00ean 1 request c\u00f2n l\u1ea1i s\u1ebd b\u1ecb \u0111\u1ea9y v\u00e0o 1 h\u00e0ng \u0111\u1ee3i\u00a0<code>BlockingQueue</code>. N\u00f3 s\u1ebd \u0111\u1ee3i \u1edf \u0111\u00f3, bao gi\u1edd\u00a0<code>Pool</code>\u00a0c\u00f3 1 thread r\u1ea3nh r\u1ed7i th\u00ec s\u1ebd quay l\u1ea1i x\u1eed l\u00fd n\u1ed1t.</p>"},{"location":"java/#cach-tao-threadpool-trong-java","title":"C\u00e1ch t\u1ea1o ThreadPool trong Java","text":"<p>Java Concurrency API h\u1ed7 tr\u1ee3 m\u1ed9t v\u00e0i lo\u1ea1i\u00a0<code>ThreadPool</code>\u00a0sau:</p> <ul> <li>Cached thread pool: M\u1ed7i nhi\u1ec7m v\u1ee5 s\u1ebd t\u1ea1o ra thread m\u1edbi n\u1ebfu c\u1ea7n, nh\u01b0ng s\u1ebd t\u00e1i s\u1eed d\u1ee5ng l\u1ea1i c\u00e1c thread c\u0169. (C\u00e1i n\u00e0y v\u1eabn nguy hi\u1ec3m nh\u00e9, n\u00ean \u00e1p d\u1ee5ng v\u1edbi c\u00e1c task nh\u1ecf, t\u1ed1n \u00edt t\u00ednh to\u00e1n)</li> <li>Fixed thread pool: gi\u1edbi h\u1ea1n s\u1ed1 l\u01b0\u1ee3ng t\u1ed1i \u0111a c\u1ee7a c\u00e1c Thread \u0111\u01b0\u1ee3c t\u1ea1o ra. C\u00e1c task kh\u00e1c \u0111\u1ebfn sau ph\u1ea3i ch\u1edd trong h\u00e0ng \u0111\u1ee3i (BlockingQueue). (V\u00ed d\u1ee5 \u0111\u1ea7u b\u00e0i)</li> <li>Single-threaded pool: ch\u1ec9 gi\u1eef m\u1ed9t Thread th\u1ef1c thi m\u1ed9t nhi\u1ec7m v\u1ee5 m\u1ed9t l\u00fac.</li> <li>Fork/Join pool: m\u1ed9t Thread \u0111\u1eb7c bi\u1ec7t s\u1eed d\u1ee5ng Fork/ Join Framework b\u1eb1ng c\u00e1ch t\u1ef1 \u0111\u1ed9ng chia nh\u1ecf c\u00f4ng vi\u1ec7c t\u00ednh to\u00e1n cho c\u00e1c core x\u1eed l\u00fd. (T\u00ednh to\u00e1n song song)</li> </ul>"},{"location":"java/#executor","title":"Executor","text":"<p><code>Executor</code>\u00a0l\u00e0 m\u1ed9t class \u0111i k\u00e8m trong g\u00f3i\u00a0<code>java.util.concurrent</code>, l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ecbu tr\u00e1ch nhi\u1ec7m qu\u1ea3n l\u00fd c\u00e1c lu\u1ed3ng v\u00e0 th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 Runnable \u0111\u01b0\u1ee3c y\u00eau c\u1ea7u x\u1eed l\u00fd. N\u00f3 t\u00e1ch ri\u00eang c\u00e1c chi ti\u1ebft c\u1ee7a vi\u1ec7c t\u1ea1o Thread, l\u1eadp k\u1ebf ho\u1ea1ch (scheduling), \u2026 \u0111\u1ec3 ch\u00fang ta c\u00f3 th\u1ec3 t\u1eadp trung ph\u00e1t tri\u1ec3n logic c\u1ee7a t\u00e1c v\u1ee5 m\u00e0 kh\u00f4ng quan t\u00e2m \u0111\u1ebfn c\u00e1c chi ti\u1ebft qu\u1ea3n l\u00fd Thread.</p> <p>N\u00f3i chung n\u00f3 l\u00e0 th\u1eb1ng wrapper c\u00e1c c\u00e1c b\u01b0\u1edbc m\u00ecnh n\u00f3i \u1edf tr\u00ean, v\u00e0 qu\u1ea3n l\u00fd h\u1ed9 ch\u00fang ta.</p> <p>Ch\u00fang c\u00f3 th\u1ec3 t\u1ea1o m\u1ed9t Executor b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng m\u1ed9t trong c\u00e1c ph\u01b0\u01a1ng th\u1ee9c \u0111\u01b0\u1ee3c cung c\u1ea5p b\u1edfi l\u1edbp ti\u1ec7n \u00edch\u00a0<code>Executors</code>\u00a0nh\u01b0 sau:</p> <ul> <li>newSingleThreadExecutor(): trong ThreadPool ch\u1ec9 c\u00f3 1 Thread v\u00e0 c\u00e1c task (nhi\u1ec7m v\u1ee5) s\u1ebd \u0111\u01b0\u1ee3c x\u1eed l\u00fd m\u1ed9t c\u00e1ch tu\u1ea7n t\u1ef1.</li> <li>newCachedThreadPool(): nh\u01b0 gi\u1ea3i th\u00edch \u1edf tr\u00ean, n\u00f3 s\u1ebd c\u00f3 1 s\u1ed1 l\u01b0\u1ee3ng nh\u1ea5t \u0111\u1ecbnh thread \u0111\u1ec3 s\u1eed d\u1ee5ng l\u1ea1i, nh\u01b0ng v\u1eabn s\u1ebd t\u1ea1o m\u1edbi thread n\u1ebfu c\u1ea7n. M\u1eb7c \u0111\u1ecbnh n\u1ebfu m\u1ed9t Thread kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong v\u00f2ng 60 gi\u00e2y th\u00ec Thread \u0111\u00f3 s\u1ebd b\u1ecb t\u1eaft.</li> <li>newFixedThreadPool(int n): trong Pool ch\u1ec9 c\u00f3 n Thread \u0111\u1ec3 x\u1eed l\u00fd nhi\u1ec7m v\u1ee5, c\u00e1c y\u00eau c\u1ea7u t\u1edbi sau b\u1ecb \u0111\u1ea9y v\u00e0o h\u00e0ng \u0111\u1ee3i</li> <li>newScheduledThreadPool(int corePoolSize): t\u01b0\u01a1ng t\u1ef1 nh\u01b0\u00a0<code>newCachedThreadPool()</code>\u00a0nh\u01b0ng s\u1ebd c\u00f3 th\u1eddi gian delay gi\u1eefa c\u00e1c Thread.</li> <li>newSingleThreadScheduledExecutor(): t\u01b0\u01a1ng t\u1ef1 nh\u01b0\u00a0<code>newSingleThreadExecutor()</code>\u00a0nh\u01b0ng s\u1ebd c\u00f3 kho\u1ea3ng th\u1eddi gian delay gi\u1eefa c\u00e1c Thread.</li> </ul>"},{"location":"java/#code-chay-thu","title":"Code ch\u1ea1y th\u1eed","text":"<p>Ch\u00fang ta s\u1ebd l\u1ea5y v\u00ed d\u1ee5 \u0111\u1ea7u b\u00e0i \u0111\u1ec3 code lu\u00f4n nh\u00e9.</p> <p>T\u1ea1o m\u1ed9t class implement\u00a0<code>Runnable</code>\u00a0\u0111\u1ec3 x\u1eed l\u00fd request \u0111\u1ebfn. (ph\u00e2n bi\u1ec7t\u00a0<code>Runnable</code>\u00a0v\u00e0\u00a0<code>Thread</code>\u00a0nh\u00e9 c\u00e1c b\u1ea1n)</p> <pre><code>public class RequestHandler implements Runnable {\n    String name;\n    public RequestHandler(String name){\n        this.name = name;\n    }\n\n    @Override\n    public void run() {\n        try {\n            // B\u1eaft \u0111\u1ea7u x\u1eed l\u00fd request \u0111\u1ebfn\n            System.out.println(Thread.currentThread().getName() + \" Starting process \" + name);\n            // cho ng\u1ee7 500 milis \u0111\u1ec3 v\u00ed d\u1ee5 l\u00e0 qu\u00e1 tr\u00ecnh x\u1eed l\u00fd m\u1ea5t 0,5 s\n            Thread.sleep(500);\n            // K\u1ebft th\u00fac x\u1eed l\u00fd request\n            System.out.println(Thread.currentThread().getName() + \" Finished process \" + name);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre>"},{"location":"java/#newsinglethreadexecutor","title":"newSingleThreadExecutor","text":"<pre><code>import java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n\npublic class SingleThreadPoolExample {\n    public static void main(String[] args) {\n        ExecutorService executor = Executors.newSingleThreadExecutor();\n\n        // C\u00f3 100 request t\u1edbi c\u00f9ng l\u00fac\n        for (int i = 0; i &lt; 100; i++) {\n            executor.execute(new RequestHandler(\"request-\" + i));\n        }\n        executor.shutdown(); // Kh\u00f4ng cho threadpool nh\u1eadn th\u00eam nhi\u1ec7m v\u1ee5 n\u00e0o n\u1eefa\n\n        while (!executor.isTerminated()) {\n            // Ch\u1edd x\u1eed l\u00fd h\u1ebft c\u00e1c request c\u00f2n ch\u1edd trong Queue ...\n        }\n    }\n}\n// OUTPUT:\n/*\n..\n..\npool-1-thread-1 Starting process request-98\npool-1-thread-1 Finished process request-98\npool-1-thread-1 Starting process request-99\npool-1-thread-1 Finished process request-99\n*/\n</code></pre> <p>C\u1ea3 ch\u01b0\u01a1ng tr\u00ecnh ch\u1ec9 c\u00f3 1 pool, 1 thread duy nh\u1ea5t, x\u1eed l\u00fd to\u00e0n b\u1ed9 request \u0111\u1ebfn. C\u00e1i n\u00e0o \u0111\u1ebfn sau th\u00ec \u0111\u1ee3i th\u00f4i.</p>"},{"location":"java/#newfixedthreadpool","title":"newFixedThreadPool()","text":"<pre><code>public class FixedThreadPoolExample {\n    public static void main(String[] args) throws InterruptedException {\n        ExecutorService executor = Executors.newFixedThreadPool(5);\n\n        // C\u00f3 100 request t\u1edbi c\u00f9ng l\u00fac\n\n        for (int i = 0; i &lt; 100; i++) {\n            executor.execute(new RequestHandler(\"request-\" + i));\n        }\n        executor.shutdown(); // Kh\u00f4ng cho threadpool nh\u1eadn th\u00eam nhi\u1ec7m v\u1ee5 n\u00e0o n\u1eefa\n\n        while (!executor.isTerminated()) {\n            // Ch\u1edd x\u1eed l\u00fd h\u1ebft c\u00e1c request c\u00f2n ch\u1edd trong Queue ...\n        }\n    }\n}\n// OUTPUT:\n/*\n..\n..\npool-1-thread-2 Finished process request-96\npool-1-thread-5 Starting process request-99\npool-1-thread-3 Finished process request-97\npool-1-thread-4 Finished process request-98\npool-1-thread-5 Finished process request-99\n*/\n</code></pre> <p>Lo\u1ea1i n\u00e0y th\u00ec ch\u00fang ta c\u1ed1 \u0111\u1ecbnh 5 thread, v\u00e0 n\u00f3 c\u1eed m\u1eb7c \u0111\u1ecbnh nh\u01b0 v\u1eady m\u00e0 x\u00e0i th\u00f4i, thi\u1ebfu thread th\u00ec ph\u1ea3i ch\u1edd t\u1edbi khi c\u00f3</p>"},{"location":"java/#newcachedthreadpool","title":"newCachedThreadPool()","text":"<pre><code>public class CachedThreadPoolExample {\n    public static void main(String[] args) throws InterruptedException {\n        ExecutorService executor = Executors.newCachedThreadPool();\n\n        // C\u00f3 100 request t\u1edbi c\u00f9ng l\u00fac\n\n        for (int i = 0; i &lt; 100; i++) {\n            executor.execute(new RequestHandler(\"request-\" + i));\n            Thread.sleep(200);\n        }\n        executor.shutdown(); // Kh\u00f4ng cho threadpool nh\u1eadn th\u00eam nhi\u1ec7m v\u1ee5 n\u00e0o n\u1eefa\n\n        while (!executor.isTerminated()) {\n            // Ch\u1edd x\u1eed l\u00fd h\u1ebft c\u00e1c request c\u00f2n ch\u1edd trong Queue ...\n        }\n    }\n}\n\n//OUTPUT:\n/*\n..\n..\npool-1-thread-3 Starting process request-98\npool-1-thread-1 Finished process request-96\npool-1-thread-1 Starting process request-99\npool-1-thread-2 Finished process request-97\npool-1-thread-3 Finished process request-98\npool-1-thread-1 Finished process request-99\n*/\n</code></pre> <p>C\u00f3 ch\u00fat kh\u1edfi s\u1eafc, ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y nhanh h\u01a1n h\u1eb3n. V\u00ec n\u00f3 \u0111\u01b0\u1ee3c t\u1ea1o s\u1ed1 thread tho\u1ea3i m\u00e1i n\u1ebfu c\u1ea7n :)))) R\u1ea5t nguy hi\u1ec3m. Nh\u01b0ng b\u1ea1n s\u1ebd th\u1ea5y l\u00e0 c\u00f3 ch\u1ed7 n\u00f3 s\u1eed d\u1ee5ng l\u1ea1i c\u00e1c thread \u0111\u00e3 xong tr\u01b0\u1edbc \u0111\u00f3.# ThreadPoolExecutor va\u0300 nguye\u0302n ta\u0306\u0301c qua\u0309n ly\u0301 pool size</p> <ul> <li>Kh\u00e1i ni\u1ec7m</li> <li>Nguy\u00ean t\u1eafc v\u1eadn h\u00e0nh</li> <li>Code v\u00ed d\u1ee5</li> </ul>"},{"location":"java/#gioi-thieu_2","title":"Gi\u1edbi thi\u1ec7u","text":"<p><code>ThreadPoolExecutor</code>\u00a0l\u00e0 m\u1ed9t class n\u00e2ng cao h\u01a1n c\u1ee7a c\u00e1c\u00a0<code>ThreadPool</code>\u00a0c\u01a1 b\u1ea3n trong g\u00f3i java concurrent. C\u1ee5 th\u1ec3 c\u00e1c th\u1ec3 lo\u1ea1i ThreadPool kh\u00e1c b\u1ea1n xem \u1edf \u0111\u00e2y:</p> <ol> <li>Kha\u0301i nie\u0323\u0302m ThreadPool va\u0300 Executor trong Java</li> </ol> <p>\u0110\u1eb7c \u0111i\u1ec3m c\u1ee7a c\u00e1c lo\u1ea1i\u00a0<code>ThreadPool</code>\u00a0th\u00f4ng th\u01b0\u1eddng \u0111\u01b0\u1ee3c cung c\u1ea5p trong\u00a0<code>ExecutorService</code>\u00a0l\u00e0 kh\u00f4ng \u0111\u1ee7 linh \u0111\u1ed9ng theo t\u00ecnh hu\u1ed1ng. \u0111i\u1ec3n h\u00ecnh l\u00e0 b\u1ecb fix s\u1ed1 l\u01b0\u1ee3ng thread, ho\u1eb7c cho ph\u00e9p t\u1ea1o qu\u00e1 nhi\u1ec1u thread. N\u00f3 th\u1ef1c s\u1ef1 ch\u01b0a ph\u1ea3i ph\u01b0\u01a1ng \u00e1n t\u1ed1i \u01b0u.</p> <p><code>ThreadPoolExecutor</code>\u00a0th\u00ec kh\u00e1c, m\u1ed9t phi\u00ean b\u1ea3n n\u00e2ng c\u1ea5p h\u01a1n, cho ph\u00e9p ch\u00fang ta t\u00f9y bi\u1ebfn s\u1ed1 l\u01b0\u1ee3ng Thread theo k\u1ecbch b\u1ea3n. Gi\u00fap n\u00f3 th\u00f4ng minh h\u01a1n m\u1ea5y c\u00e1i kia m\u1ed9t ch\u00fat.</p> <p>Ngo\u00e0i ra c\u00f2n c\u00f3\u00a0<code>ThreadPoolTaskExecutor</code>\u00a0do\u00a0<code>Spring Framework</code>\u00a0cung c\u1ea5p c\u0169ng ho\u1ea1t \u0111\u1ed9ng t\u01b0\u01a1ng t\u1ef1</p>"},{"location":"java/#khai-niem_1","title":"Kh\u00e1i ni\u1ec7m","text":"<p><code>ThreadPoolExecutor</code>\u00a0v\u00e0\u00a0<code>ThreadPoolTaskExecutor</code>\u00a0c\u0169ng l\u00e0\u00a0<code>Executor</code>\u00a0nh\u01b0ng n\u00f3 c\u00f3 th\u00eam c\u00e1c tham s\u1ed1 nh\u01b0 sau:</p> <ul> <li><code>corePoolSize</code>: S\u1ed1 l\u01b0\u1ee3ng Thread m\u1eb7c \u0111\u1ecbnh trong\u00a0<code>Pool</code></li> <li><code>maxPoolSize</code>: S\u1ed1 l\u01b0\u1ee3ng t\u1ed1i \u0111a Thread trong\u00a0<code>Pool</code></li> <li><code>queueCapacity</code>: S\u1ed1 l\u01b0\u1ee3ng t\u1ed1i da c\u1ee7a\u00a0<code>BlockingQueue</code></li> </ul>"},{"location":"java/#nguyen-tac-van-hanh","title":"Nguy\u00ean t\u1eafc v\u1eadn h\u00e0nh","text":"<p>V\u00ed d\u1ee5 v\u1edbi\u00a0<code>ThreadPoolExecutor</code>\u00a0c\u00f3:</p> <ul> <li><code>corePoolSize</code>: 5</li> <li><code>maxPoolSize</code>: 15</li> <li> <p><code>queueCapacity</code>: 100</p> </li> <li> <p>Khi c\u00f3 request, n\u00f3 s\u1ebd t\u1ea1o trong Pool t\u1ed1i \u0111a 5 thread (<code>corePoolSize</code>).</p> </li> <li>Khi s\u1ed1 l\u01b0\u1ee3ng thread v\u01b0\u1ee3t qu\u00e1 5 thread. N\u00f3 s\u1ebd cho v\u00e0o h\u00e0ng \u0111\u1ee3i.</li> <li>Khi s\u1ed1 l\u01b0\u1ee3ng h\u00e0ng \u0111\u1ee3i full 100 (<code>queueCapacity</code>). L\u00fac n\u00e0y m\u1edbi b\u1eaft \u0111\u1ea7u t\u1ea1o th\u00eam Thread m\u1edbi.</li> <li>S\u1ed1 thread m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o t\u1ed1i \u0111a l\u00e0 15 (<code>maxPoolSize</code>).</li> <li>Khi Request v\u01b0\u1ee3t qu\u00e1 s\u1ed1 l\u01b0\u1ee3ng 15 thread. Request s\u1ebd b\u1ecb t\u1eeb ch\u1ed1i!</li> </ul> <p>V\u1edbi k\u1ecbch b\u1ea3n nh\u01b0 th\u1ebf n\u00e0y, b\u1ea1n s\u1ebd lu\u00f4n ti\u1ebft ki\u1ec7m \u0111\u01b0\u1ee3c s\u1ed1 l\u01b0\u1ee3ng thread s\u1eed d\u1ee5ng l\u00e0 5 trong tr\u01b0\u1eddng h\u1ee3p b\u00ecnh th\u01b0\u1eddng. Nh\u01b0ng v\u1eabn c\u00f3 th\u1ec3 handle l\u00ean t\u1edbi 15 thread n\u1ebfu server qu\u00e1 t\u1ea3i.</p> <p>\u0110i\u1ec3m ch\u00fang ta hay nh\u1ea7m l\u1eabn l\u00e0 \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 t\u1ea1o th\u00eam thread \u0111\u00f3 l\u00e0 khi\u00a0h\u00e0ng \u0111\u1ee3i ph\u1ea3i full. \u0110\u00fang v\u1eady, n\u1ebfu h\u00e0ng \u0111\u1ee3i ch\u01b0a full, th\u00ec c\u00f3 ngh\u0129a ch\u00fang ta ch\u01b0a qu\u00e1 t\u1ea3i.</p>"},{"location":"java/#code-vi-du","title":"Code v\u00ed d\u1ee5","text":"<p>T\u1ea1o ra m\u1ed9t Runnable \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c nhi\u1ec7m v\u1ee5.</p> <pre><code>public class RequestHandler implements Runnable {\n    String name;\n    public RequestHandler(String name){\n        this.name = name;\n    }\n\n    @Override\n    public void run() {\n        try {\n            System.out.println(Thread.currentThread().getName() + \" Starting process \" + name);\n            // Gi\u1ea3 s\u1eed nhi\u1ec7m v\u1ee5 x\u1eed l\u00fd h\u1ebft 0.5s\n            Thread.sleep(500);\n            System.out.println(Thread.currentThread().getName() + \" Finished process \" + name);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>T\u1ea1o ra\u00a0<code>ThreadPoolExecutor</code>\u00a0\u0111\u1ec3 x\u1eed l\u00fd 1000 request t\u1edbi d\u1ed3n d\u1eadp.</p> <pre><code>public class ThreadPoolExecutorExample {\n    public static void main(String[] args) {\n        int corePoolSize = 5;\n        int maximumPoolSize = 10;\n        int queueCapacity = 100;\n        ThreadPoolExecutor executor = new ThreadPoolExecutor(corePoolSize, // S\u1ed1 corePoolSize\n                                                             maximumPoolSize, // s\u1ed1 maximumPoolSize\n                                                             10, // th\u1eddi gian m\u1ed9t thread \u0111\u01b0\u1ee3c s\u1ed1ng n\u1ebfu kh\u00f4ng l\u00e0m g\u00ec\n                                                             TimeUnit.SECONDS,\n                                                             new ArrayBlockingQueue&lt;&gt;(queueCapacity)); // Blocking queue \u0111\u1ec3 cho request \u0111\u1ee3i\n        // 1000 request \u0111\u1ebfn d\u1ed3n d\u1eadp, li\u1ec1n 1 ph\u00e1t, kh\u00f4ng ngh\u1ec9\n        for (int i = 0; i &lt; 1000; i++) {\n            executor.execute(new RequestHandler(\"request-\" + i));\n        }\n        executor.shutdown(); // Kh\u00f4ng cho threadpool nh\u1eadn th\u00eam nhi\u1ec7m v\u1ee5 n\u00e0o n\u1eefa\n\n        while (!executor.isTerminated()) {\n            // Ch\u1edd x\u1eed l\u00fd h\u1ebft c\u00e1c request c\u00f2n ch\u1edd trong Queue ...\n        }\n    }\n}\n\n// OUTPUT\n/*\n..\n..\npool-1-thread-3 Finished process request-96\npool-1-thread-5 Finished process request-97\npool-1-thread-4 Finished process request-98\npool-1-thread-8 Finished process request-100\npool-1-thread-2 Finished process request-99\npool-1-thread-6 Finished process request-102\npool-1-thread-7 Finished process request-101\npool-1-thread-9 Finished process request-104\npool-1-thread-10 Finished process request-103\n*/\n</code></pre> <p>B\u1ea1n s\u1ebd th\u1ea5y l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh \u0111\u00e3 ph\u1ea3i s\u1eed d\u1ee5ng t\u1edbi 10 thread \u0111\u1ec3 x\u1eed l\u00fd h\u1ebft 1000 request c\u00f9ng 1 l\u00fac. Nh\u1edb l\u00e0 c\u00f9ng 1 l\u00fac nh\u00e9 c\u00e1c b\u1ea1n, th\u1ebf l\u00e0 nhi\u1ec1u r\u1ed3i \u0111\u00f3. V\u00e0 theo nguy\u00ean t\u1eafc. N\u00f3 \u0111\u00e3 t\u1eadn d\u1ee5ng h\u1ebft\u00a0<code>maxPoolSize</code>\u00a0r\u1ed3i. M\u00e0\u00a0<code>queue</code>\u00a0v\u1eabn full. N\u00ean c\u00e1c request kh\u00f4ng \u1edf trong\u00a0<code>queue</code>\u00a0s\u1ebd b\u1ecb reject. D\u1eabn t\u1edbi ch\u1ec9 s\u1eed l\u00fd \u0111\u01b0\u1ee3c\u00a0<code>104 request</code>\u00a0m\u00e0 th\u00f4i.</p> <p>B\u00e2y gi\u1edd, v\u1eabn l\u00e0 v\u00ed d\u1ee5 n\u00e0y, nh\u01b0ng m\u1ed7i request c\u00e1ch nhau\u00a0<code>50 milliseconds</code>\u00a0th\u00ec s\u1ebd nh\u01b0 n\u00e0o, d\u1ec5 th\u1edf h\u01a1n k? ch\u1ec9 0.05s th\u00f4i.</p> <pre><code>for (int i = 0; i &lt; 1000; i++) {\n    executor.execute(new RequestHandler(\"request-\" + i));\n    Thread.sleep(50);\n}\n// OUTPUT:\n/*\n..\n..\npool-1-thread-2 Finished process request-993\npool-1-thread-1 Finished process request-994\npool-1-thread-3 Finished process request-995\npool-1-thread-4 Finished process request-996\npool-1-thread-5 Finished process request-997\npool-1-thread-9 Finished process request-998\npool-1-thread-10 Finished process request-999\n*/\n</code></pre> <p>X\u1eed l\u00fd g\u1ecdn g\u00e0ng, s\u1ea1ch s\u1ebd c\u00e1c b\u1ea1n \u1ea1. S\u1ee9c m\u1ea1nh c\u1ee7a\u00a0<code>ThreadPoolExecutor</code>\u00a0ph\u00e1t huy r\u00f5 r\u1ec7t h\u01a1n. T\u1eadn d\u1ee5ng \u0111\u01b0\u1ee3c 10 thread v\u00e0 queue v\u1eabn c\u00f2n ch\u1ed7 n\u00ean r\u1ea5t nhanh, kh\u00e1c bi\u1ec7t trong m\u1ed9t h\u1ec7 th\u1ed1ng c\u00f3 th\u1ec3 \u0111c t\u00ednh b\u1eb1ng\u00a0<code>milliseconds</code>\u00a0nh\u01b0 v\u1eady \u0111\u00f3. n\u1ebfu m\u1ed7i request c\u00e1ch nhau\u00a0<code>100 milliseconds</code>\u00a0th\u00ec n\u00f3 ch\u1ec9 c\u1ea7n s\u1eed d\u1ee5ng 5 thread th\u00f4i.</p> <p>to\u00e0n b\u1ed9 code m\u00ecnh \u0111\u1ec3 t\u1ea1i Github:\u00a0CODE</p> <p>Ch\u00fac c\u00e1c b\u1ea1n h\u1ecdc t\u1eadp t\u1ed1t! ohoho</p>"},{"location":"java/#gioi-thieu-reactive-programming-voi-reactor","title":"Gio\u031b\u0301i thie\u0323\u0302u Reactive Programming vo\u031b\u0301i Reactor","text":""},{"location":"java/#gioi-thieu_3","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00e1c \u1ee9ng d\u1ee5ng hi\u1ec7n nay y\u00eau c\u1ea7u m\u1ed9t t\u1ed1c \u0111\u1ed9 ph\u1ea3n h\u1ed3i cao \u0111\u1ec3 n\u00e2ng cao tr\u1ea3i nghi\u1ec7m ng\u01b0\u1eddi d\u00f9ng, gi\u00fap h\u1ec7 th\u1ed1ng m\u01b0\u1ee3t m\u00e0, linh ho\u1ea1t, kh\u00f4ng b\u1ecb \u0111\u00f3ng b\u0103ng lu\u1ed3ng. C\u00e1c y\u00eau c\u1ea7u n\u00e0y c\u0169ng l\u00e0 k\u1ebft qu\u1ea3 h\u01b0\u1edbng t\u1edbi khi ch\u00fang ta s\u1eed d\u1ee5ng m\u00f4 h\u00ecnh l\u1eadp tr\u00ecnh theo\u00a0Reactive Programming.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd c\u1ed1 g\u1eafng l\u00e0m s\u00e1ng t\u1ecf m\u00f4 h\u00ecnh l\u1eadp tr\u00ecnh n\u00e0y th\u00f4ng qua m\u1ed9t s\u1ed1 kh\u00e1i ni\u1ec7m\u00a0<code>Synchronous</code>\u00a0v\u00e0\u00a0<code>Asynchronous</code>\u00a0,\u00a0<code>Blocking</code>\u00a0v\u00e0\u00a0<code>Non-Blocking</code>\u00a0tr\u01b0\u1edbc.</p>"},{"location":"java/#synchronous-va-asynchronous","title":"Synchronous v\u00e0 Asynchronous","text":"<p><code>Synchronous</code>\u00a0(X\u1eed l\u00fd \u0111\u1ed3ng b\u1ed9): l\u00e0 x\u1eed l\u00fd m\u00e0 ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ch\u1ea1y theo t\u1eebng b\u01b0\u1edbc, ngh\u0129a l\u00e0 th\u1ef1c hi\u1ec7n xong \u0111o\u1ea1n code tr\u00ean m\u1edbi t\u1edbi \u0111o\u1ea1n code k\u1ebf ti\u1ebfp v\u00e0 s\u1ebd theo th\u1ee9 t\u1ef1 t\u1eeb tr\u00ean xu\u1ed1ng d\u01b0\u1edbi, t\u1eeb tr\u00e1i qua ph\u1ea3i. \u0110\u00e2y c\u0169ng l\u00e0 nguy\u00ean t\u1eafc c\u01a1 b\u1ea3n m\u00e0 c\u00e1c b\u1ea1n \u0111\u00e3 \u0111\u01b0\u1ee3c h\u1ecdc.</p> <p><code>Asynchronous</code>\u00a0(X\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9): Ng\u01b0\u1ee3c l\u1ea1i v\u1edbi x\u1eed l\u00fd \u0111\u1ed3ng b\u1ed9, ngh\u0129a l\u00e0 ch\u01b0\u01a1ng tr\u00ecnh c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng nh\u1ea3y c\u00f3c, function ph\u00eda d\u01b0\u1edbi c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng m\u00e0 kh\u00f4ng c\u1ea7n ph\u1ea3i ch\u1edd function hay m\u1ed9t \u0111o\u1ea1n code n\u00e0o \u0111\u00f3 ph\u00eda tr\u00ean th\u1ef1c hi\u1ec7n xong. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 minh h\u1ecda cho vi\u1ec7c l\u00e0m vi\u1ec7c v\u1edbi d\u1eef li\u1ec7u \u0111\u1ed3ng b\u1ed9 v\u00e0 b\u1ea5t \u0111\u1ed3ng b\u1ed9 :</p> <p>!image</p> <p>Nh\u01b0 ta th\u1ea5y n\u1ebfu c\u00e1c c\u00f4ng vi\u1ec7c kh\u00f4ng li\u00ean quan \u0111\u1ebfn nhau th\u00ec b\u1ea5t \u0111\u1ed3ng b\u1ed9 gi\u00fap ta ti\u1ebft ki\u1ec7m th\u1eddi gian x\u1eed l\u00fd h\u01a1n v\u00e0 mang l\u1ea1i cho ng\u01b0\u1eddi d\u00f9ng tr\u1ea3i nghi\u1ec7m t\u1ed1t h\u01a1n.</p>"},{"location":"java/#blocking-va-non-blocking","title":"Blocking v\u00e0 Non-Blocking","text":"<p>Ch\u00fang ta c\u00f3 th\u1ec3 hi\u1ec3u m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n khi ch\u00fang ta mu\u1ed1n d\u1ea5y m\u1ed9t danh s\u00e1ch\u00a0<code>Student</code>.</p> <p>L\u1eadp tr\u00ecnh theo m\u00f4 h\u00ecnh\u00a0<code>Blocking</code>\u00a0th\u00ec ph\u1ea3i ch\u1edd \u0111\u1ee3i ch\u01b0\u01a1ng tr\u00ecnh th\u1ef1c hi\u1ec7n l\u1ea5y t\u1ea5t c\u1ea3\u00a0<code>Student</code>\u00a0r\u1ed3i m\u1edbi th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c ti\u1ebfp theo, hay \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 b\u1ecb \u0111\u00f3ng b\u0103ng lu\u1ed3ng ch\u1edd qu\u00e1 tr\u00ecnh \u0111\u00f3ng g\u00f3i t\u1ea5t c\u1ea3\u00a0<code>Student</code>\u00a0ho\u00e0n t\u1ea5t. Do \u0111\u00f3 s\u1ebd d\u1eabn t\u1ed1n th\u1eddi gian ch\u1edd \u0111\u1ee3i n\u1ebfu s\u1ed1 l\u01b0\u1ee3ng danh s\u00e1ch r\u1ea5t l\u1edbn.</p> <p>L\u1eadp tr\u00ecnh theo m\u00f4 h\u00ecnh\u00a0<code>Non-Blocking</code>\u00a0th\u00ec ho\u1ea1t \u0111\u1ed9ng ng\u01b0\u1ee3c l\u1ea1i, kh\u00f4ng c\u1ea7n ph\u1ea3i ch\u1edd \u0111\u1ee3i ho\u00e0n thi\u1ec7n c\u1ea3 danh s\u00e1ch\u00a0<code>Student</code>\u00a0m\u00e0 v\u1edbi m\u1ed7i\u00a0<code>Student</code>\u00a0n\u00e0o \u0111\u01b0\u1ee3c \u0111\u01b0a ra th\u00ec th\u1ef1c hi\u1ec7n thao t\u00e1c lu\u00f4n v\u1edbi n\u00f3. \u0110i\u1ec1u n\u00e0y d\u1eabn t\u1edbi kh\u00f4ng b\u1ecb \u0111\u00f3ng b\u0103ng lu\u1ed3ng, k\u1ec3 c\u1ea3 s\u1ed1 l\u01b0\u1ee3ng danh s\u00e1ch l\u1edbn.</p>"},{"location":"java/#reactive-programming","title":"Reactive Programming","text":"<p>N\u00f3i m\u1ed9t c\u00e1ch ng\u1eafn g\u1ecdn,\u00a0Reactive Programming\u00a0l\u00e0 m\u00f4 h\u00ecnh l\u1eadp tr\u00ecnh m\u00e0 \u1edf \u0111\u00f3 d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c truy\u1ec1n t\u1ea3i d\u01b0\u1edbi d\u1ea1ng lu\u1ed3ng ( stream). M\u00f4 h\u00ecnh n\u00e0y d\u01b0a tr\u00ean nguy\u00ean t\u1eafc\u00a0<code>Asynchronous</code>\u00a0v\u00e0\u00a0<code>Non-Blocking</code>\u00a0\u0111\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi d\u1eef li\u1ec7u.</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 m\u1ed9t s\u1ed1 kh\u00e1i ni\u1ec7m m\u00e0 b\u1ea1n c\u1ea7n ph\u1ea3i bi\u1ebft khi l\u00e0m vi\u1ec7c v\u1edbi m\u00f4 h\u00ecnh n\u00e0y:</p> <p>Publisher:\u00a0L\u00e0 nh\u00e0 cung c\u1ea5p d\u1eef li\u1ec7u, ho\u1eb7c l\u00e0 n\u01a1i ph\u00e1t ra ngu\u1ed3n d\u1eef li\u1ec7u.</p> <p>Subscriber:\u00a0L\u1eafng nghe\u00a0Publisher, y\u00eau c\u1ea7u d\u1eef li\u1ec7u m\u1edbi. Hay \u0111\u01b0\u1ee3c g\u1ecdi L\u00e0 ng\u01b0\u1eddi ti\u00eau th\u1ee5 d\u1eef li\u1ec7u.</p> <p>Backpressure:\u00a0L\u00e0 kh\u1ea3 n\u0103ng m\u00e0\u00a0Subscriber\u00a0cho ph\u00e9p\u00a0Publisher\u00a0c\u00f3 th\u1ec3 x\u1eed l\u00fd bao nhi\u00eau y\u00eau c\u1ea7u t\u1ea1i th\u1eddi \u0111i\u1ec3m \u0111\u00f3. B\u1edfi v\u00ec\u00a0Subscriber\u00a0ch\u1ecbu tr\u00e1ch nhi\u1ec7m v\u1ec1 lu\u1ed3ng d\u1eef li\u1ec7u, kh\u00f4ng ph\u1ea3i\u00a0Publisher\u00a0v\u00ec n\u00f3 ch\u1ec9 cung c\u1ea5p d\u1eef li\u1ec7u.</p> <p>Stream:\u00a0Lu\u1ed3ng d\u1eef li\u1ec7u bao g\u1ed3m c\u00e1c d\u1eef li\u1ec7u tr\u1ea3 v\u1ec1 , c\u00e1c l\u1ed7i x\u1ea3y ra v\u00e0 lu\u1ed3ng n\u00e0y ph\u1ea3i l\u00e0 lu\u1ed3ng b\u1ea5t \u0111\u1ed3ng b\u1ed9.</p> <p>Nh\u01b0 v\u1eady d\u1eef li\u1ec7u c\u1ee7a ch\u00fang ra s\u1ebd \u0111\u01b0\u1ee3c chuy\u1ec3n th\u00e0nh m\u1ed9t d\u00f2ng (data stream) do \u0111\u00f3 tr\u00e1nh \u0111\u01b0\u1ee3c vi\u1ec7c b\u1ecb blocking v\u00e0 c\u00e1c d\u1eef li\u1ec7u ph\u00e1t ra th\u00ec \u0111\u1ec1u \u0111\u01b0\u1ee3c subcriber l\u1eafng nghe d\u1eabn \u0111\u1ebfn qu\u00e1 tr\u00ecnh x\u1eed l\u00fd v\u00e0 b\u00e1o l\u1ed7i di\u1ec5n ra m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n h\u01a1n.</p>"},{"location":"java/#reactor","title":"Reactor","text":"<p>Reactor\u00a0l\u00e0 m\u1ed9t n\u1ec1n t\u1ea3ng \u0111\u1ec3 ta tri\u1ec3n khai vi\u1ec7c l\u1eadp tr\u00ecnh theo phong c\u00e1ch\u00a0reactive programming. N\u00f3 \u0111\u01b0\u1ee3c t\u00edch h\u1ee3p tr\u1ef1c ti\u1ebfp v\u1edbi Java 8 funcion APIs nh\u01b0\u00a0<code>CompletableFuture</code>,\u00a0<code>Stream</code>,\u00a0<code>Duration</code>.</p> <p>Reactor\u00a0cung c\u1ea5p 2 lo\u1ea1i v\u1ec1\u00a0Publisher\u00a0:</p> <p><code>Flux</code>: l\u00e0 m\u1ed9t steam ph\u00e1t ra t\u1eeb 0...n ph\u1ea7n t\u1eed.</p> <p>!image</p> <p><code>Mono</code>: l\u00e0 m\u1ed9t steam ph\u00e1t ra t\u1eeb 0...1 ph\u1ea7n t\u1eed.</p> <p>!image</p> <p>V\u1eady l\u00e0 c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c\u00a0Reactive Programming\u00a0ph\u1ea3i kh\u00f4ng n\u00e0o :D. C\u00e1c b\u00e0i vi\u1ebft t\u1edbi ch\u00fang ta s\u1ebd \u0111i s\u00e2u h\u01a1n v\u1ec1 c\u00e1c th\u1ef1c thi c\u0169ng nh\u01b0 c\u00e1c\u00a0<code>function</code>\u00a0m\u00e0\u00a0Reactor\u00a0h\u1ed7 tr\u1ee3. H\u00e3y ch\u00fa \u00fd theo d\u00f5i v\u00e0 \u0111\u1eebng qu\u00ean nh\u1eadn x\u00e9t \u0111\u1ec3 ch\u00fang t\u00f4i c\u00f3 th\u1ec3 c\u1ea3i thi\u1ec7n c\u00e1c b\u00e0i vi\u1ebft t\u1ed1t h\u01a1n.</p>"},{"location":"java/#gioi-thieu-reactor-core","title":"Gio\u031b\u0301i thie\u0323\u0302u Reactor Core","text":"<ul> <li>Maven Dependencies</li> <li>T\u1ea1o ra m\u1ed9t lu\u1ed3ng d\u1eef li\u1ec7u</li> <li>Subscribe()</li> <li>So s\u00e1nh v\u1edbi Streams Java 8</li> <li>Backpressure</li> <li>Concurrency</li> <li>K\u1ebft lu\u1eadn</li> </ul>"},{"location":"java/#tong-quan","title":"T\u1ed5ng Quan","text":"<p>Reactor Core\u00a0l\u00e0 m\u1ed9t th\u1ef1 vi\u1ec7n Java 8 implement m\u00f4 h\u00ecnh\u00a0Reactive Programming. N\u00f3 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean\u00a0Reactive Streams Specification\u00a0- m\u1ed9t ti\u00eau chu\u1ea9n \u0111\u1ec3 x\u00e2y d\u1ef1ng \u1ee9ng d\u1ee5ng\u00a0<code>Reactive</code>.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta s\u1ebd \u0111i t\u1eebng b\u01b0\u1edbc nh\u1ecf th\u00f4ng qua\u00a0<code>Reactor</code>\u00a0cho \u0111\u1ebfn khi c\u00f3 c\u00e1i nh\u00ecn to\u00e0n c\u1ea3nh c\u0169ng nh\u01b0 c\u00e1ch th\u1ef1c thi c\u1ee7a\u00a0Reactor core.</p>"},{"location":"java/#maven-dependencies","title":"Maven Dependencies","text":"<p>\u0110\u00e2y l\u00e0 th\u01b0 vi\u1ec7n c\u1ee7a\u00a0<code>Reactor</code>, ch\u00fang ta c\u00f3 th\u1ec3 l\u1ea5y th\u01b0 vi\u1ec7n m\u1edbi nh\u1ea5t t\u1ea1i\u00a0\u0111\u00e2y</p> <pre><code>&lt;dependency&gt;&lt;groupId&gt;io.projectreactor&lt;/groupId&gt;\n    &lt;artifactId&gt;reactor-core&lt;/artifactId&gt;\n    &lt;version&gt;3.2.8.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"java/#tao-ra-mot-luong-du-lieu","title":"T\u1ea1o ra m\u1ed9t lu\u1ed3ng d\u1eef li\u1ec7u","text":"<p>\u0110\u1ec3 c\u00f3 m\u1ed9t \u1ee9ng d\u1ef1ng ph\u1ea3n \u1ee9ng (reactive), \u0111i\u1ec1u \u0111\u1ea7u ti\u00ean ch\u00fang ta c\u1ea7n ph\u1ea3i l\u00e0m l\u00e0 t\u1ea1o ra m\u1ed9t lu\u1ed3ng d\u1eef li\u1ec7u. Kh\u00f4ng c\u00f3 d\u1eef li\u1ec7u n\u00e0y ch\u00fang ta s\u1ebd kh\u00f4ng c\u00f3 b\u1ea5t c\u1ee9 \u0111i\u1ec1u g\u00ec \u0111\u1ec3 ph\u1ea3n \u1ee9ng, \u0111\u00f3 l\u00e0 l\u00fd do t\u1ea1i sao \u0111\u00e2y l\u00e0 b\u01b0\u1edbc \u0111\u1ea7u ti\u00ean.</p> <p><code>Reactor core</code>\u00a0cung c\u1ea5p 2 lo\u1ea1i d\u1eef li\u1ec7u cho ph\u00e9p ch\u00fang ta th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y.</p> <p>Flux</p> <p>C\u00e1ch \u0111\u1ea7u ti\u00ean \u0111\u00f3 l\u00e0 d\u00f9ng\u00a0<code>Flux</code>.\u00a0<code>Flux</code>\u00a0l\u00e0 m\u1ed9t lu\u1ed3ng c\u00f3 th\u1ec3 ph\u00e1t ra\u00a00..n\u00a0ph\u1ea7n t\u1eed. V\u00ed d\u1ee5 t\u1ea1o \u0111\u01a1n gi\u1ea3n:</p> <pre><code>Flux&lt;Integer&gt; just = Flux.just(1,2,3,4);\n</code></pre> <p>Mono</p> <p>C\u00e1ch th\u1ee9 hai \u0111\u00f3 l\u00e0\u00a0<code>Mono</code>.\u00a0<code>Mono</code>\u00a0l\u00e0 m\u1ed9t lu\u1ed3ng c\u00f3 th\u1ec3 ph\u00e1t ra\u00a00..1\u00a0ph\u1ea7n t\u1eed. N\u00f3 ho\u1ea1t \u0111\u1ed9ng g\u1ea7n gi\u1ed1ng h\u1ec7 nh\u01b0\u00a0<code>Flux</code>, ch\u1ec9 l\u00e0 b\u1ecb gi\u1edbi h\u1ea1n kh\u00f4ng qu\u00e1 m\u1ed9t ph\u1ea7n t\u1eed. V\u00ed d\u1ee5:</p> <pre><code>Mono&lt;String&gt; just = Mono.just(\"atomPtit\");\n</code></pre> <p>\u0110i\u1ec1u l\u01b0u \u00fd r\u1eb1ng c\u1ea3\u00a0<code>Flux</code>\u00a0v\u00e0\u00a0<code>Mono</code>\u00a0\u0111\u1ec1 \u0111\u01b0\u1ee3c tri\u1ec3n khai t\u1eeb interface\u00a0<code>Publisher</code>. C\u1ea3 hai \u0111\u1ec1u tu\u1ea7n th\u1ee7 ti\u00eau chu\u1ea9n\u00a0<code>Reactive</code>, ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng interface nh\u01b0 sau:</p> <pre><code>Publisher&lt;String&gt; just = Mono.just(\"foo\");\n</code></pre>"},{"location":"java/#subscribe","title":"Subscribe()","text":"<p>H\u00e3y lu\u00f4n ghi nh\u1edb r\u1eb1ng:\u00a0Kh\u00f4ng c\u00f3 g\u00ec x\u1ea3y ra cho \u0111\u1ebfn khi subscribe()\u00a0.</p> <p>Trong\u00a0<code>reactor</code>, khi b\u1ea1n vi\u1ebft m\u1ed9t\u00a0<code>Publisher</code>, d\u1eef li\u1ec7u kh\u00f4ng b\u1eaft \u0111\u1ea7u \u0111\u01b0\u1ee3c b\u01a1m v\u00e0o theo m\u1eb7c \u0111\u1ecbnh. Thay v\u00e0o \u0111\u00f3, b\u1ea1n t\u1ea1o m\u1ed9t m\u00f4 t\u1ea3 tr\u1eebu t\u01b0\u1ee3ng v\u1ec1 quy \u0111\u1ecbnh kh\u00f4ng \u0111\u1ed3ng b\u1ed9 c\u1ee7a b\u1ea1n(h\u1ed7 tr\u1ee3 t\u00e1i s\u1eed d\u1ee5ng).</p> <p>\u0110\u1ec3 hi\u1ec3u r\u00f5 lu\u1ed3ng ho\u1ea1t \u0111\u1ed9ng h\u00e3y theo d\u00f5i qua v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n sau.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;io.projectreactor&lt;/groupId&gt;\n    &lt;artifactId&gt;reactor-core&lt;/artifactId&gt;\n    &lt;version&gt;3.2.8.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;\n    &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;\n    &lt;version&gt;1.1.3&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Ch\u00fang ta th\u00eam th\u01b0 vi\u1ec7n\u00a0<code>logback</code>. \u0110i\u1ec1u n\u00e0y s\u1ebd gi\u00fap ch\u00fang ta ghi nh\u1eadt k\u00fd \u0111\u1ea7u ra c\u1ee7a qu\u00e1 tr\u00ecnh ho\u1ea1t \u0111\u1ed9ng\u00a0<code>reactor</code>\u00a0t\u1eeb \u0111\u00f3 hi\u1ec3u r\u00f5 h\u01a1n v\u1ec1 lu\u1ed3ng d\u1eef li\u1ec7u.</p> <pre><code>public class ReactorCode {\n    public static void main(String[] args) {\n        List&lt;Integer&gt; elements = new ArrayList&lt;&gt;();\n        Flux.just(1, 2, 3, 4)\n                .log()\n                .subscribe(elements::add);\n    }\n}\n\n// OUTPUT:\n/*\n23:02:16.996 [main] DEBUG reactor.util.Loggers$LoggerFactory - Using Slf4j logging framework\n23:02:17.014 [main] INFO  reactor.Flux.Array.1 - | onSubscribe([Synchronous Fuseable] FluxArray.ArraySubscription)\n23:02:17.017 [main] INFO  reactor.Flux.Array.1 - | request(unbounded)\n23:02:17.018 [main] INFO  reactor.Flux.Array.1 - | onNext(1)\n23:02:17.018 [main] INFO  reactor.Flux.Array.1 - | onNext(2)\n23:02:17.018 [main] INFO  reactor.Flux.Array.1 - | onNext(3)\n23:02:17.018 [main] INFO  reactor.Flux.Array.1 - | onNext(4)\n23:02:17.019 [main] INFO  reactor.Flux.Array.1 - | onComplete()\n*/\n</code></pre> <p>H\u00e3y nh\u00ecn v\u00e0o ph\u1ea7n output, m\u1ecdi th\u1ee9 \u0111\u1ec1u ch\u1ea1y tr\u00ean main thread. B\u00e2y gi\u1edd chugn ta \u0111i xem r\u00f5 t\u1eebng d\u00f2ng th\u1ef1c thi: 1.\u00a0<code>onSubscribe()</code>\u00a0- \u0110i\u1ec1u n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi thi ch\u00fang ra \u0111\u0103ng k\u00fd (subscriber()) lu\u1ed3ng</p> <ol> <li><code>request(unbounded)</code>\u00a0- Khi ch\u00fang ta g\u1ecdi \u0111\u0103ng k\u00fd, th\u00ec h\u00e0m n\u00e0y \u0111\u01b0\u1ee3c ch\u1ea1y ng\u1ea7m nh\u1eb1m \u00fd ngh\u0129a t\u1ea1o \u0111\u0103ng k\u00fd. Trong tr\u01b0\u1eddng h\u1ee3p n\u00e0y ch\u1ea1y m\u1eb7c \u0111\u1ecbnh l\u00e0 unbounded (kh\u00f4ng gi\u1edbi h\u1ea1n), ngh\u0129a l\u00e0 n\u00f3 y\u00eau c\u1ea7u m\u1ecdi ph\u1ea7n t\u1eed c\u00f3 s\u1eb5n.</li> <li><code>onNext()</code>\u00a0- H\u00e0m n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi cho m\u1ecdi ph\u1ea7n t\u1eed \u0111\u01a1n.</li> <li><code>onComplete()</code>\u00a0- H\u00e0m n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi sau c\u00f9ng sau khi nh\u1eadn \u0111\u01b0\u1ee3c ph\u1ea7n t\u1eed cu\u1ed1i c\u00f9ng. Trong th\u1ef1c c\u00f3 th\u1ec3 x\u1ea3y ra c\u00e1c h\u00e0m kh\u00e1c nh\u01b0\u00a0<code>onError()</code>, c\u00e1i m\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c g\u1ecdi khi x\u1ea3y ra m\u1ed9t exception.</li> </ol>"},{"location":"java/#so-sanh-voi-streams-java-8","title":"So s\u00e1nh v\u1edbi Streams Java 8","text":"<p>C\u00f3 v\u1ebb nhi\u1ec1u ng\u01b0\u1eddi v\u1eabn \u0111ang ngh\u0129 s\u1ef1 t\u01b0\u01a1ng \u0111\u1ed3ng v\u1edbi Stream trong Java 8:</p> <pre><code>List&lt;Integer&gt; collected = Stream.of(1, 2, 3, 4)\n  .collect(toList());\n</code></pre> <p>S\u1ef1 kh\u00e1c bi\u1ebft c\u1ed1t l\u00f5i l\u00e0\u00a0<code>Reactive</code>\u00a0l\u00e0 m\u1ed9t h\u00ecnh\u00a0push\u00a0(\u0111\u1ea9y) , trong khi Stream Java 8 l\u00e0 m\u00f4 h\u00ecnh\u00a0pull\u00a0(k\u00e9o)</p> <p>Streams Java 8 l\u00e0\u00a0<code>terminal</code>\u00a0- k\u00e9o t\u1ea5t c\u1ea3 d\u1eef li\u1ec7u v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t k\u1ebft qu\u1ea3. V\u1edbi\u00a0<code>Reactive</code>, ch\u00fang ta c\u00f3 m\u1ed9t lu\u1ed3ng v\u00f4 h\u1ea1n \u0111\u1ebfn t\u1eeb m\u1ed9t ngu\u1ed3i t\u00e0i nguy\u00ean b\u00ean ngo\u00e0i, v\u1edbi nhi\u1ec1u ng\u01b0\u1eddi subscribe(). Ch\u00fang ta c\u0169ng c\u00f3 th\u1ec3 l\u00e0m nh\u1eefng vi\u1ec7c nh\u01b0 k\u1ebft h\u1ee3p c\u00e1c lu\u1ed3ng, ti\u1ec1u ti\u1ebft lu\u1ed3ng v\u00e0\u00a0<code>backpressure</code>.</p>"},{"location":"java/#backpressure","title":"Backpressure","text":"<p>Trong v\u00ed d\u1ee5 tr\u00ean, ng\u01b0\u1eddi \u0111\u0103ng k\u00fd n\u00f3i v\u1edbi\u00a0<code>Publisher</code>\u00a0\u0111\u1ea9y t\u1eebng ph\u1ea7n t\u1eed m\u1ed9t. \u0110i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 tr\u1edf n\u00ean qu\u00e1 t\u1ea3i cho ng\u01b0\u1eddi \u0111\u0103ng k\u00fd ph\u1ea3i ti\u00eau th\u1ee5 h\u1ebft t\u1ea5t c\u1ea3 t\u00e0i nguy\u00ean c\u1ee7a n\u00f3.</p> <p>Backpressure\u00a0\u0111\u01a1n gi\u1ea3n ch\u1ec9 l\u00e0 b\u1ea3o v\u1edbi\u00a0<code>Publisher</code>\u00a0g\u1eedi cho n\u00f3 \u00edt d\u1eef li\u1ec7u h\u01a1n \u0111\u1ec3 ng\u0103n ch\u1eb7n n\u00f3 b\u1ecb qu\u00e1 t\u1ea3i.</p> <p>V\u00ed d\u1ee5 d\u01b0\u1edbi \u0111\u00e2y, ch\u00fang ta s\u1ebd y\u00eau c\u1ea7u ch\u1ec9 g\u1eedi 2 ph\u1ea7n t\u1eeb c\u00f9ng m\u1ed9t l\u00fac b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>request ()</code>:</p> <pre><code>Flux.just(1, 2, 3, 4)\n  .log()\n  .subscribe(new Subscriber&lt;Integer&gt;() {\n    private Subscription s;\n    int onNextAmount;\n\n    @Override\n    public void onSubscribe(Subscription s) {\n        this.s = s;\n        s.request(2);\n    }\n\n    @Override\n    public void onNext(Integer integer) {\n        elements.add(integer);\n        onNextAmount++;\n        if (onNextAmount % 2 == 0) {\n            s.request(2);\n        }\n    }\n\n    @Override\n    public void onError(Throwable t) {}\n\n    @Override\n    public void onComplete() {}\n});\n\n//OUTPUT\n/*\n23:31:15.395 [main] INFO  reactor.Flux.Array.1 - | onSubscribe([Synchronous Fuseable] FluxArray.ArraySubscription)\n23:31:15.397 [main] INFO  reactor.Flux.Array.1 - | request(2)\n23:31:15.397 [main] INFO  reactor.Flux.Array.1 - | onNext(1)\n23:31:15.398 [main] INFO  reactor.Flux.Array.1 - | onNext(2)\n23:31:15.398 [main] INFO  reactor.Flux.Array.1 - | request(2)\n23:31:15.398 [main] INFO  reactor.Flux.Array.1 - | onNext(3)\n23:31:15.398 [main] INFO  reactor.Flux.Array.1 - | onNext(4)\n23:31:15.398 [main] INFO  reactor.Flux.Array.1 - | request(2)\n23:31:15.398 [main] INFO  reactor.Flux.Array.1 - | onComplete()\n*/\n</code></pre> <p>B\u00e2y gi\u1edd ch\u00fang ta nh\u00ecn th\u1ea5y h\u00e0m\u00a0<code>request()</code>\u00a0\u0111\u01b0\u1ee3c g\u1ecdi tr\u01b0\u1edbc, ti\u1ebfp theo \u0111\u00f3 l\u00e0 2 h\u00e0m\u00a0<code>onNext()</code>\u00a0th\u1ef1c hi\u1ec7n, sau \u0111\u00f3 l\u1ea1i l\u00e0\u00a0<code>request()</code>.</p>"},{"location":"java/#concurrency","title":"Concurrency","text":"<p>T\u1ea5t c\u1ea3 c\u00e1c v\u00ed d\u1ee5 tr\u00ean ch\u00fang ta \u0111\u1ec1u \u0111ang ch\u1ea1y tr\u00ean m\u1ed9t lu\u1ed3ng ch\u00ednh. Tuy nhi\u00ean, ch\u00fang ta c\u00f3 th\u1ec3 ki\u1ec3m so\u00e1t lu\u1ed3ng n\u00e0o m\u00e0 code c\u1ee7a ch\u00fang ta ch\u1ea1y n\u1ebfu ch\u00fang ta mu\u1ed1n. C\u00e1c inteface\u00a0<code>Scheduler</code>\u00a0cung c\u1ea5p m\u1ed9t s\u1ef1 tr\u1eebu t\u01b0\u1ee3ng v\u1edbi\u00a0<code>asynchronous</code>.</p> <pre><code>public class ReactorCode {\n    public static void main(String[] args) {\n        ExecutorService service = Executors.newFixedThreadPool(10);\n        Flux.just(1, 2, 3, 4)\n                .log()\n                .subscribeOn(Schedulers.fromExecutorService(service))\n                .subscribe();\n\n        Flux.just(5, 6, 7, 8)\n                .log()\n                .subscribeOn(Schedulers.fromExecutorService(service))\n                .subscribe();\n    }\n}\n\n//OUTPUT\n/*\n23:48:02.972 [main] DEBUG reactor.util.Loggers$LoggerFactory - Using Slf4j logging framework\n23:48:02.996 [pool-1-thread-2] INFO  reactor.Flux.Array.2 - | onSubscribe([Synchronous Fuseable] FluxArray.ArraySubscription)\n23:48:02.996 [pool-1-thread-1] INFO  reactor.Flux.Array.1 - | onSubscribe([Synchronous Fuseable] FluxArray.ArraySubscription)\n23:48:03.000 [pool-1-thread-2] INFO  reactor.Flux.Array.2 - | request(unbounded)\n23:48:03.000 [pool-1-thread-1] INFO  reactor.Flux.Array.1 - | request(unbounded)\n23:48:03.001 [pool-1-thread-1] INFO  reactor.Flux.Array.1 - | onNext(1)\n23:48:03.001 [pool-1-thread-2] INFO  reactor.Flux.Array.2 - | onNext(5)\n23:48:03.001 [pool-1-thread-1] INFO  reactor.Flux.Array.1 - | onNext(2)\n23:48:03.001 [pool-1-thread-2] INFO  reactor.Flux.Array.2 - | onNext(6)\n23:48:03.001 [pool-1-thread-1] INFO  reactor.Flux.Array.1 - | onNext(3)\n23:48:03.001 [pool-1-thread-2] INFO  reactor.Flux.Array.2 - | onNext(7)\n23:48:03.001 [pool-1-thread-1] INFO  reactor.Flux.Array.1 - | onNext(4)\n23:48:03.001 [pool-1-thread-2] INFO  reactor.Flux.Array.2 - | onNext(8)\n23:48:03.002 [pool-1-thread-1] INFO  reactor.Flux.Array.1 - | onComplete()\n23:48:03.002 [pool-1-thread-2] INFO  reactor.Flux.Array.2 - | onComplete()\n*/\n</code></pre> <p>\u1ede \u0111\u00e2y ch\u00fang ta d\u00f9ng\u00a0ExecutorService, 2 lu\u1ed3ng code th\u1ef1c hi\u1ec7n song song tr\u00ean 2 thread kh\u00e1c nhau, \u0111i\u1ec1u m\u00e0 \u0111\u00e3 ch\u1ee9ng minh b\u1eb1ng output.</p>"},{"location":"java/#ket-luan","title":"K\u1ebft lu\u1eadn","text":"<p>Sau b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang t\u00f4i \u0111\u00e3 c\u00f3 c\u00e1i nh\u00ecn t\u1ed5ng quan v\u1ec1\u00a0<code>Reactor Core</code>. T\u1eeb c\u00e1c t\u1ea1o m\u1ed9t\u00a0<code>Publisher</code>\u00a0, c\u00e1c \u0111\u0103ng k\u00fd, backpressure c\u0169ng nh\u01b0 x\u1eed l\u00fd kh\u00f4ng \u0111\u1ed3ng b\u1ed9. \u0110\u00e2y c\u0169ng l\u00e0 n\u1ec1n t\u1ea3ng \u0111\u1ec3 cho ch\u00fang t\u00f4i vi\u1ebft c\u00e1i b\u00e0i vi\u1ebft kh\u00e1c li\u00ean quan v\u1ec1\u00a0<code>Reactor Core</code>.</p>"},{"location":"java/#ban-thuc-su-a-biet-khi-nao-dung-interface-khi-nao-dung-abstract","title":"B\u1ea1n th\u1ef1c s\u1ef1 \u0111\u00e3 bi\u1ebft khi n\u00e0o d\u00f9ng Interface khi n\u00e0o d\u00f9ng Abstract?","text":""},{"location":"java/#tong-quan_1","title":"T\u1ed5ng quan","text":"<p>Trong java, ch\u00fang ta c\u00f3 <code>class</code> <code>abstract</code> v\u00e0 m\u1ed9t <code>Interface</code>, ai c\u0169ng bi\u1ebft m\u1ed9t class c\u00f3 th\u1ec3 <code>impements</code> nhi\u1ec1u <code>Interface</code> v\u00e0 ch\u1ec9 k\u1ebf th\u1eeba \u0111\u01b0\u1ee3c m\u1ed9t <code>class</code> <code>abstract</code>. Nh\u01b0ng b\u1ea1n th\u1ef1c s\u1ef1 \u0111\u00e3 bi\u1ebft khi n\u00e0o th\u00ec ta d\u00f9ng <code>Interface</code>, khi n\u00e0o d\u00f9ng <code>Abstract</code>. Ch\u01b0a k\u1ec3 b\u1eaft \u0111\u1ea7u t\u1eeb Java 8 c\u00f3 s\u1ef1 thay \u0111\u1ed5i v\u1ec1 <code>Interface</code> c\u00e0ng l\u00e0m kh\u00f3 ph\u00e2n bi\u1ec7t gi\u1eefa hai lo\u1ea1i n\u00e0y.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang t\u00f4i s\u1ebd \u0111i so s\u00e1nh m\u1ed9t s\u1ed1 t\u00ednh ch\u1ea5t c\u1ee7a 2 lo\u1ea1i n\u00e0y, sau \u0111\u00f3 l\u00e0 \u0111\u01b0a ra v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3i \u0111\u1ec3 c\u00e1c b\u1ea1n h\u00ecnh dung r\u00f5 nh\u1ea5t. Cu\u1ed1i c\u00f9ng l\u00e0 hi\u1ec3u khi n\u00e0o th\u00ec d\u00f9ng ch\u00fang.</p>"},{"location":"java/#su-khac-nhau-giua-interface-va-abstract","title":"S\u1ef1 kh\u00e1c nhau gi\u1eefa Interface v\u00e0 Abstract","text":"<ol> <li>Methods: Class <code>abstract</code> c\u00f3 c\u00e1c ph\u01b0\u01a1ng th\u1ee9c abstract v\u00e0 non-abstract. Trong khi <code>Interface</code> ch\u1ec9 c\u00f3 ph\u01b0\u01a1ng th\u1ee9c abstract, t\u1eeb Java 8, th\u00ec Interface c\u00f3 th\u00eam 2 lo\u1ea1i ph\u01b0\u01a1ng th\u1ee9c l\u00e0 <code>default</code> v\u00e0 <code>static</code>.</li> <li>Variables: Class <code>abstract</code> c\u00f3 th\u1ec3 c\u00f3 c\u00e1c bi\u1ebfn final, non-final, static v\u00e0 non-static. Trong khi <code>Interface</code> ch\u1ec9 c\u00f3 c\u00e1c bi\u1ebfn static v\u00e0 final.</li> <li>Implementation: Class <code>abstract</code> c\u00f3 th\u1ec3 implement c\u00e1c Interface. Trong khi <code>Interface</code> th\u00ec kh\u00f4ng th\u1ec3 implement class abstract.</li> <li>Inheritance: Class <code>abstract</code> c\u00f3 th\u1ec3 k\u1ebf th\u1eeba \u0111\u01b0\u1ee3c m\u1ed9t class kh\u00e1c. Trong khi <code>Interface</code> c\u00f3 th\u1ec3 k\u1ebf th\u1eeba \u0111\u01b0\u1ee3c nhi\u1ec1u Interface kh\u00e1c.</li> <li>Accessibility: c\u00e1c th\u00e0nh vi\u00ean trong <code>Interface</code> ki\u1ebfu m\u1eb7c \u0111\u1ecbnh l\u00e0 <code>public</code>. Trong khi class <code>abstract</code> th\u00ec l\u1ea1i c\u00f3 th\u1ec3 l\u00e0 private, protected,..</li> </ol> <p>Ngu\u1ed3n: https://loda.me - c\u00f2n nhi\u1ec1u c\u00e1i hay ho l\u1eafm!</p>"},{"location":"java/#abstract-la-gi","title":"Abstract l\u00e0 g\u00ec?","text":"<p>Abstract(tr\u1eebu t\u01b0\u1ee3ng) ngh\u0129a l\u00e0 m\u1ed9t c\u00e1i g\u00ec \u0111\u00f3 kh\u00f4ng ho\u00e0n to\u00e0n c\u1ee5 th\u1ec3, n\u00f3 ch\u1ec9 l\u00e0 m\u1ed9t \u00fd t\u01b0\u1edfng ho\u1eb7c \u00fd ch\u00ednh c\u1ee7a m\u1ed9t c\u00e1i g\u00ec \u0111\u00f3 m\u00e0 kh\u00f4ng c\u00f3 b\u1ea3n tri\u1ec3n khai c\u1ee5 th\u1ec3. V\u00ec v\u1eady Class abstract ch\u1ec9 l\u00e0 m\u1ed9t c\u1ea5u tr\u00fac ho\u1eb7c h\u01b0\u1edbng d\u1eabn \u0111\u01b0\u1ee3c t\u1ea1o cho c\u00e1c class c\u1ee5 th\u1ec3 kh\u00e1c.</p> <p>Ch\u00fang ta c\u00f3 th\u1ec3 n\u00f3i r\u1eb1ng m\u1ed9t class abstract l\u00e0 linh h\u1ed3n c\u1ee7a m\u1ed9t class c\u1ee5 th\u1ec3, v\u00e0 r\u00f5 r\u00e0ng m\u1ed9t c\u01a1 th\u1ec3 (class) kh\u00f4ng th\u1ec3 c\u00f3 hai linh h\u1ed3n. \u0110\u00e2y c\u0169ng l\u00e0 l\u00fd do Java kh\u00f4ng h\u1ed7 tr\u1ee3 nhi\u1ec1u k\u1ebf th\u1eeba cho c\u00e1c class abstract.</p> <p>H\u00e3y nh\u00ecn v\u00e0o class abstract sau: Xe.class</p> <pre><code>public abstract class Xe {\n    private String dongCo;\n     abstract void khoiDongDongCo();\n     abstract void dungDongco();\n}\n</code></pre> <p>Ch\u00fang t\u00f4i t\u1ea1o m\u1ed9t class abstract <code>Xe</code> c\u00f3 thu\u1ed9c t\u00ednh l\u00e0 <code>\u0111\u1ed9ng c\u01a1</code>, v\u00e0 c\u00e1c ph\u01b0\u01a1ng th\u1ee9c kh\u1edfi \u0111\u1ed9ng/ d\u1eebng \u0111\u1ed9ng c\u01a1. <code>Xe</code> l\u00e0 m\u1ed9t c\u00e1i g\u00ec \u0111\u00f3 kh\u00f4ng c\u1ee5 th\u1ec3, n\u00f3 c\u00f3 th\u1ec3 l\u00e0 \u00f4 t\u00f4, xe m\u00e1y, ... v\u00e0 r\u00f5 r\u00e0ng kh\u00f4ng c\u00f3 <code>Xe</code> n\u00e0o m\u00e0 kh\u00f4ng t\u1ed3n t\u1ea1i \u0111\u1ed9ng c\u01a1 v\u00e0 c\u01a1 ch\u1ebf kh\u1edfi \u0111\u1ed9ng/d\u1eebng \u0111\u1ed9ng c\u01a1 c\u1ea3.</p> <p>Oto.class</p> <pre><code>public class Oto extends Xe {\n    @Override\n    void khoiDongDongCo() {\n        System.out.println(\"Kh\u1edfi \u0111\u1ed9ng \u0111\u1ed9ng c\u01a1 c\u1ee7a \u00f4t\u00f4\");\n    }\n\n    @Override\n    void dungDongco() {\n        System.out.println(\"D\u1eebng \u0111\u1ed9ng c\u01a1 c\u1ee7a \u00f4t\u00f4\");\n    }\n}\n</code></pre>"},{"location":"java/#interface-la-gi","title":"Interface l\u00e0 g\u00ec?","text":"<p>Interface (Giao di\u1ec7n) l\u00e0 m\u1ed9t h\u00ecnh th\u1ee9c, gi\u1ed1ng nh\u01b0 m\u1ed9t h\u1ee3p \u0111\u1ed3ng, n\u00f3 kh\u00f4ng th\u1ec3 t\u1ef1 l\u00e0m b\u1ea5t c\u1ee9 \u0111i\u1ec1u g\u00ec. Nh\u01b0ng khi c\u00f3 m\u1ed9t class k\u00fd k\u1ebft h\u1ee3p \u0111\u1ed3ng (implement Interface) n\u00e0y, th\u00ec class \u0111\u00f3 ph\u1ea3i tu\u00e2n theo h\u1ee3p \u0111\u1ed3ng n\u00e0y.</p> <p>Trong Interface, ch\u00fang t\u00f4i \u0111\u1ecbnh ngh\u0129a c\u00e1c h\u00e0nh vi c\u1ee7a m\u1ed9t class s\u1ebd th\u1ef1c hi\u1ec7n. M\u1ed9t class c\u00f3 th\u1ec3 c\u00f3 m\u1ed9t s\u1ed1 c\u00e1ch h\u00e0nh vi kh\u00e1c nhau, c\u0169ng gi\u1ed1ng nh\u01b0 n\u00f3 c\u00f3 th\u1ec3 k\u00fd k\u1ebft \u0111\u01b0\u1ee3c v\u1edbi nhi\u1ec1u h\u1ee3p \u0111\u1ed3ng kh\u00e1c nhau. \u0110\u00f3 c\u0169ng l\u00e0 l\u00fd do t\u1ea1i sao Java cho ph\u00e9p implement nhi\u1ec1u Interface.</p> <p>Ti\u1ebfp n\u1ed1i v\u00ed d\u1ee5 tr\u00ean, <code>Xe</code> c\u00f3 th\u1ec3 di chuy\u1ec3n, v\u00ec v\u1eady ch\u00fang t\u00f4i t\u1ea1o m\u1ed9t Interface H\u00e0nh \u0111\u1ed9ng di chuy\u1ec3n v\u00e0 class <code>Oto</code> implement n\u00f3.</p> <p>HanhDongDiChuyen.class</p> <pre><code>public interface HanhDongDiChuyen {\n    void diChuyen();\n}\n</code></pre> <p>\u0110\u00e2y l\u00e0 nh\u1eefng h\u00e0nh vi c\u1ee7a <code>Oto</code>, ch\u1ee9 kh\u00f4ng thu\u1ed9c t\u00ednh s\u1eb5n c\u00f3 c\u1ee7a n\u00f3: \u00d4t\u00f4 l\u00e0 xe h\u01a1i, ngay c\u1ea3 khi n\u00f3 kh\u00f4ng th\u1ec3 di chuy\u1ec3n \u0111\u01b0\u1ee3c!</p> <p>Oto.class</p> <pre><code>public class Oto extends Xe implements HanhDongDiChuyen{\n    @Override\n    void khoiDongDongCo() {\n        System.out.println(\"Kh\u1edfi \u0111\u1ed9ng \u0111\u1ed9ng c\u01a1 c\u1ee7a \u00f4t\u00f4\");\n    }\n\n    @Override\n    void dungDongco() {\n        System.out.println(\"D\u1eebng \u0111\u1ed9ng c\u01a1 c\u1ee7a \u00f4t\u00f4\");\n    }\n\n    @Override\n    public void diChuyen() {\n        System.out.println(\"\u00d4t\u00f4 \u0111ang di chuy\u1ec3n\");\n    }\n}\n</code></pre>"},{"location":"java/#khi-nao-nen-dung","title":"Khi n\u00e0o n\u00ean d\u00f9ng?","text":"<ol> <li>Class abstract \u0111\u1ea1i di\u1ec7n cho m\u1ed1i quan h\u1ec7 \"IS - A\" (\u00d4t\u00f4 l\u00e0 Xe)</li> <li>Interface \u0111\u1ea1i di\u1ec7n cho m\u1ed1i quan h\u1ec7 \"like - A\" (\u00d4 t\u00f4 c\u00f3 th\u1ec3 chuy\u1ec3n \u0111\u1ed9ng).</li> <li>T\u1ea1o m\u1ed9t class abstract khi b\u1ea1n \u0111ang cung c\u1ea5p c\u00e1c h\u01b0\u1edbng d\u1eabn cho m\u1ed9t class c\u1ee5 th\u1ec3.</li> <li>T\u1ea1o Interface khi ch\u00fang ta cung c\u1ea5p c\u00e1c h\u00e0nh vi b\u1ed5 sung cho class c\u1ee5 th\u1ec3 v\u00e0 nh\u1eefng h\u00e0nh v\u00ec n\u00e0y kh\u00f4ng b\u1eaft bu\u1ed9c \u0111\u1ed1i v\u1edbi clas \u0111\u00f3.</li> </ol>"},{"location":"java/#ket-luan_1","title":"K\u1ebft lu\u1eadn","text":"<p>M\u1ee5c \u0111\u00edch c\u1ee7a b\u00e0i vi\u1ebft n\u00e0y l\u00e0 \u0111\u1ec3 gi\u00fap b\u1ea1n hi\u1ec3u v\u00e0 n\u1eafm v\u1eefng class abstract, Interface v\u00e0 k\u1ecbch b\u1ea3n s\u1eed d\u1ee5ng. Th\u00f4ng qua n\u1ed5 l\u1ef1c to\u00e0n b\u1ed9 b\u00e0i vi\u1ebft c\u1ee7a ch\u00fang t\u00f4i, ch\u00fang t\u00f4i tin ch\u1eafc r\u1eb1ng b\u1ea1n \u0111\u00e3 hi\u1ec3u \u0111\u01b0\u1ee3c \u0111i\u1ec1u g\u00ec \u0111\u00f3. Cu\u1ed1i c\u00f9ng, c\u1ea3m \u01a1n b\u1ea1n \u0111\u00e3 \u0111\u1ecdc b\u00e0i vi\u1ebft.</p>"},{"location":"java/#java-concurrency-phan-1-thread","title":"Java Concurrency (Ph\u1ea7n 1): Thread","text":"<p>Source: Java Concurrency (Ph\u1ea7n 1): Thread</p>"},{"location":"java/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>L\u1eadp tr\u00ecnh \u0111\u1ed3ng th\u1eddi (concurrency) trong Java \u0111\u1ec1 c\u1eadp \u0111\u1ebfn kh\u1ea3 n\u0103ng c\u1ee7a m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh Java th\u1ef1c thi nhi\u1ec1u t\u00e1c v\u1ee5 \u0111\u1ed3ng th\u1eddi ho\u1eb7c song song, t\u1eadn d\u1ee5ng t\u1ed1i \u0111a c\u00e1c b\u1ed9 x\u1eed l\u00fd (CPU) \u0111a l\u00f5i (core) hi\u1ec7n \u0111\u1ea1i. Khi c\u00e1c \u1ee9ng d\u1ee5ng ng\u00e0y c\u00e0ng tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p v\u00e0 \u0111\u00f2i h\u1ecfi hi\u1ec7u su\u1ea5t cao h\u01a1n, l\u1eadp tr\u00ecnh \u0111\u1ed3ng th\u1eddi tr\u1edf th\u00e0nh y\u1ebfu t\u1ed1 thi\u1ebft y\u1ebfu \u0111\u1ec3 c\u1ea3i thi\u1ec7n hi\u1ec7u n\u0103ng, kh\u1ea3 n\u0103ng ph\u1ea3n h\u1ed3i v\u00e0 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng. Java cung c\u1ea5p m\u1ed9t b\u1ed9 c\u00f4ng c\u1ee5 v\u00e0 c\u00e1c th\u01b0 vi\u1ec7n phong ph\u00fa gi\u00fap c\u00e1c nh\u00e0 ph\u00e1t tri\u1ec3n t\u1ea1o ra c\u00e1c \u1ee9ng d\u1ee5ng \u0111\u1ed3ng th\u1eddi, qu\u1ea3n l\u00fd nhi\u1ec1u lu\u1ed3ng (threads) v\u00e0 \u0111i\u1ec1u ph\u1ed1i c\u00e1c t\u00e1c v\u1ee5 m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3. Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang s\u1ebd kh\u00e1m ph\u00e1 c\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 l\u1eadp tr\u00ecnh \u0111\u1ed3ng th\u1eddi trong Java.</p> <p></p>"},{"location":"java/#2-inh-nghia-thread","title":"2. \u0110\u1ecbnh ngh\u0129a Thread","text":"<p>M\u1ed9t thread l\u00e0 m\u1ed9t \u0111\u01a1n v\u1ecb th\u1ef1c thi nh\u1ecf h\u01a1n m\u1ed9t process. M\u1ed9t process c\u00f3 th\u1ec3 t\u1ea1o ra nhi\u1ec1u thread trong qu\u00e1 tr\u00ecnh th\u1ef1c thi. T\u1ea5t c\u1ea3 c\u00e1c thread trong c\u00f9ng m\u1ed9t process s\u1ebd chia s\u1ebb, d\u00f9ng chung m\u1ed9t s\u1ed1 v\u00f9ng nh\u1edb v\u1edbi nhau (heap memory, static variables, metaspace, \u2026 ph\u1ea7n n\u00e0y m\u00ecnh s\u1ebd chia s\u1ebb c\u1ee5 th\u1ec3 h\u01a1n \u1edf m\u1ed9t b\u00e0i vi\u1ebft kh\u00e1c). V\u00ec v\u1eady, vi\u1ec7c giao ti\u1ebfp gi\u1eefa c\u00e1c thread kh\u00e1 \u0111\u01a1n gi\u1ea3n v\u00e0 d\u1ec5 d\u00e0ng h\u01a1n so v\u1edbi giao ti\u1ebfp gi\u1eefa c\u00e1c process. Ngo\u00e0i ra, vi\u1ec7c t\u1ea1o m\u1edbi/h\u1ee7y thread \u0111\u01a1n gi\u1ea3n v\u00e0 t\u1ed1n \u00edt c\u00f4ng h\u01a1n so v\u1edbi vi\u1ec7c t\u1ea1o m\u1edbi/h\u1ee7y m\u1ed9t process. V\u00ec c\u00e1c l\u00fd do n\u00e0y, thread c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 lightweight process.</p> <p></p>"},{"location":"java/#3-cach-khoi-tao-thread","title":"3. C\u00e1ch kh\u1edfi t\u1ea1o thread","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t c\u00e2u h\u1ecfi th\u01b0\u1eddng hay g\u1eb7p trong ph\u1ecfng v\u1ea5n. B\u1ea1n c\u00f3 th\u1ec3 tham kh\u1ea3o ho\u1eb7c tr\u1ea3 l\u1eddi nh\u01b0 sau: Ta c\u00f3 th\u1ec3 ph\u00e2n lo\u1ea1i c\u00e1c c\u00e1ch kh\u1edfi t\u1ea1o thread nh\u01b0 sau:</p>"},{"location":"java/#31-tao-truc-tiep-thread","title":"3.1. T\u1ea1o tr\u1ef1c ti\u1ebfp thread","text":"<p>s\u1eed d\u1ee5ng <code>new Thread().start()</code>.</p> <pre><code>new Thread(() -&gt; resource.counter++).start();\n</code></pre>"},{"location":"java/#32-khai-bao-thread-execution-method","title":"3.2. Khai b\u00e1o Thread execution method","text":""},{"location":"java/#321-ke-thua-class-thread","title":"3.2.1. K\u1ebf th\u1eeba class Thread","text":"<p>\u0110\u00e2y l\u00e0 m\u1ed9t c\u00e1ch ph\u1ed5 bi\u1ebfn. Ch\u00fang ta t\u1ea1o ra m\u1ed9t class m\u1edbi k\u1ebf th\u1eeba class Thread v\u00e0 ghi \u0111\u00e8 method run nh\u01b0 sau:</p> <pre><code>public class ExtendsThread extends Thread {\n    @Override\n    public void run() {\n        System.out.println(\"Do something\");\n    }\n\n    public static void main(String[] args) {\n        new ExtendsThread().start();\n    }\n}\n</code></pre>"},{"location":"java/#322-trien-khai-interface-runnable","title":"3.2.2. Tri\u1ec3n khai interface Runnable","text":"<p>\u0110\u00e2y c\u0169ng l\u00e0 m\u1ed9t c\u00e1ch ph\u1ed5 bi\u1ebfn, implement Runnable interface v\u00e0 override method run, nh\u01b0 sau:</p> <pre><code>public class ImplementsRunnable implements Runnable {\n    @Override\n    public void run() {\n        System.out.println(\"Do something\");\n    }\n\n    public static void main(String[] args) {\n        ImplementsRunnable runnable = new ImplementsRunnable();\n        new Thread(runnable).start();\n    }\n}\n</code></pre>"},{"location":"java/#323-trien-khai-interface-callable","title":"3.2.3. Tri\u1ec3n khai interface Callable","text":"<p>T\u01b0\u01a1ng t\u1ef1 nh\u01b0 method tr\u01b0\u1edbc, ngo\u1ea1i tr\u1eeb method n\u00e0y c\u00f3 th\u1ec3 nh\u1eadn gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 sau khi Thread \u0111\u01b0\u1ee3c th\u1ef1c thi, nh\u01b0 sau:</p> <pre><code>public class ImplementsCallable implements Callable&lt;String&gt; {\n    @Override\n    public String call() throws Exception {\n        System.out.println(\"Do something\");\n        return \"test\";\n    }\n\n    public static void main(String[] args) throws Exception {\n        ImplementsCallable callable = new ImplementsCallable();\n        FutureTask&lt;String&gt; futureTask = new FutureTask&lt;&gt;(callable);\n        new Thread(futureTask).start();\n        System.out.println(futureTask.get());\n    }\n}\n</code></pre>"},{"location":"java/#324-su-dung-class-an-danh-hoac-bieu-thuc-lambda","title":"3.2.4. S\u1eed d\u1ee5ng class \u1ea9n danh ho\u1eb7c bi\u1ec3u th\u1ee9c Lambda","text":"<pre><code>public class UseAnonymousClass {\n    public static void main(String[] args) {\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n                System.out.println(\"AnonymousClass\");\n            }\n        }).start();\n\n        new Thread(() -&gt;\n                System.out.println(\"Lambda\")\n        ).start();\n    }\n}\n</code></pre>"},{"location":"java/#33-tao-gian-tiep-thread","title":"3.3. T\u1ea1o gi\u00e1n ti\u1ebfp thread","text":""},{"location":"java/#331-su-dung-thread-pool-cua-executorservice","title":"3.3.1. S\u1eed d\u1ee5ng thread pool c\u1ee7a ExecutorService","text":"<pre><code>public class UseExecutorService {\n    public static void main(String[] args) {\n        ExecutorService poolA = Executors.newFixedThreadPool(2);\n        poolA.execute(() -&gt; {\n            System.out.println(\"do something\");\n        });\n}\n</code></pre>"},{"location":"java/#332-su-dung-thread-pool-hoac-stream-song-song-parallel-stream","title":"3.3.2. S\u1eed d\u1ee5ng thread pool ho\u1eb7c Stream song song (parallel stream)","text":"<pre><code>public class UseForkJoinPool {\n    public static void main(String[] args) {\n        ForkJoinPool forkJoinPool = new ForkJoinPool();\n        forkJoinPool.execute( () -&gt; {\n            System.out.println(\"Do something\");\n        });\n\n        List&lt;String&gt; list = Arrays.asList(\"e1\");\n        list.parallelStream().forEach(System.out::println);\n    }\n}\n</code></pre>"},{"location":"java/#333-su-dung-completablefuture","title":"3.3.3. S\u1eed d\u1ee5ng CompletableFuture","text":"<pre><code>public class UseCompletableFuture {\n    public static void main(String[] args) throws InterruptedException {\n        CompletableFuture&lt;String&gt; cf = CompletableFuture.supplyAsync(() -&gt; {\n            System.out.println(\"5......\");\n            return \"test\";\n        });\n        Thread.sleep(1000);\n    }\n}\n</code></pre>"},{"location":"java/#334-su-dung-class-timer","title":"3.3.4. S\u1eed d\u1ee5ng class Timer","text":"<pre><code>public class UseTimer {\n    public static void main(String[] args) {\n        Timer timer = new Timer();\n\n        timer.schedule(new TimerTask() {\n            @Override\n            public void run() {\n                System.out.println(\"9......\");\n            }\n        }, 0, 1000);\n    }\n}\n</code></pre> <p>Java ch\u1ec9 c\u00f3 m\u1ed9t c\u00e1ch \u0111\u1ec3 t\u1ea1o thread m\u1ed9t c\u00e1ch tr\u1ef1c ti\u1ebfp, \u0111\u00f3 l\u00e0 th\u00f4ng qua vi\u1ec7c t\u1ea1o new Thread().start(). Do \u0111\u00f3, cho d\u00f9 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng th\u1ee9c n\u00e0o th\u00ec cu\u1ed1i c\u00f9ng n\u00f3 c\u0169ng ph\u1ee5 thu\u1ed9c v\u00e0o new Thread().start(). C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng Runnable, Callable, \u2026 ch\u1ec9 l\u00e0 ph\u1ea7n th\u00e2n c\u1ee7a Thread, t\u1ee9c l\u00e0 t\u00e1c v\u1ee5 \u0111\u01b0\u1ee3c cung c\u1ea5p cho Thread \u0111\u1ec3 th\u1ef1c thi.</p>"},{"location":"java/#4-trang-thai-cua-thread","title":"4. Tr\u1ea1ng th\u00e1i c\u1ee7a thread","text":"<p>T\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m, m\u1ed9t thread trong Java ch\u1ec9 c\u00f3 th\u1ec3 \u1edf m\u1ed9t trong s\u00e1u tr\u1ea1ng th\u00e1i trong v\u00f2ng \u0111\u1eddi c\u1ee7a n\u00f3:</p> <ul> <li><code>NEW</code>: Khi \u0111\u1ed1i t\u01b0\u1ee3ng thread \u0111\u01b0\u1ee3c t\u1ea1o, n\u00f3 s\u1ebd chuy\u1ec3n sang tr\u1ea1ng th\u00e1i NEW, ch\u1eb3ng h\u1ea1n nh\u01b0: Thread t = new MyThread();</li> <li><code>RUNNABLE</code>: Tr\u1ea1ng th\u00e1i s\u1eb5n s\u00e0ng \u0111\u1ec3 ch\u1ea1y. Ta c\u00f3 th\u1ec3 hi\u1ec3u, n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c chia th\u00e0nh 2 tr\u01b0\u1eddng h\u1ee3p nh\u1ecf h\u01a1n: \u0111ang ch\u1ea1y ho\u1eb7c \u0111ang ch\u1edd \u0111\u1ec3 ch\u1ea1y. V\u00ed d\u1ee5, khi sau, ta g\u1ecdi method start(), thread \u0111\u00f3 c\u00f3 th\u1ec3 ch\u01b0a ch\u1ea1y \u0111\u01b0\u1ee3c ngay m\u00e0 ph\u1ea3i \u0111\u1ee3i CPU schedule \u0111\u1ec3 ch\u1ea1y.</li> <li><code>BLOCKED</code>: Tr\u1ea1ng th\u00e1i b\u1ecb ch\u1eb7n, thread A \u0111ang c\u1ed1 gi\u00e0nh kh\u00f3a (lock) nh\u01b0ng kho\u00e1 \u0111ang gi\u1eefa b\u1edfi thread B, thread A ph\u1ea3i \u0111\u1ee3i, b\u1ecb blocked cho \u0111\u1ebfn khi kho\u00e1 \u0111\u01b0\u1ee3c gi\u1ea3i ph\u00f3ng.</li> <li><code>TIME_WAITING</code>: Tr\u1ea1ng th\u00e1i ch\u1edd c\u00f3 th\u1eddi gian ch\u1edd, c\u00f3 th\u1ec3 t\u1ef1 \u0111\u1ed9ng quay tr\u1edf l\u1ea1i tr\u1ea1ng th\u00e1i RUNNABLE sau kho\u1ea3ng th\u1eddi gian x\u00e1c \u0111\u1ecbnh.</li> <li><code>WAITING</code>: Tr\u1ea1ng th\u00e1i ch\u1edd, bi\u1ec3u th\u1ecb r\u1eb1ng thread A \u0111ang ch\u1edd c\u00e1c thread kh\u00e1c th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 h\u00e0nh \u0111\u1ed9ng c\u1ee5 th\u1ec3, nh\u01b0 (notification) th\u00f4ng b\u00e1o cho thread A ho\u1eb7c (interruption) ng\u1eaft thread A. Kh\u00e1c v\u1edbi TIME_WAITING, tr\u1ea1ng th\u00e1i WAITING kh\u00f4ng c\u00f3 th\u1eddi gian timeout, ch\u1ec9 \u0111\u01b0\u1ee3c wakeup khi c\u00f3 th\u00f4ng b\u00e1o t\u1eeb thread kh\u00e1c.</li> <li><code>TERMINATED</code>: Tr\u1ea1ng th\u00e1i k\u1ebft th\u00fac, bi\u1ec3u th\u1ecb r\u1eb1ng thread \u0111\u00e3 ho\u00e0n th\u00e0nh c\u00f4ng vi\u1ec7c ho\u1eb7c d\u1eebng lai do g\u1eb7p exception.</li> </ul>"},{"location":"java/#5-cac-method-co-ban-cua-thread","title":"5. C\u00e1c method c\u01a1 b\u1ea3n c\u1ee7a thread","text":""},{"location":"java/#51-start","title":"5.1. start()","text":"<p>Method start() kh\u1edfi t\u1ea1o vi\u1ec7c th\u1ef1c thi m\u1ed9t thread. N\u00f3 g\u1ecdi ph\u01b0\u01a1ng th\u1ee9c run() \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh trong class thread ho\u1eb7c runnable object. Thread s\u1ebd chuy\u1ec3n t\u1eeb tr\u1ea1ng th\u00e1i NEW sang tr\u1ea1ng th\u00e1i RUNNABLE sau khi method n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi.</p> <pre><code>public class Main {\n    public static void main(String[] args) {\n        Thread myThread = new Thread(new MyRunnable());\n        myThread.start();\n    }\n}\n</code></pre>"},{"location":"java/#52-run","title":"5.2. run()","text":"<p>Method run() ch\u1ee9a m\u00e3 s\u1ebd \u0111\u01b0\u1ee3c th\u1ef1c thi trong lu\u1ed3ng.</p> <pre><code>class MyRunnable implements Runnable {\n    public void run() {\n        System.out.println(\"This is a runnable.\");\n    }\n}\n</code></pre>"},{"location":"java/#53-sleep-va-wait","title":"5.3. sleep() v\u00e0 wait()","text":"<p>Method <code>sleep()</code> l\u00e0m cho thread hi\u1ec7n \u0111ang th\u1ef1c thi \u1edf ch\u1ebf \u0111\u1ed9 ng\u1ee7 (TIMED_WAITING) trong 1 kho\u1ea3ng th\u1eddi gian \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh (t\u00ednh b\u1eb1ng milliseconds).</p> <p>Method wait() khi\u1ebfn thread hi\u1ec7n t\u1ea1i \u0111\u1ee3i cho \u0111\u1ebfn khi m\u1ed9t thread kh\u00e1c g\u1ecdi notify() ho\u1eb7c notifyAll() tr\u00ean c\u00f9ng m\u1ed9t object. Thread s\u1ebd chuy\u1ec3n t\u1eeb tr\u1ea1ng th\u00e1i RUNNABLE sang tr\u1ea1ng th\u00e1i WAITING n\u1ebfu d\u00f9ng wait() kh\u00f4ng truy\u1ec1n th\u00eam th\u1eddi gian timeout, c\u00f2n n\u1ebfu truy\u1ec1n th\u00eam th\u1eddi gian timeout - wait(timeout) th\u00ec thread s\u1ebd \u1edf tr\u1ea1ng th\u00e1i <code>TIMED_WAITING</code>.</p> <p>S\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa 2 method:</p> <ul> <li>Method wait() c\u1ea7n \u0111\u01b0\u1ee3c \u0111\u1eb7t trong synchronized code, c\u00f2n sleep() th\u00ec kh\u00f4ng.</li> <li>Method sleep() kh\u00f4ng gi\u1ea3i ph\u00f3ng kh\u00f3a, trong khi method wait() s\u1ebd gi\u1ea3i ph\u00f3ng kh\u00f3a.</li> <li>Method wait() th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho t\u01b0\u01a1ng t\u00e1c/giao ti\u1ebfp gi\u1eefa c\u00e1c thread, c\u00f2n sleep() th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 t\u1ea1m d\u1eebng th\u1ef1c thi.</li> <li>Sau khi method wait() \u0111\u01b0\u1ee3c g\u1ecdi, thread s\u1ebd kh\u00f4ng t\u1ef1 \u0111\u1ed9ng th\u1ee9c d\u1eady; c\u1ea7n m\u1ed9t lu\u1ed3ng kh\u00e1c g\u1ecdi method notify() ho\u1eb7c notifyAll() tr\u00ean c\u00f9ng m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u1ec3 \u0111\u00e1nh th\u1ee9c lu\u1ed3ng \u0111\u00f3. Sau khi method sleep() \u0111\u01b0\u1ee3c th\u1ef1c thi, thread s\u1ebd t\u1ef1 \u0111\u1ed9ng th\u1ee9c d\u1eady (RUNNABLE).</li> <li>sleep() l\u00e0 m\u1ed9t method static c\u1ee7a class Thread, c\u00f2n wait() l\u00e0 m\u1ed9t method c\u1ee7a class Object.</li> </ul>"},{"location":"java/#54-notify-va-notifyall","title":"5.4. notify() v\u00e0 notifyAll()","text":"<p>notify(): \u0111\u1ed1i v\u1edbi t\u1ea5t c\u1ea3 c\u00e1c thread \u0111ang ch\u1edd object monitor b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng b\u1ea5t k\u1ef3 method wait() n\u00e0o, method notify() th\u00f4ng b\u00e1o cho m\u1ed9t trong s\u1ed1 c\u00e1c thread \u0111\u00f3 th\u1ee9c d\u1eady. Vi\u1ec7c l\u1ef1a ch\u1ecdn ch\u00ednh x\u00e1c thread n\u00e0o \u0111\u01b0\u1ee3c \u0111\u00e1nh th\u1ee9c l\u00e0 m\u1eabu nhi\u00ean v\u00e0 ch\u00fang ta kh\u00f4ng th\u1ec3 ki\u1ec3m so\u00e1t \u0111\u01b0\u1ee3c thread \u0111\u01b0\u1ee3c \u0111\u00e1nh th\u1ee9c. notifyAll(): Ph\u01b0\u01a1ng ph\u00e1p n\u00e0y ch\u1ec9 \u0111\u01a1n gi\u1ea3n \u0111\u00e1nh th\u1ee9c t\u1ea5t c\u1ea3 c\u00e1c thread \u0111ang ch\u1edd tr\u00ean object monitor. M\u00ecnh s\u1ebd n\u00f3i chi ti\u1ebft h\u01a1n v\u1ec1 c\u00e1c method n\u00e0y trong b\u00e0i giao ti\u1ebfp gi\u1eefa c\u00e1c threads.</p>"},{"location":"java/#55-yield","title":"5.5. yield()","text":"<p>Method yield() l\u00e0m cho thread hi\u1ec7n \u0111ang th\u1ef1c thi t\u1ea1m d\u1eebng v\u00e0 cho ph\u00e9p c\u00e1c thread kh\u00e1c th\u1ef1c thi. M\u1ecdi ng\u01b0\u1eddi l\u01b0u \u00fd, \u0111\u00e2y ch\u1ec9 l\u00e0 hint cho scheduler t\u1ea1m d\u1eebng thread, scheduler c\u00f3 th\u1ec3 b\u1ecf qua c\u00e1i hint n\u00e0y. Method n\u00e0y c\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ec3 t\u00e1i hi\u1ec7n bug do race condition. Tuy nhi\u00ean, method n\u00e0y hi\u1ebfm khi \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng v\u00e0 m\u00ecnh recommend kh\u00f4ng d\u00f9ng method n\u00e0y trong production code.</p>"},{"location":"java/#56-join","title":"5.6. join()","text":"<p>Method <code>join()</code> cho ph\u00e9p m\u1ed9t thread ch\u1edd \u0111\u1ee3i m\u1ed9t thread kh\u00e1c ho\u00e0n th\u00e0nh. \u0110i\u1ec1u n\u00e0y c\u00f3 th\u1ec3 h\u1eefu \u00edch khi b\u1ea1n c\u1ea7n \u0111\u1ea3m b\u1ea3o ho\u00e0n th\u00e0nh m\u1ed9t s\u1ed1 nhi\u1ec7m v\u1ee5 nh\u1ea5t \u0111\u1ecbnh tr\u01b0\u1edbc khi ti\u1ebfp t\u1ee5c. Khi thread A g\u1ecdi method <code>join()</code> c\u1ee7a thread B, thread A s\u1ebd chuy\u1ec3n sang tr\u1ea1ng th\u00e1i ch\u1edd ( <code>RUNNABLE \u2192 WAITING</code>). N\u00f3 v\u1eabn \u1edf tr\u1ea1ng th\u00e1i ch\u1edd cho \u0111\u1ebfn khi thread B k\u1ebft th\u00fac.</p> <p>Gi\u1ea3 s\u1eed b\u1ea1n c\u1ea7n th\u1ef1c hi\u1ec7n m\u1ed9t s\u1ed1 l\u1ec7nh g\u1ecdi API \u0111\u1ebfn c\u00e1c endpoints kh\u00e1c nhau l\u1ea5y d\u1eef li\u1ec7u \u0111\u1ed3ng th\u1eddi. M\u1ed7i l\u1ec7nh g\u1ecdi API \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n trong m\u1ed9t thread ri\u00eang bi\u1ec7t v\u00e0 b\u1ea1n mu\u1ed1n \u0111\u1ee3i cho \u0111\u1ebfn khi t\u1ea5t c\u1ea3 c\u00e1c thread ho\u00e0n th\u00e0nh y\u00eau c\u1ea7u API c\u1ee7a ch\u00fang tr\u01b0\u1edbc khi t\u1ed5ng h\u1ee3p (aggregate) k\u1ebft qu\u1ea3.</p> <pre><code>String[] apiEndpoints = {\n    \"https://api.example.com/data1\",\n    \"https://api.example.com/data2\",\n    \"https://api.example.com/data3\"\n};\n\nList&lt;Thread&gt; threads = new ArrayList&lt;&gt;();\n\nList&lt;String&gt; results = new ArrayList&lt;&gt;();\n\nfor (String endpoint : apiEndpoints) {\n    Thread thread = new Thread(() -&gt; {\n        String response = makeApiCall(endpoint);\n        synchronized (results) {\n            results.add(response);\n        }\n    });\n    threads.add(thread);\n    thread.start();\n}\n\n// Wait for all threads to complete\ntry {\n    for (Thread thread : threads) {\n        thread.join();\n    }\n} catch (InterruptedException e) {\n    e.printStackTrace();\n}\n\n// Process and aggregate results\nresults.forEach(response -&gt; System.out.println(\"API response: \" + response));\n</code></pre> <p>N\u1ebfu m\u1ecdi ng\u01b0\u1eddi th\u1ea5y b\u00e0i vi\u1ebft h\u1eefu \u00edch th\u00ec nh\u1edd m\u1ecdi ng\u01b0\u1eddi share \u0111\u1ec3 n\u1ed9i dung c\u1ee7a Ronin \u0111\u01b0\u1ee3c nhi\u1ec1u ng\u01b0\u1eddi bi\u1ebft h\u01a1n.</p> <p>C\u00e1m \u01a1n m\u1ecdi ng\u01b0\u1eddi. \ud83d\ude4f</p> <p>\ud83e\uddd1\u200d\ud83d\udcbb 150+ Ronin Engineers: https://roninhub.com/</p> <p>\u270f\ufe0f System Design VN: https://fb.com/groups/systemdesign.vn</p> <p>\ud83d\udcda T\u00e0i li\u1ec7u kh\u00e1c: https://roninhub.com/tai-lieu</p> <p>\ud83c\udfac Youtube: https://youtube.com/@ronin-engineer</p>"},{"location":"java/#java-8optional","title":"\u300cJava 8\u300dOptional","text":"<p><code>Java 8</code>\u00a0ra \u0111\u1eddi c\u00f9ng v\u1edbi m\u1ed9t class m\u1edbi t\u00ean l\u00e0\u00a0<code>Optional</code>. Nhi\u1ec7m v\u1ee5 c\u1ee7a n\u00f3 l\u00e0 ki\u1ec3m so\u00e1t\u00a0<code>null</code>\u00a0h\u1ed9 ch\u00fang ta.</p>"},{"location":"java/#khai-niem-optional","title":"Kh\u00e1i ni\u1ec7m Optional","text":"<p><code>Optional&lt;T&gt;</code>\u00a0l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>Generic</code>, nhi\u1ec7m v\u1ee5 ch\u00ednh c\u1ee7a n\u00f3 l\u00e0\u00a0b\u1ecdc\u00a0hay\u00a0wrapper\u00a0l\u1ea5y m\u1ed9t object kh\u00e1c. N\u00f3 ch\u1ec9 ch\u1ee9a \u0111\u01b0\u1ee3c m\u1ed9t object duy nh\u1ea5t b\u00ean trong.</p> <p>Vi\u1ec7c b\u1ea1n l\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a object b\u00e2y gi\u1edd s\u1ebd th\u00f4ng qua\u00a0<code>Optional</code>\u00a0v\u00e0 n\u1ebfu object \u0111\u00f3\u00a0<code>null</code>\u00a0c\u0169ng kh\u00f4ng sao, v\u00ec th\u1eb1ng\u00a0<code>Optional</code>\u00a0ki\u1ec3m so\u00e1t n\u00f3 ch\u1eb7t ch\u1ebd h\u01a1n l\u00e0\u00a0<code>if else</code>.</p> <p>V\u00ed d\u1ee5 b\u1ea1n c\u00f3 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng b\u1ea5t k\u1ef3:</p> <p>Khi ch\u00fang ta th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c, ch\u00fang ta c\u00f3 th\u1ec3 ki\u1ec3m tra nh\u01b0 th\u1ebf n\u00e0y:</p> <p>Hmmm..... tr\u00f4ng th\u1ebf n\u00e0y th\u00ec kh\u00e1c \u0111\u1ebfch g\u00ec\u00a0<code>if (str != null)</code>\u00a0=))) Nhi\u1ec1u b\u1ea1n s\u1ebd t\u1ef1 ngh\u0129. \u0110\u00fang l\u00e0 nh\u01b0 v\u1eady, n\u1ebfu n\u00f3 ch\u1ec9 l\u00e0m \u0111\u01b0\u1ee3c \u0111\u1ebfn \u0111\u00e2y, th\u00ec th\u00f4i.. ngh\u1ec9 m\u1ecba \u0111ee huhu :((</p> <p>B\u00e2y gi\u1edd m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u t\u1eebng t\u00ednh n\u0103ng l\u1ea7n l\u01b0\u1ee3t c\u1ee7a\u00a0<code>Optional</code>\u00a0\u0111\u1ec3 b\u1ea1n th\u1ea5y n\u00f3 k\u00ec di\u1ec7u nh\u01b0 n\u00e0o.</p>"},{"location":"java/#ifpresent","title":"ifPresent","text":"<p><code>ifPresent</code>\u00a0nh\u1eadn v\u00e0o m\u1ed9t\u00a0<code>Consumer</code>, n\u00f3 c\u0169ng ch\u1ec9 l\u00e0\u00a0<code>Functional Interface</code>\u00a0th\u00f4i c\u00e1c b\u1ea1n. Nh\u1eadn v\u00e0o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng v\u00e0 thao t\u00e1c tr\u00ean n\u00f3, kh\u00f4ng return g\u00ec c\u1ea3.</p> <p>N\u1ebfu b\u1ea1n ch\u01b0a r\u00f5\u00a0<code>Functional Interface</code>\u00a0v\u00e0\u00a0<code>Lambda Expression</code>\u00a0th\u00ec b\u1ea1n c\u00f3 th\u1ec3 xem ngay \u0111\u00e2y, d\u1ec5 hi\u1ec3u l\u00e9m:</p> <p>Functional Interfaces &amp; Lambda Expressions cu\u031b\u0323c de\u0302\u0303 hie\u0302\u0309u</p>"},{"location":"java/#orelse-va-orelseget","title":"orElse() v\u00e0 orElseGet()","text":"<p><code>orElse()</code>\u00a0l\u1ea5y ra object trong\u00a0<code>Optional</code>. N\u1ebfu\u00a0<code>null</code>, tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh do b\u1ea1n quy \u0111\u1ecbnh</p> <p><code>orElseGet()</code>\u00a0T\u01b0\u01a1ng t\u1ef1\u00a0<code>orElse()</code>\u00a0nh\u01b0ng tr\u1ea3 ra b\u1eb1ng\u00a0<code>Supplier interface</code></p>"},{"location":"java/#map","title":"map()","text":"<p><code>map()</code>\u00a0gi\u00fap ch\u00fang ta bi\u1ebfn \u0111\u1ed5i \u0111\u1ed1i t\u01b0\u1ee3ng b\u00ean trong\u00a0<code>Optional</code>.</p> <p>m\u00ecnh s\u1ebd v\u00ed d\u1ee5 b\u1eb1ng code d\u1ec5 hi\u1ec3u h\u01a1n.</p> <p><code>code</code>\u00a0tr\u00f4ng s\u00e1ng s\u1ee7a h\u01a1n nhi\u1ec1u ph\u1ea3i kh\u00f4ng b\u1ea1n :3</p> <p>Trong code \u1edf tr\u00ean s\u1eed d\u1ee5ng\u00a0<code>Method reference</code>, kh\u00e1i ni\u1ec7m n\u00e0y m\u00ecnh \u0111\u00e3 n\u00f3i chi ti\u1ebft t\u1ea1i \u0111\u00e2y:</p> <p>H\u01b0\u1edbng d\u1eabn Method Reference v\u00e0 Lambda Expressions</p> <p>Kh\u00e1i ni\u1ec7m\u00a0<code>map()</code>\u00a0m\u00ecnh c\u00f3 n\u00f3i chi ti\u1ebft t\u1ea1i \u0111\u00e2y:</p> <p>Stream Trong Java 8 c\u1ef1c d\u1ec5 hi\u1ec3u!</p>"},{"location":"java/#filter","title":"filter()","text":"<p><code>filter()</code>\u00a0gi\u00fap ch\u00fang ta ki\u1ec3m tra gi\u00e1 tr\u1ecb trong\u00a0<code>Optional</code>\u00a0n\u1ebfu kh\u00f4ng th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n, tr\u1ea3 v\u1ec1\u00a0<code>empty()</code></p> <p>T\u1edbi \u0111\u00e2y m\u00ecnh \u0111\u00e3 gi\u1edbi thi\u1ec7u xong v\u1edbi c\u00e1c b\u1ea1n c\u00e1c t\u00ednh n\u0103ng kh\u00e1 hay ho c\u1ee7a\u00a0<code>Optional</code>. Ngo\u00e0i vi\u1ec7c gi\u00fap ch\u00fang ta ki\u1ec3m so\u00e1t\u00a0<code>NullException</code>\u00a0th\u00ec c\u00f2n gi\u00fap\u00a0<code>code</code>\u00a0c\u1ee7a ch\u00fang ta s\u00e1ng s\u1ee7a h\u01a1n r\u1ea5t nhi\u1ec1u v\u00e0 thu\u1eadn ti\u1ec7n h\u01a1n trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p y\u00eau c\u1ea7u \u0111i\u1ec1u ki\u1ec7n ph\u1ee9c t\u1ea1p</p> <p>Ch\u00fac c\u00e1c b\u1ea1n h\u1ecdc t\u1eadp th\u00e0nh c\u00f4ng. V\u00e0 ch\u1edb qu\u00ean like v\u00e0 share \u1ee7ng h\u1ed9 nh\u00e1 ahihi :3</p> <pre><code>String str = null;\n// T\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Optional\nOptional&lt;String&gt; optional = Optional.ofNullable(str);\n// B\u00e2y gi\u1edd Optional \u0111\u00e3 wrap l\u1ea5y c\u00e1i str.\n</code></pre> <pre><code>if (optional.isPresent()) {\n    System.out.println(opt.get()); // l\u1ea5y ra c\u00e1i str m\u00ecnh \u0111\u00e3 wrapper\n}\n</code></pre> <pre><code>optional.ifPresent(s -&gt; System.out.println(s));\n</code></pre> <pre><code>String b = optional.orElse(\"Gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh\");\n</code></pre> <pre><code>String b = optional.orElseGet(() -&gt; {\n    StringBuilder sb = new StringBuilder();\n    // Thao t\u00e1c ph\u1ee9c t\u1ea1p\n    return sb.toString();\n});\n</code></pre> <pre><code>class Outfit{\n    public String type;\n\n    public String getType() { return type; }\n}\n\nclass Girl{\n    private Outfit outfit;\n\n    public Outfit getOutfit() { return outfit; }\n}\n\npublic String getOutfitType(Girl girl){\n    return Optional.ofNullable(girl) // T\u1ea1o ra Optional wrap l\u1ea5y girl\n        .map(Girl::getOutfit) // n\u1ebfu girl != null th\u00ec l\u1ea5y outfit ra xem kakaka :3 ng\u01b0\u1ee3c l\u1ea1i tr\u1ea3 ra Optional.empty()\n        .map(Outfit::getType) // n\u1ebfu outfit != null th\u00ec l\u1ea5y ra xem type c\u1ee7a n\u00f3\n        .orElse(\"Kh\u00f4ng m\u1eb7c g\u00ec\"); // N\u1ebfu cu\u1ed1i c\u00f9ng l\u00e0 Optional.empty() th\u00ec tr\u1ea3 ra ngo\u00e0i Kh\u00f4ng m\u1eb7c g\u00ec.\n}\n</code></pre> <pre><code>public String getOutfitType(Girl girl){\n    return Optional.ofNullable(girl) // T\u1ea1o ra Optional wrap l\u1ea5y girl\n        .map(Girl::getOutfit)\n        .map(Outfit::getType)\n        .filter(s -&gt; s.contains(\"bikini\")) // N\u00f3 ch\u1ec9 ch\u1ea5p nh\u1eadn gi\u00e1 tr\u1ecb bikini, c\u00f2n l\u1ea1i d\u00f9 kh\u00e1c null th\u00ec v\u1eabn tr\u1ea3 ra ngo\u00e0i l\u00e0 Optiional.empty()\n        .orElse(\"Kh\u00f4ng m\u1eb7c g\u00ec\"); // N\u1ebfu cu\u1ed1i c\u00f9ng l\u00e0 Optional.empty() th\u00ec tr\u1ea3 ra ngo\u00e0i \"Kh\u00f4ng m\u1eb7c g\u00ec\".\n</code></pre>"},{"location":"java/snippets/","title":"Kho l\u01b0u tr\u1eef Java snippets","text":"<p>L\u1ea5y t\u1eeb iluwatar/30-seconds-of-java v\u00e0 r\u1ea5t nhi\u1ec1u ngu\u1ed3n kh\u00e1c nhau \u0111\u1ec3 t\u1ed5ng h\u1ee3p v\u00e0 s\u1eed d\u1ee5ng.</p> <p>Repo n\u00e0y s\u1ebd kh\u00f4ng ch\u1ee9a \u0111\u1ea7y \u0111\u1ee7 to\u00e0n b\u1ed9 c\u00e1c ph\u1ea7n t\u1ec7p v\u00e0 th\u01b0 m\u1ee5c kh\u00e1c c\u1ee7a d\u1ef1 \u00e1n (Bao g\u1ed3m <code>src/test</code>, <code>pom.xml</code> v\u00e0 t\u01b0\u01a1ng t\u1ef1). B\u1ea1n vui l\u00f2ng gh\u00e9 qua Repository g\u1ed1c \u0111\u1ec3 ngh\u1ecbch nha.</p> <p>M\u1ed9t s\u1ed1 c\u00e1c kho l\u01b0u tr\u1eef kh\u00e1c:</p> <ul> <li>M\u1ed9t s\u1ed1 \u0111o\u1ea1n Java cho c\u00e1c v\u1ea5n \u0111\u1ec1 h\u00e0ng ng\u00e0y</li> <li>Java Design Patterns</li> <li>GitHub Java Corpus - R\u1ea5t nhi\u1ec1u d\u1ef1 \u00e1n Java \u0111\u1ec3 h\u1ecdc. B\u1ea1n c\u00f3 th\u1ec3 t\u1ea3i lu\u00f4n top_projects.tar.gz 5.3MB.</li> </ul> <p>L\u01b0u \u00fd: C\u00e1c ph\u1ea7n n\u1ed9i dung \u0111\u01b0\u1ee3c l\u01b0u trong Repository n\u00e0y ch\u1ec9 mang t\u00ednh ch\u1ea5t l\u01b0u tr\u1eef v\u00e0 chia s\u1ebb. M\u00ecnh ch\u1ec9 l\u00e0 ng\u01b0\u1eddi t\u1ed5ng h\u1ee3p l\u1ea1i th\u00f4i.</p>"},{"location":"java/snippets/#algorithm","title":"Algorithm","text":""},{"location":"java/snippets/#binary-search-in-2d-array","title":"Binary Search In 2d Array","text":"<pre><code>public class BinarySearchIn2dArraySnippet {\n\n  /**\n  * Search an item with binarySearch algorithm.\n  *\n  * @param matrix should be sorted\n  * @param target an item to search\n  * @return if location of item is found, otherwise return {-1,-1}\n  */\n  public static int[] binarySearchIn2darr(int[][] matrix, int target) {\n    int rows = matrix.length - 1;\n    int cols = matrix[0].length - 1;\n\n    if (rows == 1) {\n      return binarySearch(matrix, target, 0, 0, cols);\n    }\n\n    int rstart = 0;\n    int rend = rows;\n    int cmid = cols / 2;\n\n    while (rstart &lt; rend - 1) {\n      int rmid = rstart + (rend - rstart) / 2;\n      if (matrix[rmid][cmid] &gt; target) {\n        rend = rmid;\n      } else if (matrix[rmid][cmid] &lt; target) {\n        rstart = rmid;\n      } else {\n        return new int[]{rmid, cmid};\n      }\n    }\n    if (matrix[rstart][cmid] == target) {\n      return new int[]{rstart, cmid};\n    }\n    if (matrix[rend][cmid] == target) {\n      return new int[]{rend, cmid};\n    }\n    if (target &lt;= matrix[rstart][cmid - 1]) {\n      return binarySearch(matrix, target, rstart, 0, cmid - 1);\n    }\n    if (target &gt;= matrix[rstart][cmid + 1]) {\n      return binarySearch(matrix, target, rstart, cmid + 1, cols);\n    }\n    if (target &lt;= matrix[rend][cmid - 1]) {\n      return binarySearch(matrix, target, rend, 0, cmid - 1);\n    }\n    if (target &lt;= matrix[rend][cmid + 1]) {\n      return binarySearch(matrix, target, rend, cmid + 1, cols);\n    }\n    return new int[]{-1, -1};\n  }\n\n  static int[] binarySearch(int[][] matrix, int target, int row, int cstart, int cend) {\n    while (cstart &lt;= cend) {\n      int cmid = cstart + (cend - cstart) / 2;\n      if (matrix[row][cmid] &gt; target) {\n        cend = cmid - 1;\n      } else if (matrix[row][cmid] &lt; target) {\n        cstart = cend + 1;\n      } else {\n        return new int[]{row, cmid};\n      }\n    }\n    return new int[]{-1, -1};\n  }\n}\n</code></pre>"},{"location":"java/snippets/#binary-search","title":"Binary Search","text":"<pre><code>public class BinarySearchSnippet {\n\n  /**\n   * Search an item with binarySearch algorithm.\n   *\n   * @param arr sorted array to search\n   * @param item an item to search\n   * @return if item is found, return the index position of the array item otherwise return -1\n   */\n\n  public static int binarySearch(int[] arr, int left, int right, int item) {\n    if (right &gt;= left) {\n      int mid = left + (right - left) / 2;\n      if (arr[mid] == item) {\n        return mid;\n      }\n\n      if (arr[mid] &gt; item) {\n        return binarySearch(arr, left, mid - 1, item);\n      }\n\n      return binarySearch(arr, mid + 1, right, item);\n    }\n    return -1;\n  }   \n}\n</code></pre>"},{"location":"java/snippets/#bubble-sort","title":"Bubble Sort","text":"<pre><code>public class BubbleSortSnippet {\n\n  /**\n   * Sort an array with bubbleSort algorithm.\n   *\n   * @param arr array to sort\n   */\n  public static void bubbleSort(int[] arr) {\n    var lastIndex = arr.length - 1;\n\n    for (var j = 0; j &lt; lastIndex; j++) {\n      for (var i = 0; i &lt; lastIndex - j; i++) {\n        if (arr[i] &gt; arr[i + 1]) {\n          var tmp = arr[i];\n          arr[i] = arr[i + 1];\n          arr[i + 1] = tmp;\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#counting-sort","title":"Counting Sort","text":"<pre><code>public class CountingSortSnippet {\n\n  /**\n   * Sort an array having zero or positive numbers with countingSort algorithm.\n   *\n   * @param arr array to sort\n   */\n  public static void countingSort(int[] arr) {\n    var max = Arrays.stream(arr).max().getAsInt();\n\n    var count = new int[max + 1];\n\n    for (var num : arr) {\n      count[num]++;\n    }\n\n    for (var i = 1; i &lt;= max; i++) {\n      count[i] += count[i - 1];\n    }\n\n    var sorted = new int[arr.length];\n    for (var i = arr.length - 1; i &gt;= 0; i--) {\n      var cur = arr[i];\n      sorted[count[cur] - 1] = cur;\n      count[cur]--;\n    }\n\n    var index = 0;\n    for (var num : sorted) {\n      arr[index++] = num;\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#cycle-sort","title":"Cycle Sort","text":"<pre><code>public class CycleSortSnippet {\n\n  /**\n   * Sort an array with cycleSort algorithm.\n   *\n   * @param arr array to sort\n   */\n  public static int[] cycleSort(int[] arr) {\n    int n = arr.length;\n    int i = 0;\n    while (i &lt; n) {\n      int correctpos = arr[i] - 1;\n      if (arr[i] != arr[correctpos]) {\n        int temp = arr[i];\n        arr[i] = arr[correctpos];\n        arr[correctpos] = temp;\n      } else {\n        i++;\n      }\n    }\n    return arr;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#insertion-sort","title":"Insertion Sort","text":"<pre><code>public class InsertionSortSnippet {\n\n  /**\n   * Sort an array with insertionSort algorithm.\n   *\n   * @param arr array to sort\n   */\n  public static void insertionSort(int[] arr) {\n    for (var i = 1; i &lt; arr.length; i++) {\n      var tmp = arr[i];\n      var j = i - 1;\n\n      while (j &gt;= 0 &amp;&amp; arr[j] &gt; tmp) {\n        arr[j + 1] = arr[j];\n        j--;\n      }\n      arr[j + 1] = tmp;\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#linear-search-in-2d-array","title":"Linear Search In 2d Array","text":"<pre><code>public class LinearSearchIn2dArraySnippet {\n\n  /**\n   * Search an item with linearSearch algorithm.\n   *\n   * @param arr    array to search\n   * @param target an item to search\n   * @return if location of target is found,otherwise return {-1,-1}\n   */\n\n  public static int[] linearSearch2dArray(int[][] arr, int target) {\n\n    for (int i = 0; i &lt; arr.length; i++) {\n      for (int j = 0; j &lt; arr[i].length; j++) {\n        if (arr[i][j] == target) {\n          return new int[]{i, j};\n        }\n      }\n    }\n    return new int[]{-1, -1};\n  }\n}\n</code></pre>"},{"location":"java/snippets/#linear-search","title":"Linear Search","text":"<pre><code>public class LinearSearchSnippet {\n\n  /**\n   * Search an item with linearSearch algorithm.\n   *\n   * @param arr array to search\n   * @param item an item to search\n   * @return if item is found, return the index position of the array item otherwise return -1\n   */\n  public static int linearSearch(int[] arr, int item) {\n    for (int i = 0; i &lt; arr.length; i++) {\n      if (item == arr[i]) {\n        return i;\n      }\n    }\n    return -1;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#luhn-mod-n","title":"Luhn Mod N","text":"<pre><code>public class LuhnModnSnippet {\n\n  private static final String CODE_POINTS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  /**\n   * Generates a check character using the Luhn mod N algorithm.\n   *\n   * @param character the input string consisting of valid alphanumeric characters\n   * @return the generated check character\n   * @throws IllegalArgumentException if the input contains invalid characters\n   */\n  public static int codePointFromCharacter(char character) {\n    if (CODE_POINTS.indexOf(character) == -1) {\n      throw new IllegalArgumentException(\"Invalid character: \" + character);\n    }\n    return CODE_POINTS.indexOf(character);\n  }\n\n  /**\n   * Converts a code point to its corresponding character.\n   *\n   * @param codePoint the code point to be converted\n   * @return the character representation of the code point\n   * @throws IllegalArgumentException if the code point is out of range.\n   */\n  public static char characterFromCodePoint(int codePoint) {\n    if (codePoint &lt; 0 || codePoint &gt;= CODE_POINTS.length()) {\n      throw new IllegalArgumentException(\"Invalid code point: \" + codePoint);\n    }\n    return CODE_POINTS.charAt(codePoint);\n  }\n\n  public static int numberOfValidInputCharacters() {\n    return CODE_POINTS.length();\n  }\n\n  /**\n   * Helper method to calculate the sum for both check character generation and validation.\n   *\n   * @param input the input string\n   * @param factorStart the initial factor to start with (1 or 2)\n   * @return the calculated sum, reminder, and the numberOfValidInputCharacters\n   */\n  private static int[] calculateSum(String input, int factorStart) {\n    if (input == null || input.isEmpty()) {\n      throw new IllegalArgumentException(\"Input cannot be empty\");\n    }\n\n    int factor = factorStart;\n    int sum = 0;\n    int n = numberOfValidInputCharacters();\n\n    for (int i = input.length() - 1; i &gt;= 0; i--) {\n      int codePoint = codePointFromCharacter(input.charAt(i));\n      int addend = factor * codePoint;\n      factor = (factor == 2) ? 1 : 2;\n      addend = (addend / n) + (addend % n);\n      sum += addend;\n    }\n    return new int[]{sum, sum % n, n};\n  }\n\n  /**\n   * Generates a check character for the given input string using the Luhn mod N algorithm.\n   *\n   * @param input the input string (non-empty)\n   * @return the generated check character\n   * @throws IllegalArgumentException if the input is null or empty\n   */\n  public static char generateCheckCharacter(String input) {\n    int[] result = calculateSum(input, 2);\n    return characterFromCodePoint((result[2] - result[1]) % result[2]);\n  }\n\n  /**\n   * Validates a check character by applying the Luhn mod N algorithm.\n   *\n   * @param input the input string (including the check character)\n   * @return true if the input passes validation, false otherwise\n   * @throws IllegalArgumentException if the input is null or empty\n   */\n  public static boolean validateCheckCharacter(String input) {\n    int[] result = calculateSum(input, 1);\n    return (result[1] == 0);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#merge-sort","title":"Merge Sort","text":"<pre><code>public class MergeSortSnippet {\n  /**\n   * Sort an array with qmergesort algorithm.\n   *\n   * @param arr   array to sort\n   * @low low index where to begin sort (e.g. 0)\n   * @high high index where to end sort (e.g. array length - 1)\n   */\n\n  public static void mergeSort(int[] arr, int low, int high) {\n    if (low &gt;= high) {\n      return;\n    }\n    var mid = (low + high) / 2;\n    mergeSort(arr, low, mid);\n    mergeSort(arr, mid + 1, high);\n    merge(arr, low, high, mid);\n  }\n\n  private static void merge(int[] arr, int low, int high, int mid) {\n    int[] temp = new int[(high - low + 1)];\n    var i = low;\n    var j = mid + 1;\n    var k = 0;\n\n    while (i &lt;= mid &amp;&amp; j &lt;= high) {\n      if (arr[i] &lt; arr[j]) {\n        temp[k++] = arr[i];\n        i++;\n      } else {\n        temp[k++] = arr[j];\n        j++;\n      }\n    }\n\n    while (i &lt;= mid) {\n      temp[k++] = arr[i];\n      i++;\n    }\n\n    while (j &lt;= high) {\n      temp[k++] = arr[j];\n      j++;\n    }\n\n    for (int m = 0, n = low; m &lt; temp.length; m++, n++) {\n      arr[n] = temp[m];\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#quick-sort","title":"Quick Sort","text":"<pre><code>public class QuickSortSnippet {\n\n  /**\n   * Sort an array with quicksort algorithm.\n   *\n   * @param arr   array to sort\n   * @param left  left index where to begin sort (e.g. 0)\n   * @param right right index where to end sort (e.g. array length - 1)\n   */\n  public static void quickSort(int[] arr, int left, int right) {\n    var pivotIndex = left + (right - left) / 2;\n    var pivotValue = arr[pivotIndex];\n    var i = left;\n    var j = right;\n    while (i &lt;= j) {\n      while (arr[i] &lt; pivotValue) {\n        i++;\n      }\n      while (arr[j] &gt; pivotValue) {\n        j--;\n      }\n      if (i &lt;= j) {\n        var tmp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = tmp;\n        i++;\n        j--;\n      }\n      if (left &lt; i) {\n        quickSort(arr, left, j);\n      }\n      if (right &gt; i) {\n        quickSort(arr, i, right);\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#selection-sort","title":"Selection Sort","text":"<pre><code>public class SelectionSortSnippet {\n\n  /**\n   * Sort an array with selectionSort algorithm.\n   *\n   * @param arr array to sort\n   */\n  public static void selectionSort(int[] arr) {\n    var len = arr.length;\n\n    for (var i = 0; i &lt; len - 1; i++) {\n      var minIndex = i;\n\n      for (var j = i + 1; j &lt; len; j++) {\n        if (arr[j] &lt; arr[minIndex]) {\n          minIndex = j;\n        }\n      }\n\n      var tmp = arr[minIndex];\n      arr[minIndex] = arr[i];\n      arr[i] = tmp;\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#sieve-of-eratosthenes","title":"Sieve of Eratosthenes","text":"<pre><code>public class SieveOfEratosthenesSnippet {\n  /**\n   * Search an item with binarySearch algorithm.\n   *\n   * @param n range of number.\n   * @return isPrime boolean array where prime number 0 to n are mark true.\n   */\n  public static boolean[] sieveOfEratosthenes(int n) {\n    boolean[] isPrime = new boolean[n + 1];\n    for (int i = 0; i &lt; isPrime.length; i++) {\n      isPrime[i] = true;\n    }\n\n    for (int i = 2; i * i &lt;= n; i++) {\n      if (isPrime[i] == true) {\n        for (int j = i * i; j &lt;= n; j += i) {\n          isPrime[j] = false;\n        }\n      }\n    }\n\n    return isPrime;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#verhoeff","title":"Verhoeff","text":"<pre><code>public class VerhoeffSnippet {\n\n    private static final int[][] d = {\n            {0, 1, 2, 3, 4, 5, 6, 7, 8, 9},\n            {1, 0, 3, 2, 5, 4, 7, 6, 9, 8},\n            {2, 3, 0, 1, 6, 7, 4, 5, 8, 9},\n            {3, 2, 1, 0, 7, 6, 5, 4, 9, 8},\n            {4, 5, 6, 7, 0, 1, 2, 3, 8, 9},\n            {5, 4, 7, 6, 1, 0, 3, 2, 9, 8},\n            {6, 7, 4, 5, 2, 3, 0, 1, 8, 9},\n            {7, 6, 5, 4, 3, 2, 1, 0, 9, 8},\n            {8, 9, 8, 9, 8, 9, 8, 9, 0, 1},\n            {9, 8, 9, 8, 9, 8, 9, 8, 1, 0}\n    };\n\n    private static final int[][] p = {\n            {0, 1, 2, 3, 4, 5, 6, 7, 8, 9},\n            {1, 5, 7, 6, 2, 8, 3, 0, 9, 4},\n            {5, 8, 0, 3, 7, 9, 6, 1, 4, 2},\n            {8, 9, 1, 6, 0, 4, 3, 5, 2, 7},\n            {9, 4, 5, 3, 1, 2, 6, 8, 7, 0},\n            {4, 2, 8, 6, 5, 7, 3, 9, 0, 1},\n            {2, 7, 9, 3, 8, 0, 6, 4, 1, 5},\n            {7, 0, 4, 6, 9, 1, 3, 2, 5, 8}\n    };\n\n    private static final int[] inv = {0, 4, 3, 2, 1, 5, 6, 7, 8, 9};\n\n    /**\n     * Validates a number using the Verhoeff checksum algorithm.\n     *\n     * @param num the numeric string to validate\n     * @return true if the number is valid according to Verhoeff algorithm, false otherwise\n     */\n    public static boolean validateVerhoeff(String num) {\n        int c = 0;\n        int length = num.length();\n\n        // Adjust index for validation of the full number (including check digit)\n        for (int i = 0; i &lt; length; i++) {\n            int digit = Character.getNumericValue(num.charAt(length - i - 1));\n            c = d[c][p[(i + 1) % 8][digit]]; // Correct permutation index\n        }\n\n        return c == 0; // Final checksum must be zero\n    }\n\n    /**\n     * Generates a Verhoeff check digit for a given numeric string.\n     *\n     * @param num the numeric string for which to generate the check digit\n     * @return the generated Verhoeff check digit as a string\n     */\n    public static String generateVerhoeff(String num) {\n        int c = 0;\n        int length = num.length();\n\n        for (int i = 0; i &lt; length; i++) {\n            int digit = Character.getNumericValue(num.charAt(length - i - 1));\n            c = d[c][p[(i % 8)][digit]];\n        }\n\n        return Integer.toString(inv[c]);\n    }\n\n}\n</code></pre>"},{"location":"java/snippets/#array","title":"Array","text":""},{"location":"java/snippets/#all-equal","title":"All Equal","text":"<pre><code>public class AllEqualSnippet {\n\n  /**\n   * Returns true if all elements in array are equal.\n   *\n   * @param arr the array to check (not null)\n   * @param &lt;T&gt; the element type\n   * @return true if all elements in the array are equal\n   */\n  public static &lt;T&gt; boolean allEqual(T[] arr) {\n    return Arrays.stream(arr).distinct().count() == 1;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#array-concat","title":"Array Concat","text":"<pre><code>public class ArrayConcatSnippet {\n\n  /**\n   * Generic 2 array concatenation Credits: Joachim Sauer https://stackoverflow.com/questions/80476/how-can-i-concatenate-two-arrays-in-java\n   *\n   * @param first  is the first array (not null)\n   * @param second is the second array (not null)\n   * @param &lt;T&gt;    the element type\n   * @return concatenated array\n   */\n  public static &lt;T&gt; T[] arrayConcat(T[] first, T[] second) {\n    var result = Arrays.copyOf(first, first.length + second.length);\n    System.arraycopy(second, 0, result, first.length, second.length);\n    return result;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#array-mean","title":"Array Mean","text":"<pre><code>public class ArrayMeanSnippet {\n\n  /**\n   * Returns the mean of the integers in the array.\n   *\n   * @param arr the array of integers (not null)\n   * @return a double representing the mean of the array\n   */\n  public static double arrayMean(int[] arr) {\n    return (double) Arrays.stream(arr).sum() / arr.length;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#array-median","title":"Array Median","text":"<pre><code>public class ArrayMedianSnippet {\n\n  /**\n   * Returns the median of the array.\n   *\n   * @param arr the array of integers (not null)\n   * @return a double representing the median of the array\n   */\n  public static double arrayMedian(int[] arr) {\n    Arrays.sort(arr);\n    var mid = arr.length / 2;\n    return arr.length % 2 != 0 ? (double) arr[mid] : (double) (arr[mid] + arr[mid - 1]) / 2;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#array-mode-in-place","title":"Array Mode In Place","text":"<pre><code>public class ArrayModeInPlaceSnippet {\n\n  /**\n  * Returns the mode of the array.\n  *\n  * @param arr array to find mode in it\n  * @return mode of array\n  */\n  public static int modeArrayInPlace(int[] arr) {\n    if (arr.length == 0) {\n      return 0;\n    }\n\n    Arrays.sort(arr);\n\n    int mode = arr[0];\n    int maxcount = 1;\n    int count = 1;\n\n    for (int i = 1; i &lt; arr.length; i++) {\n      if (arr[i] == arr[i - 1]) {\n        count++;\n      } else {\n        if (count &gt; maxcount) {\n          maxcount = count;\n          mode = arr[i - 1];\n        }\n        count = 1;\n      }\n    }\n    if (count &gt; maxcount) {\n      mode = arr[arr.length - 1];\n    }\n    return mode;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#array-mode","title":"Array Mode","text":"<pre><code>public class ArrayModeSnippet {\n\n    /**\n     * Private constructor to prevent instantiation.\n     */\n    private ArrayModeSnippet() {\n        throw new IllegalStateException(\"Utility class\");\n    }\n\n    /**\n     * Returns the mode(s) of the array.\n     * If multiple modes exist, it returns them in a list.\n     */\n    public static List&lt;Integer&gt; modeArray(int[] arr) {\n        int maxCount = 0;\n        HashMap&lt;Integer, Integer&gt; frequencyMap = new HashMap&lt;&gt;();\n        for (int num : arr) {\n            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);\n            maxCount = Math.max(maxCount, frequencyMap.get(num));\n        }\n        List&lt;Integer&gt; modes = new ArrayList&lt;&gt;();\n        for (Map.Entry&lt;Integer, Integer&gt; entry : frequencyMap.entrySet()) {\n            if (entry.getValue() == maxCount) {\n                modes.add(entry.getKey());\n            }\n        }\n        return modes;\n    }\n}\n</code></pre>"},{"location":"java/snippets/#array-sum","title":"Array Sum","text":"<pre><code>public class ArraySumSnippet {\n\n  /**\n   * Returns sum of the integers in the array.\n   *\n   * @param arr the array of integers (not null)\n   * @return the sum of the elements from the array\n   */\n  public static int arraySum(int[] arr) {\n    return Arrays.stream(arr).sum();\n  }\n}\n</code></pre>"},{"location":"java/snippets/#find-max","title":"Find Max","text":"<pre><code>public class FindMaxSnippet {\n\n  /**\n   * Returns the maximum integer from the array using reduction.\n   *\n   * @param arr the array of integers (not null)\n   * @return the maximum element from the array\n   */\n  public static int findMax(int[] arr) {\n    return Arrays.stream(arr).reduce(Integer.MIN_VALUE, Integer::max);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#find-min","title":"Find Min","text":"<pre><code>public class FindMinSnippet {\n\n  /**\n    * Returns the minimum integer from the array using reduction.\n    *\n    * @param arr the array of integers (not null)\n    * @return the minimum element from the array\n    */\n  public static int findMin(int[] arr) {\n    return Arrays.stream(arr).reduce(Integer.MAX_VALUE, Integer::min);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#multi-array-concatenation","title":"Multi Array Concatenation","text":"<pre><code>public class MultiArrayConcatenationSnippet {\n\n  /**\n   * Generic N array concatenation Credits: Joachim Sauer https://stackoverflow.com/questions/80476/how-can-i-concatenate-two-arrays-in-java\n   *\n   * @param first is the first array (not null)\n   * @param rest  the rest of the arrays (optional)\n   * @param &lt;T&gt;   the element type\n   * @return concatenated array\n   */\n  public static &lt;T&gt; T[] multiArrayConcat(T[] first, T[]... rest) {\n    var totalLength = first.length;\n    for (var array : rest) {\n      totalLength += array.length;\n    }\n    var result = Arrays.copyOf(first, totalLength);\n    var offset = first.length;\n    for (var array : rest) {\n      System.arraycopy(array, 0, result, offset, array.length);\n      offset += array.length;\n    }\n    return result;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#reverse-array","title":"Reverse Array","text":"<pre><code>public class ReverseArraySnippet {\n\n  /**\n   * The function then reverses the elements of the array between the starting and ending\n   * indices using a while loop and a temporary variable `temp`. Finally, the function returns\n   * the reversed array.\n   *\n   * @param array a array\n   * @param start start index array\n   * @param end end index array\n   * @return reverses elements in the array\n   * @throws IllegalArgumentException if the [start] index is greater\n   *         than the [end] index or if the array is null\n   **/\n  public static &lt;T&gt; T[] reverseArray(T[] array, int start, int end) {\n    if (start &gt; end || array == null) {\n      throw new\n              IllegalArgumentException(\"Invalid argument!\");\n    }\n    int minimumSizeArrayForReversal = 2;\n    if (start == end || array.length &lt; minimumSizeArrayForReversal) {\n      return array;\n    }\n    while (start &lt; end) {\n      T temp = array[start];\n      array[start] = array[end];\n      array[end] = temp;\n      start++;\n      end--;\n    }\n    return array;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#class","title":"Class","text":""},{"location":"java/snippets/#creating-object","title":"Creating Object","text":"<pre><code>public class CreatingObjectSnippet {\n\n  /**\n   * Create object using reflection.\n   *\n   * @param cls fully qualified name of class includes the package name as String\n   * @return object\n   * @throws NoSuchMethodException if a method that does not exist at runtime.\n   * @throws IllegalAccessException &lt;p&gt;if an currently executing method does not have access to\n   *     the definition of the specified class, field, method or constructor&lt;/p&gt;\n   * @throws InvocationTargetException &lt;p&gt;InvocationTargetException is a checked exception\n   *     that wraps an exception thrown by an invoked method or constructor.&lt;/p&gt;\n   * @throws InstantiationException &lt;p&gt;when an method tries to create an instance of a class\n   *     using the newInstance method in class Class.&lt;/p&gt;\n   * @throws ClassNotFoundException &lt;p&gt;when an application tries to load in a class\n   *     through its string name.&lt;/p&gt;\n   */\n  public static Object createObject(String cls)\n          throws NoSuchMethodException,\n          IllegalAccessException,\n          InvocationTargetException,\n          InstantiationException,\n          ClassNotFoundException {\n    var objectClass = Class.forName(cls);\n    var objectConstructor = objectClass.getConstructor();\n    return objectConstructor.newInstance();\n  }\n}\n</code></pre>"},{"location":"java/snippets/#get-all-field-names","title":"Get All Field Names","text":"<pre><code>public class GetAllFieldNamesSnippet {\n\n  /**\n   * Print all declared field names of the class or the interface the class extends.\n   *\n   * @param clazz Tested class\n   * @return list of names of all fields\n   */\n  public static List&lt;String&gt; getAllFieldNames(final Class&lt;?&gt; clazz) {\n    var fields = new ArrayList&lt;String&gt;();\n    var currentClazz = clazz;\n    while (currentClazz != null) {\n      fields.addAll(\n          Arrays.stream(currentClazz.getDeclaredFields())\n              .filter(field -&gt; !field.isSynthetic())\n              .map(Field::getName)\n              .collect(Collectors.toList()));\n      currentClazz = currentClazz.getSuperclass();\n    }\n    return fields;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#get-all-methods","title":"Get All Methods","text":"<pre><code>public class GetAllMethodsSnippet {\n\n  /**\n   * Print all declared methods of the class.\n   *\n   * @param cls Tested class\n   * @return list of methods name\n   */\n  public static List&lt;String&gt; getAllMethods(final Class&lt;?&gt; cls) {\n    return Arrays.stream(cls.getDeclaredMethods())\n        .map(Method::getName)\n        .collect(Collectors.toList());\n  }\n}\n</code></pre>"},{"location":"java/snippets/#get-all-public-field-names","title":"Get All Public Field Names","text":"<pre><code>public class GetAllPublicFieldNamesSnippet {\n\n  /**\n   * Print all declared public field names of the class or the interface the class extends.\n   *\n   * @param clazz Tested class\n   * @return list of name of public fields\n   */\n  public static List&lt;String&gt; getAllPublicFieldNames(final Class&lt;?&gt; clazz) {\n    return Arrays.stream(clazz.getFields())\n        .map(Field::getName)\n        .collect(Collectors.toList());\n  }\n}\n</code></pre>"},{"location":"java/snippets/#date","title":"Date","text":""},{"location":"java/snippets/#add-days-to-date","title":"Add Days To Date","text":"<pre><code>public class AddDaysToDateSnippet {\n\n  /**\n   * Add days to given date.\n   *\n   * @param date given date\n   * @param noOfDays number of days to add\n   * @return modified date\n   */\n  public static Date addDaysToDate(Date date, int noOfDays) {\n    if (date != null) {\n      Calendar cal = Calendar.getInstance();\n      cal.setTime(date);\n      cal.add(Calendar.DAY_OF_MONTH, noOfDays);\n      return cal.getTime();\n    }\n    return null;\n  }\n\n  /**\n   * Add days to local date.\n   *\n   * @param date given local date\n   * @param noOfDays number of days to add\n   * @return modified date\n   */\n  public static LocalDate addDaysToLocalDate(LocalDate date, long noOfDays) {\n    return date != null ? date.plusDays(noOfDays) : null;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#date-difference","title":"Date Difference","text":"<pre><code>public class DateDifferenceSnippet {\n\n  /**\n  * This function calculates the number of years between two LocalDate objects.\n  * If the result is negative, it returns the absolute value of the difference.\n  *\n  * @param firstTime  The first LocalDate object representing the starting date\n  * @param secondTime The second LocalDate object representing the ending date\n  * @return The number of years between the two LocalDate objects as a long data type\n  */\n  public static long getYearsDifference(LocalDate firstTime, LocalDate secondTime) {\n    var yearsDifference = ChronoUnit.YEARS.between(firstTime, secondTime);\n    return Math.abs(yearsDifference);\n  }\n\n  /**\n   * This function calculates the number of months between two LocalDate objects.\n   * If the result is negative, it returns the absolute value of the difference.\n   *\n   * @param firstTime  The first LocalDate object representing the starting date\n   * @param secondTime The second LocalDate object representing the ending date\n   * @return The number of months between the two LocalDate objects as a long data type\n   */\n  public static long getMonthsDifference(LocalDate firstTime, LocalDate secondTime) {\n    var monthsDifference = ChronoUnit.MONTHS.between(firstTime, secondTime);\n    return Math.abs(monthsDifference);\n  }\n\n  /**\n   * This function calculates the number of days between two LocalDate objects.\n   * If the result is negative, it returns the absolute value of the difference.\n   *\n   * @param firstTime  The first LocalDate object representing the starting date\n   * @param secondTime The second LocalDate object representing the ending date\n   * @return The number of days between the two LocalDate objects as a long data type\n   */\n  public static long getDaysDifference(LocalDate firstTime, LocalDate secondTime) {\n    var daysDifference = ChronoUnit.DAYS.between(firstTime, secondTime);\n    return Math.abs(daysDifference);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#encoding","title":"Encoding","text":""},{"location":"java/snippets/#base64decode","title":"Base64Decode","text":"<pre><code>public class Base64DecodeSnippet {\n\n  /**\n   * Decodes a Base64 encoded string to the actual representation.\n   *\n   * @param input base64 encoded string\n   * @return decoded string\n   */\n  public static String decodeBase64(String input) {\n    return new String(Base64.getDecoder().decode(input.getBytes()));\n  }\n}\n</code></pre>"},{"location":"java/snippets/#base64encode","title":"Base64Encode","text":"<pre><code>public class Base64EncodeSnippet {\n  /**\n   * Encodes the input string to a Base64 encoded string.\n   *\n   * @param input string to be encoded\n   * @return base64 encoded string\n   */\n  public static String encodeBase64(String input) {\n    return Base64.getEncoder().encodeToString(input.getBytes());\n  }\n}\n</code></pre>"},{"location":"java/snippets/#file","title":"File","text":""},{"location":"java/snippets/#list-all-files","title":"List All Files","text":"<pre><code>public class ListAllFilesSnippet {\n\n  /**\n   * Recursively list all the files in directory.\n   *\n   * @param path the path to start the search from\n   * @return list of all files\n   */\n  public static List&lt;File&gt; listAllFiles(String path) {\n    var all = new ArrayList&lt;File&gt;();\n    var list = new File(path).listFiles();\n    if (list != null) {  // In case of access error, list is null\n      for (var f : list) {\n        if (f.isDirectory()) {\n          all.addAll(listAllFiles(f.getAbsolutePath()));\n        } else {\n          all.add(f.getAbsoluteFile());\n        }\n      }\n    }\n    return all;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#list-directories","title":"List Directories","text":"<pre><code>public class ListDirectoriesSnippet {\n\n  /**\n   * List directories.\n   *\n   * @param path the path where to look\n   * @return array of File\n   */\n  public static File[] listDirectories(String path) {\n    return new File(path).listFiles(File::isDirectory);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#list-files-in-directory","title":"List Files In Directory","text":"<pre><code>public class ListFilesInDirectorySnippet {\n\n  /**\n   * List files in directory.\n   *\n   * @param folder the path where to look\n   * @return array of File\n   */\n  public static File[] listFilesInDirectory(String folder) {\n    return new File(folder).listFiles(File::isFile);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#read-lines","title":"Read Lines","text":"<pre><code>public class ReadLinesSnippet {\n\n  /**\n   * Read file as list of strings.\n   *\n   * @param filename the filename to read from\n   * @return list of strings\n   * @throws IOException if an I/O error occurs\n   */\n  public static List&lt;String&gt; readLines(String filename) throws IOException {\n    return Files.readAllLines(Paths.get(filename));\n  }\n}\n</code></pre>"},{"location":"java/snippets/#zip-directory","title":"Zip Directory","text":"<pre><code>public class ZipDirectorySnippet {\n\n  /**\n   * Zip a complete directory.\n   *\n   * @param srcDirectoryName The path to the directory to be zipped\n   * @param zipFileName The location and name of the zipped file.\n   * @throws IOException if an I/O error occurs\n   * */\n  public static void zipDirectory(String srcDirectoryName, String zipFileName) throws IOException {\n    var srcDirectory = new File(srcDirectoryName);\n    try (\n        var fileOut = new FileOutputStream(zipFileName);\n        var zipOut = new ZipOutputStream(fileOut)\n    ) {\n      zipFile(srcDirectory, srcDirectory.getName(), zipOut);\n    }\n  }\n\n  /**\n   * Utility function which either zips a single file, or recursively calls itself for \n   * a directory to traverse down to the files contained within it.\n   *\n   * @param fileToZip The file as a resource\n   * @param fileName The actual name of the file\n   * @param zipOut The output stream to which all data is being written\n   * */\n  public static void zipFile(File fileToZip, String fileName, ZipOutputStream zipOut) \n      throws IOException {\n    if (fileToZip.isHidden()) { // Ignore hidden files as standard\n      return;\n    }\n    if (fileToZip.isDirectory()) {\n      if (fileName.endsWith(\"/\")) {\n        zipOut.putNextEntry(new ZipEntry(fileName)); // To be zipped next\n        zipOut.closeEntry();\n      } else {\n        // Add the \"/\" mark explicitly to preserve structure while unzipping action is performed\n        zipOut.putNextEntry(new ZipEntry(fileName + \"/\"));\n        zipOut.closeEntry();\n      }\n      var children = fileToZip.listFiles();\n      for (var childFile : children) { // Recursively apply function to all children\n        zipFile(childFile, fileName + \"/\" + childFile.getName(), zipOut);\n      }\n      return;\n    }\n    try (\n        var fis = new FileInputStream(fileToZip) // Start zipping once we know it is a file\n    ) {\n      var zipEntry = new ZipEntry(fileName);\n      zipOut.putNextEntry(zipEntry);\n      var bytes = new byte[1024];\n      var length = 0;\n      while ((length = fis.read(bytes)) &gt;= 0) {\n        zipOut.write(bytes, 0, length);\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#zip-file","title":"Zip File","text":"<pre><code>public class ZipFileSnippet {\n\n  /**\n   * Zip single file.\n   *\n   * @param srcFilename the filename of the source file\n   * @param zipFilename the filename of the destination zip file\n   * @throws IOException if an I/O error occurs\n   */\n  public static void zipFile(String srcFilename, String zipFilename) throws IOException {\n    var srcFile = new File(srcFilename);\n    try (\n            var fileOut = new FileOutputStream(zipFilename);\n            var zipOut = new ZipOutputStream(fileOut);\n            var fileIn = new FileInputStream(srcFile)\n    ) {\n      var zipEntry = new ZipEntry(srcFile.getName());\n      zipOut.putNextEntry(zipEntry);\n      final var bytes = new byte[1024];\n      int length;\n      while ((length = fileIn.read(bytes)) &gt;= 0) {\n        zipOut.write(bytes, 0, length);\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#zip-files","title":"Zip Files","text":"<pre><code>public class ZipFilesSnippet {\n\n  /**\n   * Zip multiples files.\n   *\n   * @param srcFilenames array of source file names\n   * @param zipFilename  the filename of the destination zip file\n   * @throws IOException if an I/O error occurs\n   */\n  public static void zipFiles(String[] srcFilenames, String zipFilename) throws IOException {\n    try (\n            var fileOut = new FileOutputStream(zipFilename);\n            var zipOut = new ZipOutputStream(fileOut)\n    ) {\n      for (String srcFilename : srcFilenames) {\n        var srcFile = new File(srcFilename);\n        try (var fileIn = new FileInputStream(srcFile)) {\n          var zipEntry = new ZipEntry(srcFile.getName());\n          zipOut.putNextEntry(zipEntry);\n          final var bytes = new byte[1024];\n          int length;\n          while ((length = fileIn.read(bytes)) &gt;= 0) {\n            zipOut.write(bytes, 0, length);\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#io","title":"I/O","text":""},{"location":"java/snippets/#inputstream-to-string","title":"InputStream To String","text":"<pre><code>public class InputStreamToStringSnippet {\n\n  /**\n   * Convert InputStream to String.\n   *\n   * @param inputStream InputStream to convert\n   * @return String\n   */\n  public static String inputStreamToString(InputStream inputStream) {\n    return new BufferedReader(new InputStreamReader(inputStream, StandardCharsets.UTF_8))\n            .lines().collect(Collectors.joining(System.lineSeparator()));\n  }\n}\n</code></pre>"},{"location":"java/snippets/#read-file-snippet","title":"Read File Snippet","text":"<pre><code>public class ReadFileSnippet {\n\n  /**\n   * Read file using stream and return list of string lines.\n   *\n   * @param fileName file to read\n   * @throws FileNotFoundException if an I/O error occurs\n   */\n  public static List&lt;String&gt; readFile(String fileName) throws FileNotFoundException {\n    try (Stream&lt;String&gt; stream = new BufferedReader(new FileReader(fileName)).lines()) {\n      return stream.collect(Collectors.toList());\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#math","title":"Math","text":""},{"location":"java/snippets/#dice-throw","title":"Dice Throw","text":"<pre><code>public class DiceThrow {\n\n  private static Random random = new Random();\n\n  /**\n  * Enum for standardized sided dice (4,6,8,10,12 and 20).\n  */\n  public enum DiceSides {\n\n    FOUR(4), SIX(6), EIGHT(8), TEN(10), TWELVE(12), TWENTY(20);\n\n    private final int diSides;\n\n    DiceSides(int diceSides) {\n      this.diSides = diceSides;\n    }\n\n    /**\n     * Returns the number of sides of a dice.\n     *\n     * @return int denoting number of sides of a dice\n     */\n    public int getDiceSides() {\n      return this.diSides;\n    }\n\n  }\n\n  /**\n  * Returns the sum of sides for the given number of sides of each dice.\n  *\n  * @param noOfDice number of dice\n  * @param sides sides of a dice\n  * @return int sum of sides for number of dice\n  */\n  public static int throwDice(int noOfDice, DiceSides sides) {\n\n    int sum = 0;\n    for (int i = 0; i &lt; noOfDice; i++) {\n      sum = sum + (1 + random.nextInt(sides.getDiceSides()));\n    }\n    return sum;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#elo-rating","title":"Elo Rating","text":"<pre><code>public class EloRatingSnippet {\n\n  static final int BASE = 400; //Two types are popular - 400 and 480. We will choose 400 here\n  static final int RATING_ADJUSTMENT_FACTOR = 32; //32 is the standard for Beginner Games\n\n  /**\n   * Elo Rating Snippet to calculate result after a single match.\n   *\n   * @param firstPlayerRating Rating of the first player.\n   * @param secondPlayerRating Rating of the second player.\n   * @param result Result of the match, always considered with respect to the first player.\n   *               1 indicates a win, 0.5 indicates a draw and 0 indicates a loss.\n   * @return Returns the new rating of the first player.\n   */\n  public static double calculateMatchRating(double firstPlayerRating, double secondPlayerRating,\n      double result) {\n    double ratingDiff = ((secondPlayerRating - firstPlayerRating) * 1.0) / BASE;\n    double logisticDiff = Math.pow(10, ratingDiff);\n    double firstPlayerExpectedScore = 1.0 / (1 + logisticDiff);\n    double firstPlayerActualScore = result;\n    double newRating = firstPlayerRating + RATING_ADJUSTMENT_FACTOR * (firstPlayerActualScore \n                       - firstPlayerExpectedScore);\n    return newRating;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#even-odd","title":"Even Odd","text":"<pre><code>public class EvenOdd {\n\n  /**\n   * Returns string denoting number is odd or even.\n   *\n   * @param num To check whether its even or odd\n   * @return string denoting its even or odd\n   */\n  public static String evenodd(int num) {\n    if (num % 2 == 0) {\n      return \"even\";\n    } else {\n      return \"odd\";\n    }\n  }\n}\n</code></pre>"},{"location":"java/snippets/#factorial","title":"Factorial","text":"<pre><code>public class FactorialSnippet {\n\n  /**\n   * Factorial. Works only for small numbers\n   *\n   * @param number for which factorial is to be calculated for\n   * @return factorial\n   */\n  public static int factorial(int number) {\n    var result = 1;\n    for (var factor = 2; factor &lt;= number; factor++) {\n      result *= factor;\n    }\n    return result;\n  }\n\n  /**\n   * Factorial. Example of what the recursive implementation looks like.\n   *\n   * @param number for which factorial is to be calculated for\n   * @return factorial\n   */\n  public static int recursiveFactorial(int number) {\n    var initial = 0;\n    if (number == initial) {\n      return initial + 1;\n    }\n    return number * recursiveFactorial(number - 1);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#fibonacci","title":"Fibonacci","text":"<pre><code>public class FibonacciSnippet {\n\n  /**\n   * Recursive Fibonacci series. Works only for small n and is spectacularly inefficient\n   *\n   * @param n given number\n   * @return fibonacci number for given n\n   */\n  public static int fibonacci(int n) {\n    if (n &lt;= 1) {\n      return n;\n    } else {\n      return fibonacci(n - 1) + fibonacci(n - 2);\n    }\n  }\n\n  /**\n   * Fibonacci series using dynamic programming. Works for larger ns as well.\n   *\n   * @param n given number\n   * @return fibonacci number for given n\n   */\n  public static int fibonacciBig(int n) {\n      int previous = 0;\n      int current = 1;\n      for (int i = 0; i &lt; n - 1; i++) {\n          int t = previous + current;\n          previous = current;\n          current = t;\n      }\n\n      return current;\n  }\n\n  /**\n   * Example of what an iterative implementation of Fibonacci looks like.\n   *\n   * @param number given number\n   * @return fibonacci number for given n\n   */\n  public static int iterativeFibonacci(int number) {\n    List&lt;Integer&gt; list = new ArrayList&lt;&gt;();\n    list.add(0);\n    list.add(1);\n    for (int i = 2; i &lt; number + 1; i++) {\n      list.add(list.get(i - 2) + list.get(i - 1));\n    }\n    return list.get(number);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#greatest-common-divisor","title":"Greatest Common Divisor","text":"<pre><code>public class GreatestCommonDivisorSnippet {\n\n  /**\n   * Greatest common divisor calculation.\n   *\n   * @param a one of the numbers whose gcd is to be computed\n   * @param b other number whose gcd is to be computed\n   * @return gcd of the two numbers\n   */\n  public static int gcd(int a, int b) {\n    if (b == 0) {\n      return a;\n    }\n    return gcd(b, a % b);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#haversine-formula","title":"Haversine Formula","text":"<pre><code>public class HaversineFormulaSnippet {\n\n  // Radius of sphere on which the points are, in this case Earth.\n  private static final double SPHERE_RADIUS_IN_KM = 6372.8;\n\n  /**\n   * Haversine formula for calculating distance between two latitude, longitude points.\n   *\n   * @param latA Latitude of point A\n   * @param longA Longitude of point A\n   * @param latB Latitude of point B\n   * @param longB Longitude of point B\n   * @return the distance between the two points.\n   */\n  public static double findHaversineDistance(double latA, double longA, double latB, double longB) {\n    if (!isValidLatitude(latA)\n        || !isValidLatitude(latB)\n        || !isValidLongitude(longA)\n        || !isValidLongitude(longB)) {\n      throw new IllegalArgumentException();\n    }\n\n    // Calculate the latitude and longitude differences\n    var latitudeDiff = Math.toRadians(latB - latA);\n    var longitudeDiff = Math.toRadians(longB - longA);\n\n    var latitudeA = Math.toRadians(latA);\n    var latitudeB = Math.toRadians(latB);\n\n    // Calculating the distance as per haversine formula\n    var a = Math.pow(Math.sin(latitudeDiff / 2), 2)\n            + Math.pow(Math.sin(longitudeDiff / 2), 2) * Math.cos(latitudeA) * Math.cos(latitudeB);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    return SPHERE_RADIUS_IN_KM * c;\n  }\n\n  // Check for valid latitude value\n  private static boolean isValidLatitude(double latitude) {\n    return latitude &gt;= -90 &amp;&amp; latitude &lt;= 90;\n  }\n\n  // Check for valid longitude value\n  private static boolean isValidLongitude(double longitude) {\n    return longitude &gt;= -180 &amp;&amp; longitude &lt;= 180;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#least-common-multiple","title":"Least Common Multiple","text":"<pre><code>public class LeastCommonMultipleSnippet {\n  /**\n   * Least common multiple  calculation.\n   *\n   * @param a one of the numbers whose lcm is to be computed\n   * @param b other number whose lcm is to be computed\n   * @return lcm of the two numbers\n   */\n  public static int lcm(int a, int b) {\n    int max = a &gt; b ? a : b;\n    int min = a &lt; b ? a : b;\n    for (int i = 1; i &lt;= min; i += 1) {\n      int prod = max * i;\n      if (prod % min == 0) {\n        return prod;\n      }\n    }\n    return max * min;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#luhn","title":"Luhn","text":"<pre><code>public class LuhnSnippet {\n\n  /**\n   * Calculates checksum for a given number with Luhn's algorithm. Works only on non-negative\n   * integers not greater than {@link Long#MAX_VALUE} i.e., all numbers with a maximum of 18\n   * digits, plus 19-digit-long numbers start with 1..8 (also some with 9, too). For\n   * demonstration purposes, algorithm is not optimized for efficiency.\n   *\n   * @param num number whose checksum is to be calculated\n   * @return checksum value for num\n   * @see &lt;a href=\"https://patents.google.com/patent/US2950048A\"&gt;Hans P. LUHN's patent US2950048A&lt;/a&gt;\n   * @see &lt;a href=\"https://en.wikipedia.org/wiki/Luhn_algorithm\"&gt;Luhn algorithm on Wikipedia&lt;/a&gt;\n   */\n  public static int calculateLuhnChecksum(long num) {\n    if (num &lt; 0) {\n      throw new IllegalArgumentException(\"Non-negative numbers only.\");\n    }\n    final var numStr = String.valueOf(num);\n\n    var sum = 0;\n    var isOddPosition = true;\n    // Loop on digits of numStr from right to left.\n    for (var i = numStr.length() - 1; i &gt;= 0; i--) {\n      final var digit = Integer.parseInt(Character.toString(numStr.charAt(i)));\n      final var substituteDigit = (isOddPosition ? 2 : 1) * digit;\n\n      final var tensPlaceDigit = substituteDigit / 10;\n      final var onesPlaceDigit = substituteDigit % 10;\n      sum += tensPlaceDigit + onesPlaceDigit;\n\n      isOddPosition = !isOddPosition;\n    }\n    final var checksumDigit = (10 - (sum % 10)) % 10;\n    // Outermost modulus handles edge case `num = 0`.\n    return checksumDigit;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#natural-number-binary-conversion","title":"Natural Number Binary Conversion","text":"<pre><code>public class NaturalNumberBinaryConversionSnippet {\n\n  /**\n   * Convert natural number to binary string. Only supports positive integers.Throws exception\n   * for negative integers\n   *\n   * @param naturalNumber given number\n   * @return Binary string representation of naturalNumber\n   */\n  public static String toBinary(long naturalNumber) {\n    if (naturalNumber &lt; 0) {\n      throw new NumberFormatException(\"Negative Integer, this snippet only accepts \"\n              + \"positive integers\");\n    }\n    if (naturalNumber == 0) {\n      return \"0\";\n    }\n    final Stack&lt;Long&gt; binaryBits =\n            Stream.iterate(naturalNumber, n -&gt; n &gt; 0, n -&gt; n / 2).map(n -&gt; n % 2)\n                    .collect(Stack::new, Stack::push, Stack::addAll);\n    return Stream.generate(binaryBits::pop)\n            .limit(binaryBits.size()).map(String::valueOf).collect(Collectors.joining());\n  }\n\n  /**\n   * Convert binary string representation to Long valued Integer. Throws exception if input\n   * string contains characters other than '0' and '1'\n   *\n   * @param binary given number\n   * @return Unsigned Long value for the binary number\n   */\n  public static Long fromBinary(String binary) {\n    binary.chars().filter(c -&gt; c != '0' &amp;&amp; c != '1').findFirst().ifPresent(in -&gt; {\n      throw new NumberFormatException(\n              \"Binary string contains values other than '0' and '1'\");\n    });\n    return IntStream.range(0, binary.length())\n            .filter(in -&gt; binary.charAt(binary.length() - 1 - in) == '1')\n            .mapToLong(in -&gt; ((long) 0b1) &lt;&lt; in).sum();\n  }\n}\n</code></pre>"},{"location":"java/snippets/#perform-lottery","title":"Perform Lottery","text":"<pre><code>public class PerformLotterySnippet {\n\n  /**\n   * Generate random lottery numbers.\n   *\n   * @param numNumbers    how many performLottery numbers are available (e.g. 49)\n   * @param numbersToPick how many numbers the player needs to pick (e.g. 6)\n   * @return array with the random numbers\n   */\n  public static Integer[] performLottery(int numNumbers, int numbersToPick) {\n    var numbers = new ArrayList&lt;Integer&gt;();\n    for (var i = 0; i &lt; numNumbers; i++) {\n      numbers.add(i + 1);\n    }\n    Collections.shuffle(numbers);\n    return numbers.subList(0, numbersToPick).toArray(new Integer[numbersToPick]);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#prime-number","title":"Prime Number","text":"<pre><code>public class PrimeNumberSnippet {\n\n  /**\n   * Checks if given number is a prime number. Prime number is a number that is greater than 1 and\n   * divided by 1 or itself only Credits: https://en.wikipedia.org/wiki/Prime_number\n   *\n   * @param number number to check prime\n   * @return true if prime\n   */\n  public static boolean isPrime(int number) {\n    //if number &lt; 2 its not a prime number\n    if (number &lt; 2) {\n      return false;\n    }\n    // 2 and 3 are prime numbers\n    if (number &lt; 3) {\n      return true;\n    }\n    // check if n is a multiple of 2\n    if (number % 2 == 0) {\n      return false;\n    }\n    // if not, then just check the odds\n    for (var i = 3; i * i &lt;= number; i += 2) {\n      if (number % i == 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#random-number","title":"Random Number","text":"<pre><code>public class RandomNumber {\n\n  private RandomNumber() {}\n\n  private static Random random = new Random();\n\n  /**\n   * Return a random number between two given numbers.\n   *\n   * @param start Starting point to find the random number\n   * @param end Ending point to find the random number\n   * @return Number denoting the random number generated\n   */\n  public static &lt;T extends Number&gt; Number getRandomNumber(T start, T end) {\n\n      if (start instanceof Byte &amp;&amp; end instanceof Byte) {\n        return (byte) (start.byteValue()\n                + random.nextInt(end.byteValue() - start.byteValue() + 1));\n      } else if (start instanceof Short &amp;&amp; end instanceof Short) {\n        return (short) (start.shortValue()\n                + random.nextInt(end.shortValue() - start.shortValue() + 1));\n      } else if (start instanceof Integer &amp;&amp; end instanceof Integer) {\n        return start.intValue()\n                + random.nextInt(end.intValue() - start.intValue() + 1);\n      } else if (start instanceof Long &amp;&amp; end instanceof Long) {\n        return start.longValue()\n                + (long) (random.nextDouble() * end.longValue() - start.longValue() + 1);\n      } else if (start instanceof Float &amp;&amp; end instanceof Float) {\n        return start.floatValue()\n                + random.nextFloat() * (end.floatValue() - start.floatValue());\n      } else if (start instanceof Double &amp;&amp; end instanceof Double) {\n        return start.doubleValue()\n                + random.nextDouble() * (end.doubleValue() - start.doubleValue());\n      } else {\n        throw new IllegalArgumentException(\"Invalid Numbers As Arguments \"\n                + start.getClass() + \" and \" + end.getClass());\n        }\n    }\n}\n</code></pre>"},{"location":"java/snippets/#square-root","title":"Square Root","text":"<pre><code>public class SquareRoot {\n\n  /**\n   * Returns square root of a number.\n   *\n   * @param num To find SquareRoot\n   * @param p   precision till how many decimal numbers we want accurate ans\n   */\n  public static double sqrt(int num, int p) {\n    int start = 0;\n    int end = num;\n    double root = 0.0;\n\n    while (start &lt;= end) {\n      int mid = start + (end - start) / 2;\n\n      if ((mid * mid) &gt; num) {\n        end = mid - 1;\n      } else if ((mid * mid) &lt; num) {\n        start = mid + 1;\n      } else {\n        return mid;\n      }\n    }\n    double incr = 0.1;\n    for (int i = 0; i &lt; p; i++) {\n      while (root * root &lt; num) {\n        root = root + incr;\n      }\n      root = root - incr;\n      incr = incr / 10;\n    }\n    return root;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#media","title":"Media","text":""},{"location":"java/snippets/#capture-screen","title":"Capture Screen","text":"<pre><code>public class CaptureScreenSnippet {\n\n  /**\n   * Capture screenshot and save it to PNG file. Credits: https://viralpatel.net/blogs/how-to-take-screen-shots-in-java-taking-screenshots-java/\n   *\n   * @param filename the name of the file\n   * @throws AWTException if the platform configuration does not allow low-level input control\n   * @throws IOException  if an I/O error occurs\n   */\n  public static void captureScreen(String filename) throws AWTException, IOException {\n    var screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n    var screenRectangle = new Rectangle(screenSize);\n    var robot = new Robot();\n    var image = robot.createScreenCapture(screenRectangle);\n    ImageIO.write(image, \"png\", new File(filename));\n  }\n}\n</code></pre>"},{"location":"java/snippets/#network","title":"Network","text":""},{"location":"java/snippets/#http-get","title":"HTTP GET","text":"<pre><code>public class HttpGetSnippet {\n\n  /**\n   * Performs HTTP GET request.\n   *\n   * @param uri the URI of the connection\n   * @return response object\n   * @throws Exception i/o error, interruption error, etc\n   */\n  public static HttpResponse&lt;String&gt; httpGet(String uri) throws Exception {\n    var client = HttpClient.newHttpClient();\n    var request = HttpRequest.newBuilder()\n            .uri(URI.create(uri))\n            .build();\n    return client.send(request, HttpResponse.BodyHandlers.ofString());\n  }\n}\n</code></pre>"},{"location":"java/snippets/#http-post","title":"HTTP POST","text":"<pre><code>public class HttpPostSnippet {\n\n  /**\n   * Performs HTTP POST request. Credits https://stackoverflow.com/questions/3324717/sending-http-post-request-in-java\n   *\n   * @param address   the URL of the connection in String format, like \"http://www.google.com\"\n   * @param arguments the body of the POST request, as a HashMap\n   * @return response object\n   * @throws IOException          if an I/O error occurs\n   * @throws InterruptedException if the operation is interrupted\n   */\n  public static HttpResponse&lt;String&gt; httpPost(String address, HashMap&lt;String, String&gt; arguments)\n          throws IOException, InterruptedException {\n    var sj = new StringJoiner(\"&amp;\");\n    for (var entry : arguments.entrySet()) {\n      sj.add(URLEncoder.encode(entry.getKey(), StandardCharsets.UTF_8) + \"=\"\n              + URLEncoder.encode(entry.getValue(), StandardCharsets.UTF_8));\n    }\n\n    var out = sj.toString().getBytes(StandardCharsets.UTF_8);\n    var request = HttpRequest.newBuilder()\n            .uri(URI.create(address))\n            .headers(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\")\n            .POST(HttpRequest.BodyPublishers.ofByteArray(out))\n            .build();\n\n    return HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());\n  }\n}\n</code></pre>"},{"location":"java/snippets/#string","title":"String","text":""},{"location":"java/snippets/#anagram","title":"Anagram","text":"<pre><code>public class AnagramSnippet {\n\n  /**\n   * Checks if two words are anagrams (contains same characters with same frequency in any order).\n   *\n   * @param s1 The first string to be checked\n   * @param s2 The second string to be checked\n   * @return true if they are anagrams of each other\n   */\n  public static boolean isAnagram(String s1, String s2) {\n    var l1 = s1.length();\n    var l2 = s2.length();\n\n    if (l1 != l2) {\n      return false;\n    }\n\n    var arr1 = new int[256];\n    var arr2 = new int[256];\n\n    for (var i = 0; i &lt; l1; i++) {\n      arr1[s1.charAt(i)]++;\n      arr2[s2.charAt(i)]++;\n    }\n    return Arrays.equals(arr1, arr2);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#common-letters","title":"Common Letters","text":"<pre><code>public class CommonLettersSnippet {\n\n  /**\n   * Find Common Characters inside given two strings.\n   *\n   * @param firstStr  first string\n   * @param secondStr second string\n   * @return Common Characters.\n   */\n  public static String getCommonLetters(String firstStr, String secondStr) {\n    Set&lt;String&gt; commonLetters = new HashSet&lt;&gt;();\n    for (Character currentCharacter : firstStr.toCharArray()) {\n      if (isCommonLetter(secondStr, currentCharacter)) {\n        commonLetters.add(currentCharacter.toString());\n      }\n    }\n    return String.join(\" \", commonLetters);\n  }\n\n  private static boolean isCommonLetter(String str, Character character) {\n    return str.contains(character.toString()) &amp;&amp; Character.isLetter(character);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#compare-version","title":"Compare Version","text":"<pre><code>public class CompareVersionSnippet {\n\n  private static final String EXTRACT_VERSION_REGEX = \".*?((?&lt;!\\\\w)\\\\d+([.-]\\\\d+)*).*\";\n\n  /**\n   * Compares two version strings.\n   * Credits: https://stackoverflow.com/a/6702000/6645088 and https://stackoverflow.com/a/44592696/6645088\n   *\n   * @param v1 the first version string to compare\n   * @param v2 the second version string to compare\n   * @return the value {@code 0} if the two strings represent same versions;\n   *     a value less than {@code 0} if {@code v1} is greater than {@code v2}; and\n   *     a value greater than {@code 0} if {@code v2} is greater than {@code v1}\n   */\n  public static int compareVersion(String v1, String v2) {\n    var components1 = getVersionComponents(v1);\n    var components2 = getVersionComponents(v2);\n    int length = Math.max(components1.length, components2.length);\n    for (int i = 0; i &lt; length; i++) {\n      Integer c1 = i &lt; components1.length ? Integer.parseInt(components1[i]) : 0;\n      Integer c2 = i &lt; components2.length ? Integer.parseInt(components2[i]) : 0;\n      int result = c1.compareTo(c2);\n      if (result != 0) {\n        return result;\n      }\n    }\n    return 0;\n  }\n\n  private static String[] getVersionComponents(String version) {\n    return version.replaceAll(EXTRACT_VERSION_REGEX, \"$1\").split(\"\\\\.\");\n  }\n}\n</code></pre>"},{"location":"java/snippets/#duplicate-character","title":"Duplicate Character","text":"<pre><code>public class DuplicateCharacterSnippet {\n\n  /**\n   * Remove Duplicate Characters from a string.\n   *\n   * @param str The string to be processed\n   * @return A string with no duplicate characters\n   */\n\n  public static String removeDuplicateCharacters(String str) {\n    char[] charsOfStr = str.toCharArray();\n    Set&lt;String&gt; uniqueCharacters = new HashSet&lt;&gt;();\n    for (char character : charsOfStr) {\n      uniqueCharacters.add(String.valueOf(character));\n    }\n    return String.join(\"\", uniqueCharacters);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#levenshtein-distance","title":"Levenshtein Distance","text":"<pre><code>public class LevenshteinDistanceSnippet {\n\n  /**\n   * Find the Levenshtein distance between two words. https://en.wikipedia.org/wiki/Levenshtein_distance\n   *\n   * @param word1 first word\n   * @param word2 second word\n   * @return distance\n   */\n  public static int findLevenshteinDistance(String word1, String word2) {\n    // If word2 is empty, removing\n    int[][] ans = new int[word1.length() + 1][word2.length() + 1];\n    for (int i = 0; i &lt;= word1.length(); i++) {\n      ans[i][0] = i;\n    }\n    // if word1 is empty, adding\n    for (int i = 0; i &lt;= word2.length(); i++) {\n      ans[0][i] = i;\n    }\n    // None is empty\n    for (int i = 1; i &lt;= word1.length(); i++) {\n      for (int j = 1; j &lt;= word2.length(); j++) {\n        int min = Math.min(Math.min(ans[i][j - 1], ans[i - 1][j]), ans[i - 1][j - 1]);\n        ans[i][j] = word1.charAt(i - 1) == word2.charAt(j - 1) ? ans[i - 1][j - 1] : min + 1;\n      }\n    }\n    return ans[word1.length()][word2.length()];\n  }\n}\n</code></pre>"},{"location":"java/snippets/#lindenmayer-system","title":"Lindenmayer System","text":"<pre><code>public class LindenmayerSystemSnippet {\n  /**\n   * Generates an L-system string based on axiom, production rules, and a number of iterations.\n   *\n   * @param axiom           initial string to begin the L-system\n   * @param productionRules map of character rules where each symbol can be replaced with a string\n   * @param iterations      number of iterations to apply the production rules\n   * @return the generated string after all iterations\n   */\n  public static String generateLindenmayerSystem(\n          String axiom,\n          Map&lt;Character, String&gt; productionRules,\n          int iterations\n  ) {\n    String current = axiom;\n\n    for (int i = 0; i &lt; iterations; i++) {\n      StringBuilder nextIteration = new StringBuilder(current.length() * 2);\n\n      // Replace each symbol with the corresponding production rule or the symbol itself\n      current.chars()\n          .mapToObj(c -&gt; (char) c)\n          .forEach(symbol -&gt;\n                  nextIteration.append(\n                          productionRules.getOrDefault(symbol, String.valueOf(symbol))\n                  )\n          );\n\n      current = nextIteration.toString();\n    }\n    return current;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#max-character-count","title":"Max Character Count","text":"<pre><code>public class MaxCharacterCountSnippet {\n\n  /**\n   * The maximum count of times a specific character appears in a string.\n   *\n   * @param str \u064eA specific string\n   * @param character A specific character\n   * @return the maximum count of one character\n   */\n\n  public static int getMaxCharacterCount(String str, char character) {\n    int characterCount = 0;\n    int maxCharacterCount = 0;\n    for (int i = 0; i &lt; str.length(); i++) {\n      if ((str.charAt(i)) == character) {\n        characterCount++;\n        maxCharacterCount = Math.max(maxCharacterCount, characterCount);\n      } else {\n        characterCount = 0;\n      }\n    }\n    return maxCharacterCount;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#palindrome-check","title":"Palindrome Check","text":"<pre><code>public class PalindromCheckSnippet {\n\n  /**\n   * Checks if given string is palindrome (same forward and backward). Skips non-letter characters\n   * Credits: https://github.com/kousen/java_8_recipes\n   *\n   * @param s string to check\n   * @return true if palindrome\n   */\n  public static boolean isPalindrome(String s) {\n    for (int i = 0, j = s.length() - 1; i &lt; j; i++, j--) {\n      while (i &lt; j &amp;&amp; !Character.isLetter(s.charAt(i))) {\n        i++;\n      }\n      while (i &lt; j &amp;&amp; !Character.isLetter(s.charAt(j))) {\n        j--;\n      }\n\n      if (Character.toLowerCase(s.charAt(i)) != Character.toLowerCase(s.charAt(j))) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n</code></pre>"},{"location":"java/snippets/#reverse-string","title":"Reverse String","text":"<pre><code>public class ReverseStringSnippet {\n\n  /**\n   * Reverse string.\n   *\n   * @param s the string to reverse\n   * @return reversed string\n   */\n  public static String reverseString(String s) {\n    return new StringBuilder(s).reverse().toString();\n  }\n}\n</code></pre>"},{"location":"java/snippets/#string-to-date","title":"String To Date","text":"<pre><code>public class StringToDateSnippet {\n\n  /**\n   * Convert string to date.\n   *\n   * @param date   the date string\n   * @param format expected date format\n   * @return Date\n   * @throws ParseException in case of an unparseable date string\n   */\n  public static Date stringToDate(String date, String format) throws ParseException {\n    var simpleDateFormat = new SimpleDateFormat(format);\n    return simpleDateFormat.parse(date);\n  }\n}\n</code></pre>"},{"location":"java/snippets/#kmp-substring-search-algorithm","title":"KMP Substring Search Algorithm","text":"<pre><code>public class KMPSubstringSearchSnippet {\n\n    /**\n     * Implements the Knuth-Morris-Pratt (KMP) algorithm to find the index of the first occurrence of a substring in a given text.\n     *\n     * @param text The text in which the substring is to be searched.\n     * @param pattern The substring pattern to search for.\n     * @return The index of the first occurrence of the pattern in the text, or -1 if the pattern is not found.\n     */\n    public static int kmpSearch(String text, String pattern) {\n        if (pattern == null || pattern.length() == 0) {\n            return 0; // Trivial case: empty pattern\n        }\n\n        int[] lps = computeLPSArray(pattern);\n        int i = 0; // index for text\n        int j = 0; // index for pattern\n\n        while (i &lt; text.length()) {\n            if (pattern.charAt(j) == text.charAt(i)) {\n                i++;\n                j++;\n            }\n\n            if (j == pattern.length()) {\n                return i - j; // Found pattern at index (i - j)\n            } else if (i &lt; text.length() &amp;&amp; pattern.charAt(j) != text.charAt(i)) {\n                if (j != 0) {\n                    j = lps[j - 1]; // Use the LPS array to skip characters\n                } else {\n                    i++; // If no match and j is 0, move to the next character in text\n                }\n            }\n        }\n        return -1; // Pattern not found\n    }\n\n    /**\n     * Computes the LPS (Longest Prefix Suffix) array for the pattern, which indicates the longest proper prefix which is also a suffix.\n     *\n     * @param pattern The pattern for which the LPS array is to be computed.\n     * @return The LPS array.\n     */\n    private static int[] computeLPSArray(String pattern) {\n        int length = 0;\n        int i = 1;\n        int[] lps = new int[pattern.length()];\n        lps[0] = 0; // LPS for the first character is always 0\n\n        while (i &lt; pattern.length()) {\n            if (pattern.charAt(i) == pattern.charAt(length)) {\n                length++;\n                lps[i] = length;\n                i++;\n            } else {\n                if (length != 0) {\n                    length = lps[length - 1]; // Fall back to the previous LPS value\n                } else {\n                    lps[i] = 0;\n                    i++;\n                }\n            }\n        }\n        return lps;\n    }\n}\n</code></pre>"},{"location":"java/snippets/#thread","title":"Thread","text":""},{"location":"java/snippets/#thread-pool","title":"Thread Pool","text":""},{"location":"java/snippets/#thread_1","title":"Thread","text":"<pre><code>public class ThreadSnippet {\n\n  /**\n   * Creates and returns a new thread with the task assigned to it (task will be performed parallel to the main thread).\n   *\n   * @param task the task to be executed by this thread\n   * @return new thread with task assigned to it.\n   */\n  public static Thread createThread(Runnable task) {\n    return new Thread(task);\n  }\n}\n</code></pre> <pre><code>public class ThreadPool {\n\n  /**\n   * &lt;p&gt;Creates pool of threads. Where the pool is the size of the number of processors\n   * available to the Java virtual machine.&lt;/p&gt;\n   *\n   * @return the newly created thread pool\n   */\n  public static ExecutorService createFixedThreadPool() {\n    return Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n  }\n}\n</code></pre>"},{"location":"java/snippets/#damm-algorithm","title":"Damm Algorithm","text":"<pre><code>public class DammSnippet {\n\n  /**\n   * Private constructor to prevent instantiation of utility class.\n   */\n  private DammSnippet() {\n    throw new UnsupportedOperationException(\"Utility class - instantiation is not allowed.\");\n  }\n  private static final int[][] matrix = new int[][] {\n          { 0, 3, 1, 7, 5, 9, 8, 6, 4, 2 },\n          { 7, 0, 9, 2, 1, 5, 4, 8, 6, 3 },\n          { 4, 2, 0, 6, 8, 7, 1, 3, 5, 9 },\n          { 1, 7, 5, 0, 9, 8, 3, 4, 2, 6 },\n          { 6, 1, 2, 3, 0, 4, 5, 9, 7, 8 },\n          { 3, 6, 7, 4, 2, 0, 9, 5, 8, 1 },\n          { 5, 8, 6, 9, 7, 2, 0, 1, 3, 4 },\n          { 8, 9, 4, 5, 3, 6, 2, 0, 1, 7 },\n          { 9, 4, 3, 8, 6, 1, 7, 2, 0, 5 },\n          { 2, 5, 8, 1, 4, 3, 6, 7, 9, 0 }\n  };\n  public static int calculateCheckSumDigit(String number) {\n    if (number == null || number.isEmpty()) {\n      throw new IllegalArgumentException(\"Input number cannot be null or empty.\");\n    }\n\n    int interim = 0;\n    for (int index = 0; index &lt; number.length(); index++) {\n      char currCh = number.charAt(index);\n      if (!Character.isDigit(currCh)) {\n        throw new IllegalArgumentException(\"Input number contains invalid characters: \" + number);\n      }\n\n      int currentIndex = currCh - '0';\n      interim = matrix[interim][currentIndex];\n    }\n\n    return interim;\n  }\n  public static int calculateCheckSumDigit(int number) {\n    return calculateCheckSumDigit(String.valueOf(number));\n  }\n  public static int calculateCheckSumDigit(long number) {\n    return calculateCheckSumDigit(String.valueOf(number));\n  }\n  public static String generateCheckSum(String number) {\n    int checkSumDigit = calculateCheckSumDigit(number);\n    return number + checkSumDigit;\n  }\n  public static int generateCheckSum(int number) {\n    int checkSumDigit = calculateCheckSumDigit(number);\n    return (number * 10) + checkSumDigit;\n  }\n  public static long generateCheckSum(long number) {\n    int checkSumNumber = calculateCheckSumDigit(number);\n    return (number * 10) + checkSumNumber;\n  }\n  public static boolean validate(String number) {\n    return calculateCheckSumDigit(number) == 0;\n  }\n  public static boolean validate(int number) {\n    return calculateCheckSumDigit(number) == 0;\n  }\n  public static boolean validate(long number) {\n    return calculateCheckSumDigit(number) == 0;\n  }\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/","title":"Java Code Snippets for Everyday Problems","text":"<p>L\u1ea5y t\u1eeb trang squash.io</p> <ul> <li>Intro: Calculating Factorial<ul> <li>Finding the Maximum Number</li> <li>Reversing a String</li> <li>Checking if a Number is Prime</li> <li>Sorting an Array</li> <li>Finding the Fibonacci Sequence</li> <li>Converting Strings to Integers</li> <li>Generating Random Numbers</li> <li>Checking if a String is Palindrome</li> <li>Getting the Current Date and Time</li> <li>Removing Duplicates from an Array</li> <li>Finding the Length of a String</li> <li>Checking if Two Strings are Anagrams</li> <li>Calculating the Power of a Number</li> <li>Reversing an Array</li> <li>Finding the Minimum Number</li> <li>Converting Integers to Strings</li> <li>Calculating the Average of an Array</li> <li>Checking if an Array is Sorted</li> <li>Converting Strings to Doubles</li> <li>Searching for an Element in an Array</li> </ul> </li> <li>Best Practices for Using Java Code Snippets<ul> <li>Use Descriptive Variable and Method Namess</li> <li>Follow Coding Conventionss</li> <li>Handle Exceptions Properlyy</li> <li>Use Meaningful Class and Method Modifierss</li> <li>Test Code Snippetss</li> </ul> </li> <li>Optimizing Java Code Snippets for Everyday Problems<ul> <li>Use Efficient Data Structuress</li> <li>Minimize Memory Usagee</li> <li>Avoid Unnecessary Operationss</li> <li>Use Efficient Algorithmss</li> <li>Avoid Unnecessary String Concatenationn</li> </ul> </li> <li>Libraries and Frameworks for Java Code Snippets<ul> <li>Apache Commonss</li> <li>Guavaa</li> <li>JUnitt</li> <li>Spring Frameworkk</li> <li>Jacksonn</li> </ul> </li> <li>Avoiding Common Mistakes with Java Code Snippets<ul> <li>Not Handling Exceptions Properlyy</li> <li>Using Inefficient Data Structures or Algorithmss</li> <li>Not Testing Code Snippetss</li> <li>Ignoring Coding Conventionss</li> </ul> </li> </ul>"},{"location":"java/snippets/van-de-hang-ngay/#intro-calculating-factorial","title":"Intro: Calculating Factorial","text":"<p>The factorial of a non-negative integer n is denoted by n! and is the product of all positive integers less than or equal to n.</p> <p>Here's a Java code snippet that calculates the factorial of a given number:</p> <pre><code>public class FactorialCalculator {\n  public static int factorial(int num) {\n    if (num == 0 || num == 1) {\n      return 1;\n    } else {\n      return num * factorial(num - 1);\n    }\n  }\n\n  public static void main(String[] args) {\n    int number = 5;\n    int result = factorial(number);\n    System.out.println(\"The factorial of \" + number + \" is: \" + result);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>FactorialCalculator</code> class with a <code>factorial</code> method that takes an integer as input and recursively calculates its factorial. The <code>main</code> method demonstrates the usage of the <code>factorial</code> method by calculating and printing the factorial of the number 5.</p>"},{"location":"java/snippets/van-de-hang-ngay/#finding-the-maximum-number","title":"Finding the Maximum Number","text":"<p>You can iterate over the array elements and keep track of the maximum number found so far.</p> <p>Here's a Java code snippet that finds the maximum number in an array:</p> <pre><code>public class MaximumNumberFinder {\n  public static int findMaximum(int[] numbers) {\n    if (numbers.length == 0) {\n      throw new IllegalArgumentException(\"Array cannot be empty\");\n    }\n\n    int max = numbers[0];\n    for (int i = 1; i &lt; numbers.length; i++) {\n      if (numbers[i] &gt; max) {\n        max = numbers[i];\n      }\n    }\n    return max;\n  }\n\n  public static void main(String[] args) {\n    int[] numbers = { 5, 2, 8, 3, 1 };\n    int maximum = findMaximum(numbers);\n    System.out.println(\"The maximum number in the array is: \" + maximum);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>MaximumNumberFinder</code> class with a <code>findMaximum</code> method that takes an array of integers as input and iterates over the elements to find the maximum number. The <code>main</code> method demonstrates the usage of the <code>findMaximum</code> method by finding and printing the maximum number in the array { 5, 2, 8, 3, 1 }.</p>"},{"location":"java/snippets/van-de-hang-ngay/#reversing-a-string","title":"Reversing a String","text":"<p>There are multiple approaches to solve this problem, such as using a StringBuilder or converting the string to a character array.</p> <p>Here's a Java code snippet that reverses a given string:</p> <pre><code>public class StringReverser {\n  public static String reverseString(String str) {\n    StringBuilder reversed = new StringBuilder(str);\n    return reversed.reverse().toString();\n  }\n\n  public static void main(String[] args) {\n    String original = \"Hello, World!\";\n    String reversed = reverseString(original);\n    System.out.println(\"The reversed string is: \" + reversed);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>StringReverser</code> class with a <code>reverseString</code> method that takes a string as input and uses a <code>StringBuilder</code> to reverse it. The <code>main</code> method demonstrates the usage of the <code>reverseString</code> method by reversing and printing the string \"Hello, World!\".</p>"},{"location":"java/snippets/van-de-hang-ngay/#checking-if-a-number-is-prime","title":"Checking if a Number is Prime","text":"<p>A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.</p> <p>Here's a Java code snippet that checks if a given number is prime:</p> <pre><code>public class PrimeNumberChecker {\n  public static boolean isPrime(int num) {\n    if (num &lt;= 1) {\n      return false;\n    }\n    for (int i = 2; i &lt;= Math.sqrt(num); i++) {\n      if (num % i == 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public static void main(String[] args) {\n    int number = 17;\n    boolean isPrime = isPrime(number);\n    System.out.println(number + \" is prime? \" + isPrime);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>PrimeNumberChecker</code> class with an <code>isPrime</code> method that takes an integer as input and checks if it is prime. The method uses a loop to iterate over the numbers from 2 to the square root of the input number and checks if any of them divide the number evenly. If a divisor is found, the number is not prime. The <code>main</code> method demonstrates the usage of the <code>isPrime</code> method by checking and printing whether the number 17 is prime.</p>"},{"location":"java/snippets/van-de-hang-ngay/#sorting-an-array","title":"Sorting an Array","text":"<p>There are various sorting algorithms available, such as bubble sort, selection sort, insertion sort, merge sort, and quicksort.</p> <p>Here's a Java code snippet that sorts an array in ascending order using the bubble sort algorithm:</p> <pre><code>public class ArraySorter {\n  public static void bubbleSort(int[] array) {\n    int n = array.length;\n    for (int i = 0; i &lt; n - 1; i++) {\n      for (int j = 0; j &lt; n - i - 1; j++) {\n        if (array[j] &gt; array[j + 1]) {\n          int temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n        }\n      }\n    }\n  }\n\n  public static void main(String[] args) {\n    int[] array = { 5, 2, 8, 3, 1 };\n    bubbleSort(array);\n    System.out.println(\"The sorted array is: \" + Arrays.toString(array));\n  }\n}\n</code></pre> <p>This code snippet defines an <code>ArraySorter</code> class with a <code>bubbleSort</code> method that takes an array of integers as input and sorts it in ascending order using the bubble sort algorithm. The <code>main</code> method demonstrates the usage of the <code>bubbleSort</code> method by sorting and printing the array { 5, 2, 8, 3, 1 }.</p>"},{"location":"java/snippets/van-de-hang-ngay/#finding-the-fibonacci-sequence","title":"Finding the Fibonacci Sequence","text":"<p>The Fibonacci sequence is a series of numbers in which each number is the sum of the two preceding ones, usually starting with 0 and 1.</p> <p>Here's a Java code snippet that generates the Fibonacci sequence up to a given number of terms:</p> <pre><code>public class FibonacciSequenceGenerator {\n  public static void generateFibonacci(int numTerms) {\n    int firstTerm = 0;\n    int secondTerm = 1;\n    System.out.print(firstTerm + \" \" + secondTerm);\n\n    for (int i = 2; i &lt; numTerms; i++) {\n      int nextTerm = firstTerm + secondTerm;\n      System.out.print(\" \" + nextTerm);\n      firstTerm = secondTerm;\n      secondTerm = nextTerm;\n    }\n  }\n\n  public static void main(String[] args) {\n    int numTerms = 10;\n    generateFibonacci(numTerms);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>FibonacciSequenceGenerator</code> class with a <code>generateFibonacci</code> method that takes the number of terms as input and generates the Fibonacci sequence up to that number of terms. The method uses a loop to calculate and print each term in the sequence. The <code>main</code> method demonstrates the usage of the <code>generateFibonacci</code> method by generating and printing the Fibonacci sequence with 10 terms.</p>"},{"location":"java/snippets/van-de-hang-ngay/#converting-strings-to-integers","title":"Converting Strings to Integers","text":"<p>This is often needed when dealing with user input or parsing data from external sources.</p> <p>Here's a Java code snippet that converts a string to an integer:</p> <pre><code>public class StringToIntConverter {\n  public static int convertStringToInt(String str) {\n    try {\n      return Integer.parseInt(str);\n    } catch (NumberFormatException e) {\n      throw new IllegalArgumentException(\"Invalid integer format\");\n    }\n  }\n\n  public static void main(String[] args) {\n    String str = \"123\";\n    int num = convertStringToInt(str);\n    System.out.println(\"The converted integer is: \" + num);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>StringToIntConverter</code> class with a <code>convertStringToInt</code> method that takes a string as input and uses the <code>parseInt</code> method from the <code>Integer</code> class to convert it to an integer. The method also handles the case where the string is not a valid integer format by throwing an <code>IllegalArgumentException</code>. The <code>main</code> method demonstrates the usage of the <code>convertStringToInt</code> method by converting and printing the string \"123\" as an integer.</p>"},{"location":"java/snippets/van-de-hang-ngay/#generating-random-numbers","title":"Generating Random Numbers","text":"<p>Generating random numbers is a common requirement in Java programming. The <code>java.util.Random</code> class provides methods for generating random numbers of different types.</p> <p>Here's a Java code snippet that generates a random number between a given range:</p> <pre><code>import java.util.Random;\n\npublic class RandomNumberGenerator {\n  public static int generateRandomNumber(int min, int max) {\n    Random random = new Random();\n    return random.nextInt(max - min + 1) + min;\n  }\n\n  public static void main(String[] args) {\n    int min = 1;\n    int max = 100;\n    int randomNumber = generateRandomNumber(min, max);\n    System.out.println(\"The generated random number is: \" + randomNumber);\n  }\n}\n</code></pre> <p>This code snippet imports the <code>java.util.Random</code> class and defines a <code>RandomNumberGenerator</code> class with a <code>generateRandomNumber</code> method that takes a minimum and maximum value and uses the <code>nextInt</code> method of the <code>Random</code> class to generate a random number within the specified range. The <code>main</code> method demonstrates the usage of the <code>generateRandomNumber</code> method by generating and printing a random number between 1 and 100.</p>"},{"location":"java/snippets/van-de-hang-ngay/#checking-if-a-string-is-palindrome","title":"Checking if a String is Palindrome","text":"<p>A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward.</p> <p>Here's a Java code snippet that checks if a given string is a palindrome:</p> <pre><code>public class PalindromeChecker {\n  public static boolean isPalindrome(String str) {\n    String reversed = new StringBuilder(str).reverse().toString();\n    return str.equals(reversed);\n  }\n\n  public static void main(String[] args) {\n    String word = \"racecar\";\n    boolean isPalindrome = isPalindrome(word);\n    System.out.println(word + \" is a palindrome? \" + isPalindrome);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>PalindromeChecker</code> class with an <code>isPalindrome</code> method that takes a string as input and uses a <code>StringBuilder</code> to reverse the string. The method then compares the original string with the reversed string to check if they are equal. The <code>main</code> method demonstrates the usage of the <code>isPalindrome</code> method by checking and printing whether the word \"racecar\" is a palindrome.</p>"},{"location":"java/snippets/van-de-hang-ngay/#getting-the-current-date-and-time","title":"Getting the Current Date and Time","text":"<p>Getting the current date and time is a common requirement in Java programming. The <code>java.util.Date</code> and <code>java.util.Calendar</code> classes provide methods for working with dates and times.</p> <p>Here's a Java code snippet that gets the current date and time:</p> <pre><code>import java.util.Date;\n\npublic class CurrentDateTimeGetter {\n  public static void main(String[] args) {\n    Date currentDate = new Date();\n    System.out.println(\"Current date and time: \" + currentDate);\n  }\n}\n</code></pre> <p>This code snippet imports the <code>java.util.Date</code> class and defines a <code>CurrentDateTimeGetter</code> class with a <code>main</code> method that creates a new <code>Date</code> object to represent the current date and time. The <code>main</code> method then prints the current date and time using the <code>toString</code> method of the <code>Date</code> class.</p>"},{"location":"java/snippets/van-de-hang-ngay/#removing-duplicates-from-an-array","title":"Removing Duplicates from an Array","text":"<p>There are various approaches to solve this problem, such as using a <code>Set</code> or creating a new array without the duplicates.</p> <p>Here's a Java code snippet that removes duplicates from an array:</p> <pre><code>import java.util.Arrays;\nimport java.util.LinkedHashSet;\n\npublic class ArrayDuplicateRemover {\n  public static int[] removeDuplicates(int[] array) {\n    LinkedHashSet&lt;Integer&gt; set = new LinkedHashSet&lt;&gt;();\n    for (int num : array) {\n      set.add(num);\n    }\n    int[] result = new int[set.size()];\n    int i = 0;\n    for (int num : set) {\n      result[i++] = num;\n    }\n    return result;\n  }\n\n  public static void main(String[] args) {\n    int[] array = { 1, 2, 3, 1, 4, 2, 5 };\n    int[] uniqueArray = removeDuplicates(array);\n    System.out.println(\"Array with duplicates: \" + Arrays.toString(array));\n    System.out.println(\"Array without duplicates: \" + Arrays.toString(uniqueArray));\n  }\n}\n</code></pre> <p>This code snippet imports the <code>java.util.Arrays</code> and <code>java.util.LinkedHashSet</code> classes and defines an <code>ArrayDuplicateRemover</code> class with a <code>removeDuplicates</code> method that takes an array of integers as input. The method uses a <code>LinkedHashSet</code> to store unique elements from the array while preserving the order. It then creates a new array with the unique elements and returns it. The <code>main</code> method demonstrates the usage of the <code>removeDuplicates</code> method by removing duplicates from an array and printing both the original and the resulting array.</p>"},{"location":"java/snippets/van-de-hang-ngay/#finding-the-length-of-a-string","title":"Finding the Length of a String","text":"<p>Finding the length of a string is a common operation in Java programming. The <code>length</code> method of the <code>String</code> class can be used to determine the number of characters in a string.</p> <p>Here's a Java code snippet that finds the length of a string:</p> <pre><code>public class StringLengthFinder {\n  public static int findLength(String str) {\n    return str.length();\n  }\n\n  public static void main(String[] args) {\n    String str = \"Hello, World!\";\n    int length = findLength(str);\n    System.out.println(\"The length of the string is: \" + length);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>StringLengthFinder</code> class with a <code>findLength</code> method that takes a string as input and uses the <code>length</code> method of the <code>String</code> class to find its length. The <code>main</code> method demonstrates the usage of the <code>findLength</code> method by finding and printing the length of the string \"Hello, World!\".</p>"},{"location":"java/snippets/van-de-hang-ngay/#checking-if-two-strings-are-anagrams","title":"Checking if Two Strings are Anagrams","text":"<p>An anagram is a word or phrase formed by rearranging the letters of another word or phrase.</p> <p>Here's a Java code snippet that checks if two strings are anagrams:</p> <pre><code>import java.util.Arrays;\n\npublic class AnagramChecker {\n  public static boolean areAnagrams(String str1, String str2) {\n    char[] charArray1 = str1.toLowerCase().toCharArray();\n    char[] charArray2 = str2.toLowerCase().toCharArray();\n\n    Arrays.sort(charArray1);\n    Arrays.sort(charArray2);\n\n    return Arrays.equals(charArray1, charArray2);\n  }\n\n  public static void main(String[] args) {\n    String word1 = \"listen\";\n    String word2 = \"silent\";\n    boolean areAnagrams = areAnagrams(word1, word2);\n    System.out.println(word1 + \" and \" + word2 + \" are anagrams? \" + areAnagrams);\n  }\n}\n</code></pre> <p>This code snippet imports the <code>java.util.Arrays</code> class and defines an <code>AnagramChecker</code> class with an <code>areAnagrams</code> method that takes two strings as input. The method converts the strings to lowercase and then converts them to character arrays. It then sorts the character arrays and uses the <code>equals</code> method of the <code>Arrays</code> class to check if they are equal. The <code>main</code> method demonstrates the usage of the <code>areAnagrams</code> method by checking and printing whether the words \"listen\" and \"silent\" are anagrams.</p>"},{"location":"java/snippets/van-de-hang-ngay/#calculating-the-power-of-a-number","title":"Calculating the Power of a Number","text":"<p>The power of a number represents how many times the number is multiplied by itself.</p> <p>Here's a Java code snippet that calculates the power of a given number:</p> <pre><code>public class PowerCalculator {\n  public static double calculatePower(double base, int exponent) {\n    if (exponent == 0) {\n      return 1;\n    } else if (exponent &gt; 0) {\n      double result = 1;\n      for (int i = 0; i &lt; exponent; i++) {\n        result *= base;\n      }\n      return result;\n    } else {\n      double result = 1;\n      for (int i = 0; i &gt; exponent; i--) {\n        result /= base;\n      }\n      return result;\n    }\n  }\n\n  public static void main(String[] args) {\n    double base = 2;\n    int exponent = 3;\n    double result = calculatePower(base, exponent);\n    System.out.println(base + \" raised to the power of \" + exponent + \" is: \" + result);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>PowerCalculator</code> class with a <code>calculatePower</code> method that takes a base number and an exponent as input and calculates the result of raising the base to the power of the exponent. The method uses a loop to perform the multiplication or division based on the sign of the exponent. The <code>main</code> method demonstrates the usage of the <code>calculatePower</code> method by calculating and printing the result of raising the number 2 to the power of 3.</p>"},{"location":"java/snippets/van-de-hang-ngay/#reversing-an-array","title":"Reversing an Array","text":"<p>There are multiple approaches to solve this problem, such as using two pointers or creating a new array.</p> <p>Here's a Java code snippet that reverses an array:</p> <pre><code>import java.util.Arrays;\n\npublic class ArrayReverser {\n  public static void reverseArray(int[] array) {\n    int left = 0;\n    int right = array.length - 1;\n\n    while (left &lt; right) {\n      int temp = array[left];\n      array[left] = array[right];\n      array[right] = temp;\n      left++;\n      right--;\n    }\n  }\n\n  public static void main(String[] args) {\n    int[] array = { 1, 2, 3, 4, 5 };\n    System.out.println(\"Array before reversing: \" + Arrays.toString(array));\n    reverseArray(array);\n    System.out.println(\"Array after reversing: \" + Arrays.toString(array));\n  }\n}\n</code></pre> <p>This code snippet imports the <code>java.util.Arrays</code> class and defines an <code>ArrayReverser</code> class with a <code>reverseArray</code> method that takes an array of integers as input and reverses its elements using two pointers. The <code>main</code> method demonstrates the usage of the <code>reverseArray</code> method by reversing and printing an array { 1, 2, 3, 4, 5 }.</p>"},{"location":"java/snippets/van-de-hang-ngay/#finding-the-minimum-number","title":"Finding the Minimum Number","text":"<p>You can iterate over the array elements and keep track of the minimum number found so far.</p> <p>Here's a Java code snippet that finds the minimum number in an array:</p> <pre><code>public class MinimumNumberFinder {\n  public static int findMinimum(int[] numbers) {\n    if (numbers.length == 0) {\n      throw new IllegalArgumentException(\"Array cannot be empty\");\n    }\n\n    int min = numbers[0];\n    for (int i = 1; i &lt; numbers.length; i++) {\n      if (numbers[i] &lt; min) {\n        min = numbers[i];\n      }\n    }\n    return min;\n  }\n\n  public static void main(String[] args) {\n    int[] numbers = { 5, 2, 8, 3, 1 };\n    int minimum = findMinimum(numbers);\n    System.out.println(\"The minimum number in the array is: \" + minimum);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>MinimumNumberFinder</code> class with a <code>findMinimum</code> method that takes an array of integers as input and iterates over the elements to find the minimum number. The <code>main</code> method demonstrates the usage of the <code>findMinimum</code> method by finding and printing the minimum number in the array { 5, 2, 8, 3, 1 }.</p>"},{"location":"java/snippets/van-de-hang-ngay/#converting-integers-to-strings","title":"Converting Integers to Strings","text":"<p>This is often needed when concatenating numbers with strings or when formatting output.</p> <p>Here's a Java code snippet that converts an integer to a string:</p> <pre><code>public class IntToStringConverter {\n  public static String convertIntToString(int num) {\n    return String.valueOf(num);\n  }\n\n  public static void main(String[] args) {\n    int num = 123;\n    String str = convertIntToString(num);\n    System.out.println(\"The converted string is: \" + str);\n  }\n}\n</code></pre> <p>This code snippet defines an <code>IntToStringConverter</code> class with a <code>convertIntToString</code> method that takes an integer as input and uses the <code>valueOf</code> method of the <code>String</code> class to convert it to a string. The <code>main</code> method demonstrates the usage of the <code>convertIntToString</code> method by converting and printing the integer 123 as a string.</p>"},{"location":"java/snippets/van-de-hang-ngay/#calculating-the-average-of-an-array","title":"Calculating the Average of an Array","text":"<p>You can iterate over the array elements and calculate the sum, then divide it by the number of elements.</p> <p>Here's a Java code snippet that calculates the average of an array:</p> <pre><code>public class ArrayAverageCalculator {\n  public static double calculateAverage(int[] array) {\n    if (array.length == 0) {\n      return 0;\n    }\n\n    int sum = 0;\n    for (int num : array) {\n      sum += num;\n    }\n    return (double) sum / array.length;\n  }\n\n  public static void main(String[] args) {\n    int[] array = { 5, 2, 8, 3, 1 };\n    double average = calculateAverage(array);\n    System.out.println(\"The average of the array is: \" + average);\n  }\n}\n</code></pre> <p>This code snippet defines an <code>ArrayAverageCalculator</code> class with a <code>calculateAverage</code> method that takes an array of integers as input and calculates its average by summing all the elements and dividing by the number of elements. The <code>main</code> method demonstrates the usage of the <code>calculateAverage</code> method by calculating and printing the average of the array { 5, 2, 8, 3, 1 }.</p>"},{"location":"java/snippets/van-de-hang-ngay/#checking-if-an-array-is-sorted","title":"Checking if an Array is Sorted","text":"<p>You can iterate over the array elements and compare adjacent elements to determine if they are in the correct order.</p> <p>Here's a Java code snippet that checks if an array is sorted in ascending order:</p> <pre><code>public class ArraySortChecker {\n  public static boolean isSorted(int[] array) {\n    for (int i = 1; i &lt; array.length; i++) {\n      if (array[i] &lt; array[i - 1]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  public static void main(String[] args) {\n    int[] array = { 1, 2, 3, 4, 5 };\n    boolean isSorted = isSorted(array);\n    System.out.println(\"Is the array sorted? \" + isSorted);\n  }\n}\n</code></pre> <p>This code snippet defines an <code>ArraySortChecker</code> class with an <code>isSorted</code> method that takes an array of integers as input and iterates over the elements to check if they are in ascending order. The <code>main</code> method demonstrates the usage of the <code>isSorted</code> method by checking and printing whether the array { 1, 2, 3, 4, 5 } is sorted.</p>"},{"location":"java/snippets/van-de-hang-ngay/#converting-strings-to-doubles","title":"Converting Strings to Doubles","text":"<p>This is often needed when dealing with user input or parsing data from external sources.</p> <p>Here's a Java code snippet that converts a string to a double:</p> <pre><code>public class StringToDoubleConverter {\n  public static double convertStringToDouble(String str) {\n    try {\n      return Double.parseDouble(str);\n    } catch (NumberFormatException e) {\n      throw new IllegalArgumentException(\"Invalid double format\");\n    }\n  }\n\n  public static void main(String[] args) {\n    String str = \"3.14\";\n    double num = convertStringToDouble(str);\n    System.out.println(\"The converted double is: \" + num);\n  }\n}\n</code></pre> <p>This code snippet defines a <code>StringToDoubleConverter</code> class with a <code>convertStringToDouble</code> method that takes a string as input and uses the <code>parseDouble</code> method of the <code>Double</code> class to convert it to a double. The method also handles the case where the string is not a valid double format by throwing an <code>IllegalArgumentException</code>. The <code>main</code> method demonstrates the usage of the <code>convertStringToDouble</code> method by converting and printing the string \"3.14\" as a double.</p>"},{"location":"java/snippets/van-de-hang-ngay/#searching-for-an-element-in-an-array","title":"Searching for an Element in an Array","text":"<p>You can iterate over the array elements and compare each element with the target element.</p> <p>Here's a Java code snippet that searches for an element in an array:</p> <pre><code>public class ArraySearcher {\n  public static boolean searchElement(int[] array, int target) {\n    for (int num : array) {\n      if (num == target) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public static void main(String[] args) {\n    int[] array = { 5, 2, 8, 3, 1 };\n    int target = 8;\n    boolean found = searchElement(array, target);\n    System.out.println(\"Is \" + target + \" present in the array? \" + found);\n  }\n}\n</code></pre> <p>This code snippet defines an <code>ArraySearcher</code> class with a <code>searchElement</code> method that takes an array of integers and a target number as input. The method iterates over the elements of the array and checks if any of them match the target number. If a match is found, it returns true; otherwise, it returns false. The <code>main</code> method demonstrates the usage of the <code>searchElement</code> method by searching for the number 8 in the array { 5, 2, 8, 3, 1 }.</p>"},{"location":"java/snippets/van-de-hang-ngay/#best-practices-for-using-java-code-snippets","title":"Best Practices for Using Java Code Snippets","text":"<p>When using Java code snippets, it's important to follow best practices to ensure code readability, maintainability, and performance. Here are some best practices for using Java code snippets:</p>"},{"location":"java/snippets/van-de-hang-ngay/#use-descriptive-variable-and-method-namess","title":"Use Descriptive Variable and Method Namess","text":"<p>Using meaningful variable and method names is essential for code readability. Avoid using single-letter variable names or generic names like <code>temp</code> or <code>result</code>. Instead, use descriptive names that accurately represent the purpose of the variable or method.</p> <p>Example:</p> <pre><code>// Bad\nint x = 5;\n\n// Good\nint numberOfStudents = 5;\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#follow-coding-conventionss","title":"Follow Coding Conventionss","text":"<p>Following coding conventions improves code consistency and makes it easier for other developers to read and understand your code. Use proper indentations, consistent naming conventions (e.g., camel case for variables and methods, uppercase for constants), and adhere to the Java naming conventions.</p> <p>Example:</p> <pre><code>// Bad\npublic static void calculateaverage(int[] numbers) {\n    // code here\n}\n\n// Good\npublic static void calculateAverage(int[] numbers) {\n    // code here\n}\n</code></pre> <p>Comments should be used to explain complex logic or provide additional information that is not obvious from the code itself. Avoid unnecessary or redundant comments, as they can clutter the code and make it harder to read.</p> <p>Example:</p> <pre><code>// Bad\nint x = 5; // initialize x to 5\n\n// Good\nint numberOfStudents = 5;\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#handle-exceptions-properlyy","title":"Handle Exceptions Properlyy","text":"<p>When dealing with exceptions, it's important to handle them properly to avoid unexpected program behavior or crashes. Use try-catch blocks to catch and handle exceptions, or throw exceptions when appropriate.</p> <p>Example:</p> <pre><code>// Bad\npublic static int divide(int a, int b) {\n    return a / b;\n}\n\n// Good\npublic static int divide(int a, int b) {\n    try {\n        return a / b;\n    } catch (ArithmeticException e) {\n        throw new IllegalArgumentException(\"Cannot divide by zero\");\n    }\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#use-meaningful-class-and-method-modifierss","title":"Use Meaningful Class and Method Modifierss","text":"<p>Using appropriate class and method modifiers helps improve code clarity and maintainability. Use <code>public</code>, <code>private</code>, and <code>protected</code> modifiers to control the visibility of classes and methods, and use <code>final</code> and <code>static</code> modifiers when appropriate.</p> <p>Example:</p> <pre><code>// Bad\nclass MyClass {\n    // code here\n}\n\n// Good\npublic final class MyClass {\n    // code here\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#test-code-snippetss","title":"Test Code Snippetss","text":"<p>Before using code snippets in production, it's important to thoroughly test them to ensure they work as intended and handle edge cases correctly. Write unit tests to cover different scenarios and validate the expected behavior of the code.</p> <p>Example:</p> <pre><code>@Test\npublic void testFindMaximum() {\n    int[] numbers = { 5, 2, 8, 3, 1 };\n    assertEquals(8, MaximumNumberFinder.findMaximum(numbers));\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#optimizing-java-code-snippets-for-everyday-problems","title":"Optimizing Java Code Snippets for Everyday Problems","text":"<p>Optimizing Java code snippets can improve performance and efficiency, especially for code that is executed frequently or deals with large datasets. Here are some techniques to optimize Java code snippets for everyday problems:</p>"},{"location":"java/snippets/van-de-hang-ngay/#use-efficient-data-structuress","title":"Use Efficient Data Structuress","text":"<p>Choosing the right data structure can significantly impact the performance of your code. For example, use <code>ArrayList</code> instead of <code>LinkedList</code> when frequent random access is required, and use <code>HashMap</code> instead of <code>ArrayList</code> when efficient lookup is needed.</p> <p>Example:</p> <pre><code>// Bad\nLinkedList&lt;Integer&gt; list = new LinkedList&lt;&gt;();\nlist.add(1);\nlist.add(2);\nlist.add(3);\n\n// Good\nArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;();\nlist.add(1);\nlist.add(2);\nlist.add(3);\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#minimize-memory-usagee","title":"Minimize Memory Usagee","text":"<p>Optimizing memory usage can improve the performance of your code, especially when dealing with large datasets. Avoid creating unnecessary objects or using excessive memory, and release resources as soon as they are no longer needed.</p> <p>Example:</p> <pre><code>// Bad\nfor (int i = 0; i &lt; 1000000; i++) {\n    String str = \"Value: \" + i;\n    // code here\n}\n\n// Good\nfor (int i = 0; i &lt; 1000000; i++) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(\"Value: \").append(i);\n    String str = sb.toString();\n    // code here\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#avoid-unnecessary-operationss","title":"Avoid Unnecessary Operationss","text":"<p>Avoid performing unnecessary operations or calculations that can be avoided. Simplify your code by removing redundant statements or computations.</p> <p>Example:</p> <pre><code>// Bad\nfor (int i = 0; i &lt; array.length; i++) {\n    int num = array[i];\n    if (num &gt; 0) {\n        positiveCount++;\n    } else if (num &lt; 0) {\n        negativeCount++;\n    } else {\n        zeroCount++;\n    }\n}\n\n// Good\nfor (int num : array) {\n    if (num &gt; 0) {\n        positiveCount++;\n    } else if (num &lt; 0) {\n        negativeCount++;\n    } else {\n        zeroCount++;\n    }\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#use-efficient-algorithmss","title":"Use Efficient Algorithmss","text":"<p>Choosing efficient algorithms can significantly impact the performance of your code. For example, use quicksort instead of bubblesort for sorting large arrays, and use binary search instead of linear search for finding elements in sorted arrays.</p> <p>Example:</p> <pre><code>// Bad\nfor (int i = 0; i &lt; array.length; i++) {\n    if (array[i] == target) {\n        return i;\n    }\n}\n\n// Good\nint low = 0;\nint high = array.length - 1;\nwhile (low &lt;= high) {\n    int mid = (low + high) / 2;\n    if (array[mid] == target) {\n        return mid;\n    } else if (array[mid] &lt; target) {\n        low = mid + 1;\n    } else {\n        high = mid - 1;\n    }\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#avoid-unnecessary-string-concatenationn","title":"Avoid Unnecessary String Concatenationn","text":"<p>String concatenation can be expensive, especially when performed repeatedly in loops. Use <code>StringBuilder</code> or <code>StringBuffer</code> instead of concatenating strings using the <code>+</code> operator.</p> <p>Example:</p> <pre><code>// Bad\nString result = \"\";\nfor (String str : strings) {\n    result += str;\n}\n\n// Good\nStringBuilder sb = new StringBuilder();\nfor (String str : strings) {\n    sb.append(str);\n}\nString result = sb.toString();\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#libraries-and-frameworks-for-java-code-snippets","title":"Libraries and Frameworks for Java Code Snippets","text":"<p>Java has a rich ecosystem of libraries and frameworks that provide ready-to-use code snippets for various purposes. Here are some popular libraries and frameworks for Java:</p>"},{"location":"java/snippets/van-de-hang-ngay/#apache-commonss","title":"Apache Commonss","text":"<p>Apache Commons is a collection of reusable Java components that provide implementations of common utility functions, data structures, and algorithms. It includes libraries for string manipulation, file handling, math operations, and more.</p> <p>Link: Apache Commons</p>"},{"location":"java/snippets/van-de-hang-ngay/#guavaa","title":"Guavaa","text":"<p>Guava is a set of core libraries for Java that provide useful utility classes and data structures not found in the standard JDK. It includes libraries for collections, caching, functional programming, concurrency, and more.</p> <p>Link: Guava</p>"},{"location":"java/snippets/van-de-hang-ngay/#junitt","title":"JUnitt","text":"<p>JUnit is a unit testing framework for Java that provides a simple and efficient way to write and run tests for your code. It includes annotations, assertions, and test runners to facilitate the testing process.</p> <p>Link: JUnit</p>"},{"location":"java/snippets/van-de-hang-ngay/#spring-frameworkk","title":"Spring Frameworkk","text":"<p>Spring Framework is a comprehensive framework for Java that provides support for building enterprise-grade applications. It includes libraries for dependency injection, MVC web development, data access, security, and more.</p> <p>Link: Spring Framework</p>"},{"location":"java/snippets/van-de-hang-ngay/#jacksonn","title":"Jacksonn","text":"<p>Jackson is a high-performance JSON processing library for Java that provides methods for reading and writing JSON data. It includes annotations and converters for easy serialization and deserialization of Java objects.</p> <p>Link: Jackson</p>"},{"location":"java/snippets/van-de-hang-ngay/#avoiding-common-mistakes-with-java-code-snippets","title":"Avoiding Common Mistakes with Java Code Snippets","text":"<p>When using Java code snippets, it's important to avoid common mistakes that can lead to errors or inefficient code. Here are some common mistakes to avoid:</p>"},{"location":"java/snippets/van-de-hang-ngay/#not-handling-exceptions-properlyy","title":"Not Handling Exceptions Properlyy","text":"<p>Failing to handle exceptions can result in unexpected program behavior or crashes. Always handle exceptions by using try-catch blocks or throwing them when appropriate.</p> <p>Example:</p> <pre><code>// Bad\npublic static int divide(int a, int b) {\n    return a / b; // May throw ArithmeticException\n}\n\n// Good\npublic static int divide(int a, int b) {\n    try {\n        return a / b;\n    } catch (ArithmeticException e) {\n        throw new IllegalArgumentException(\"Cannot divide by zero\");\n    }\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#using-inefficient-data-structures-or-algorithmss","title":"Using Inefficient Data Structures or Algorithmss","text":"<p>Choosing inefficient data structures or algorithms can lead to poor performance. Always choose the appropriate data structure or algorithm for the problem at hand.</p> <p>Example:</p> <pre><code>// Bad\nLinkedList&lt;Integer&gt; list = new LinkedList&lt;&gt;();\nlist.add(1);\nlist.add(2);\nlist.add(3);\n\n// Good\nArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;();\nlist.add(1);\nlist.add(2);\nlist.add(3);\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#not-testing-code-snippetss","title":"Not Testing Code Snippetss","text":"<p>Failing to test code snippets can result in bugs or unexpected behavior. Always write unit tests to cover different scenarios and validate the expected behavior of your code.</p> <p>Example:</p> <pre><code>@Test\npublic void testFindMaximum() {\n    int[] numbers = { 5, 2, 8, 3, 1 };\n    assertEquals(8, MaximumNumberFinder.findMaximum(numbers));\n}\n</code></pre>"},{"location":"java/snippets/van-de-hang-ngay/#ignoring-coding-conventionss","title":"Ignoring Coding Conventionss","text":"<p>Ignoring coding conventions can make your code harder to read and maintain. Always follow coding conventions, such as proper indentations, consistent naming conventions, and class/method modifiers.</p> <p>Example:</p> <pre><code>// Bad\npublic static void calculateaverage(int[] numbers) {\n    // code here\n}\n\n// Good\npublic static void calculateAverage(int[] numbers) {\n    // code here\n}\n</code></pre>"},{"location":"java/spring-boot/","title":"H\u01b0\u1edbng d\u1eabn Spring Boot","text":"<p>M\u00ecnh l\u01b0u l\u1ea1i m\u1ed9t ph\u1ea7n n\u1ed9i dung trang c\u1ee7a loda-kun v\u1ec1, do trang \u0111\u00e3 kh\u00f4ng c\u00f2n n\u1eefa n\u00ean \u0111\u00e2y l\u00e0 b\u1ea3n Backup l\u1ea1i. B\u1ea1n c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0o trang Github c\u1ee7a t\u00e1c gi\u1ea3 g\u1ed1c. C\u00e1c b\u00e0i vi\u1ebft trong \u0111\u00e2y \u0111\u00e3 \u0111\u01b0\u1ee3c s\u1eeda l\u1ea1i v\u00e0 t\u1ed1i \u01b0u v\u1ec1 m\u1eb7t n\u1ed9i dung \u0111\u1ec3 thu\u1eadn ti\u1ec7n cho vi\u1ec7c s\u1eed d\u1ee5ng c\u00e1 nh\u00e2n. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc to\u00e0n b\u1ed9 n\u1ed9i dung kh\u00f3a h\u1ecdc n\u00e0y tr\u00ean viblo c\u1ee7a Nguy\u1ec5n Ho\u00e0ng Nam.</p> <p>M\u1ed9t framework m\u1ea1nh m\u1ebd m\u00e0 b\u1ea5t k\u00ec Java Developer n\u00e0o c\u0169ng ph\u1ea3i bi\u1ebft! B\u1eaft \u0111\u1ea7u n\u00e0o! Ph\u1ea7n source code c\u00f3 th\u1ec3 \u0111\u1ecdc tr\u00ean loda-kun/spring-boot-learning</p> <p>Ch\u00fac c\u00e1c b\u1ea1n h\u1ecdc t\u1eadp hi\u1ec7u qu\u1ea3!</p>"},{"location":"java/spring-boot/core/","title":"Kh\u00e1i ni\u1ec7m tightly-coupled (li\u00ean k\u1ebft r\u00e0ng bu\u1ed9c) v\u00e0 c\u00e1ch \u0111\u1ec3 loosely-coupled","text":""},{"location":"java/spring-boot/core/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<ul> <li>Tight-coupling hay \"li\u00ean k\u1ebft r\u00e0ng bu\u1ed9c\" l\u00e0 m\u1ed9t kh\u00e1i ni\u1ec7m trong Java \u00e1m ch\u1ec9 vi\u1ec7c m\u1ed1i quan h\u1ec7 gi\u1eefa c\u00e1c Class qu\u00e1 ch\u1eb7t ch\u1ebd. Khi y\u00eau c\u1ea7u thay \u0111\u1ed5i logic hay m\u1ed9t class b\u1ecb l\u1ed7i s\u1ebd d\u1eabn t\u1edbi \u1ea3nh h\u01b0\u1edfng t\u1edbi to\u00e0n b\u1ed9 c\u00e1c Class kh\u00e1c.</li> <li>loosely-coupled l\u00e0 c\u00e1ch \u00e1m ch\u1ec9 vi\u1ec7c l\u00e0m gi\u1ea3m b\u1edbt s\u1ef1 ph\u1ee5 thu\u1ed9c gi\u1eefa c\u00e1c Class v\u1edbi nhau.</li> </ul>"},{"location":"java/spring-boot/core/#vi-du-de-hieu","title":"V\u00ed d\u1ee5 d\u1ec5 hi\u1ec3u","text":"<p>L\u1ea5y m\u1ed9t v\u00ed d\u1ee5:</p> <p>B\u1ea1n c\u00f3 m\u1ed9t Class th\u1ef1c thi m\u1ed9t nhi\u1ec7m v\u1ee5 c\u1ef1c k\u1ef3 ph\u1ee9c t\u1ea1p, v\u00e0 m\u1ed9t trong s\u1ed1 \u0111\u00f3 l\u00e0 vi\u1ec7c s\u1eafp x\u1ebfp d\u1eef li\u1ec7u tr\u01b0\u1edbc khi x\u1eed l\u00fd.</p>"},{"location":"java/spring-boot/core/#cach-code-level-1","title":"C\u00e1ch code level 1:","text":"<pre><code>public class BubbleSortAlgorithm{\n\n    public void sort(int[] array) {\n        // TODO: Add your logic here\n        System.out.println(\"\u0110\u00e3 s\u1eafp x\u1ebfp b\u1eb1ng thu\u1eadt to\u00e1n sx n\u1ed5i b\u1ecdt\");\n    }\n}\n\npublic class VeryComplexService {\n    private BubbleSortAlgorithm bubbleSortAlgorithm = new BubbleSortAlgorithm();\n\n    public VeryComplexService(){\n\n    }\n\n    public void complexBusiness(int array[]){\n        bubbleSortAlgorithm.sort(array);\n        // TODO: more logic here\n    }\n}\n</code></pre> <p>V\u1edbi c\u00e1ch l\u00e0m \u1edf tr\u00ean, <code>VeryComplexService</code> \u0111\u00e3 ho\u00e0n thi\u1ec7n \u0111\u01b0\u1ee3c nhi\u1ec7m v\u1ee5, tuy nhi\u00ean, khi c\u00f3 y\u00eau c\u1ea7u thay \u0111\u1ed5i thu\u1eadt to\u00e1n s\u1eafp x\u1ebfp sang <code>QuickSort</code> th\u00ec nghe v\u1ebb ch\u00fang ta s\u1ebd ph\u1ea3i s\u1eeda l\u1ea1i ho\u00e0n to\u00e0n c\u1ea3 2 Class tr\u00ean.</p> <p>Ngo\u00e0i ra <code>BubbleSortAlgorithm</code> s\u1ebd ch\u1ec9 t\u1ed3n t\u1ea1i n\u1ebfu <code>VeryComplexService</code> t\u1ed3n t\u1ea1i, v\u00ec <code>VeryComplexService</code> t\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng <code>BubbleSortAlgorithm</code> b\u00ean trong n\u00f3 (hay n\u00f3i c\u00e1ch kh\u00e1c l\u00e0 s\u1ef1 s\u1ed1ng ch\u1ebft c\u1ee7a <code>BubbleSortAlgorithm</code> s\u1ebd do <code>VeryComplexService</code> quy\u1ebft \u0111\u1ecbnh), theo nh\u01b0 c\u00e1ch implement n\u00e0y, n\u00f3 l\u00e0 li\u00ean k\u1ebft r\u1ea5t ch\u1eb7t v\u1edbi nhau.</p>"},{"location":"java/spring-boot/core/#cach-lam-level-2","title":"C\u00e1ch l\u00e0m level 2:","text":"<pre><code>public interface SortAlgorithm {\n    /**\n     * S\u1eafp x\u1ebfp m\u1ea3ng \u0111\u1ea7u v\u00e0o\n     * @param array\n     */\n    public void sort(int array[]);\n}\n\npublic class BubbleSortAlgorithm implements SortAlgorithm{\n\n    @Override\n    public void sort(int[] array) {\n        // TODO: Add your logic here\n        System.out.println(\"\u0110\u00e3 s\u1eafp x\u1ebfp b\u1eb1ng thu\u1eadt to\u00e1n sx n\u1ed5i b\u1ecdt\");\n    }\n}\n\npublic class VeryComplexService {\n    private SortAlgorithm sortAlgorithm;\n    public VeryComplexService(){\n        sortAlgorithm = new BubbleSortAlgorithm();\n    }\n\n    public void complexBusiness(int array[]){\n        sortAlgorithm.sort(array);\n        // TODO: more logic here\n    }\n}\n</code></pre> <p>V\u1edbi c\u00e1ch l\u00e0m n\u00e0y, <code>VeryComplexService</code> s\u1ebd ch\u1ec9 quan h\u1ec7 v\u1edbi m\u1ed9t interface <code>SortAlgorithm</code>. V\u1edbi c\u00e1ch n\u00e0y th\u00ec m\u1ed7i quan h\u1ec7 gi\u1ea3m b\u1edbt s\u1ef1 li\u00ean k\u1ebft, nh\u01b0ng n\u00f3 kh\u00f4ng thay \u0111\u1ed5i \u0111\u01b0\u1ee3c vi\u1ec7c thu\u1eadt to\u00e1n v\u1eabn \u0111ang l\u00e0 <code>BubbleSortAlgorithm</code>.</p>"},{"location":"java/spring-boot/core/#cach-lam-level-3","title":"C\u00e1ch l\u00e0m level 3:","text":"<pre><code>public interface SortAlgorithm {\n    /**\n     * S\u1eafp x\u1ebfp m\u1ea3ng \u0111\u1ea7u v\u00e0o\n     * @param array\n     */\n    public void sort(int array[]);\n}\n\npublic class BubbleSortAlgorithm implements SortAlgorithm{\n\n    @Override\n    public void sort(int[] array) {\n        // TODO: Add your logic here\n        System.out.println(\"\u0110\u00e3 s\u1eafp x\u1ebfp b\u1eb1ng thu\u1eadt to\u00e1n sx n\u1ed5i b\u1ecdt\");\n    }\n}\n\npublic class QuicksortAlgorithm implements SortAlgorithm {\n    @Override\n    public void sort(int[] array) {\n        // TODO: Add your logic here\n        System.out.println(\"\u0110\u00e3 s\u1eafp x\u1ebfp b\u1eb1ng thu\u1eadt sx nhanh\");\n\n    }\n}\n\npublic class VeryComplexService {\n    private SortAlgorithm sortAlgorithm;\n    public VeryComplexService(SortAlgorithm sortAlgorithm){\n        this.sortAlgorithm = sortAlgorithm;\n    }\n\n    public void complexBusiness(int array[]){\n        sortAlgorithm.sort(array);\n        // TODO: more logic here\n    }\n}\n\npublic static void main(String[] args) {\n    SortAlgorithm bubbleSortAlgorithm = new BubbleSortAlgorithm();\n    SortAlgorithm quickSortAlgorithm = new QuicksortAlgorithm();\n    VeryComplexService business1 = new VeryComplexService(bubbleSortAlgorithm);\n    VeryComplexService business2 = new VeryComplexService(quickSortAlgorithm);\n}\n</code></pre> <p>C\u00e1ch th\u1ee9 ba n\u00e0y c\u0169ng l\u00e0 c\u00e1ch l\u00e0m ph\u1ed5 bi\u1ec3n nh\u1ea5t. M\u1ed1i li\u00ean h\u1ec7 gi\u1eefa 2 Class \u0111\u00e3 \"l\u1ecfng l\u1ebbo\" h\u01a1n tr\u01b0\u1edbc r\u1ea5t nhi\u1ec1u. <code>VeryComplexService</code> s\u1ebd kh\u00f4ng quan t\u00e2m t\u1edbi vi\u1ec7c thu\u1eadt to\u00e1n s\u1eafp x\u00e9p l\u00e0 g\u00ec n\u1eefa, m\u00e0 ch\u1ec9 c\u1ea7n t\u1eadp trung v\u00e0o nghi\u1ec7p v\u1ee5. C\u00f2n <code>SortAlgorithm</code> s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o t\u1eeb b\u00ean ngo\u00e0i t\u00f9y theo nhu c\u1ea7u s\u1eed d\u1ee5ng.</p>"},{"location":"java/spring-boot/core/#dependency-injection","title":"Dependency Injection","text":"<p>Sau khi b\u1ea1n \u0111\u00e3 n\u1eafm \u0111\u01b0\u1ee3c 2 kh\u00e1i ni\u1ec7m tight-coupling v\u00e0 loosely-coupled th\u00ec s\u1ebd c\u00f3 th\u1ec3 hi\u1ec3u d\u1ec5 d\u00e0ng kh\u00e1i ni\u1ec7m Dependency Injection. M\u1ed9t trong nh\u1eefng nh\u00e2n t\u1ed1 ch\u00ednh gi\u00fap cu\u1ed9c \u0111\u1eddi l\u1eadp tr\u00ecnh Java c\u1ee7a b\u1ea1n tr\u1edf n\u00ean t\u01b0\u01a1i s\u00e1ng h\u01a1n.</p>"},{"location":"java/spring-boot/core/#giai-thich-dependency-injection-di-va-ioc","title":"Gi\u1ea3i th\u00edch Dependency Injection (DI) v\u00e0 IoC","text":"<p>Nh\u01b0ng kh\u00f4ng ph\u1ea3i d\u00f9ng qu\u1ea3 minh h\u1ecda c\u1ee7a Loda =)).</p>"},{"location":"java/spring-boot/core/#dependency-injection-di","title":"Dependency Injection (DI)","text":"<p>Trong t\u00e0i li\u1ec7u c\u00f3 n\u00f3i th\u1ebf n\u00e0y: Dependency Injection is a design pattern,.... Th\u1ebf th\u00ec b\u1ea1n c\u00f3 th\u1ec3 hi\u1ec3u n\u00f4m na n\u00f3 l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p l\u1eadp tr\u00ecnh. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 v\u00ed d\u1ee5 (Khum th\u00edch v\u00ed d\u1ee5 c\u1ee7a Loda n\u00ean vi\u1ebft l\u1ea1i ch\u00fat):</p> <pre><code>public class BoDoi {\n    private AK47 gun; // M\u1ed7i ch\u00fa b\u1ed9 \u0111\u1ed9i s\u1ebd c\u1ea7m AK47 khi \u0111i ra ngo\u00e0i ch\u1eb3ng h\u1ea1n\n    public BoDoi(){\n      gun = new AK47(); // Khi anh b\u1ed9 \u0111\u1ed9i ra ngo\u00e0i, anh s\u1ebd v\u00e1c theo kh\u1ea9u AK47\n    }\n}\n</code></pre> <p>Tr\u01b0\u1edbc h\u1ebft, qua \u0111o\u1ea1n code n\u00e0y, b\u1ea1n s\u1ebd th\u1ea5y l\u00e0 khi b\u1ea1n t\u1ea1o ra m\u1ed9t anh <code>BoDoi</code>, b\u1ea1n s\u1ebd t\u1ea1o ra th\u00eam 1 kh\u1ea9u <code>AK47</code> \u0111i k\u00e8m v\u1edbi anh \u1ea5y. L\u00fac n\u00e0y,<code>AK47</code> t\u1ed3n t\u1ea1i mang \u00fd ngh\u0129a l\u00e0 dependency (ph\u1ee5 thu\u1ed9c) c\u1ee7a <code>BoDoi</code>.</p> <p>Khi kh\u1edfi t\u1ea1o thu\u1ed9c t\u00ednh nh\u01b0 n\u00e0y, b\u1ea1n v\u00f4 t\u00ecnh t\u1ea1o ra m\u1ed9t \u0111i\u1ec3m th\u1eaft n\u00fat trong ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a m\u00ecnh, gi\u1ea3 s\u1eed, <code>BoDoi</code> mu\u1ed1n c\u1ea7m M4A1 hay AWP ho\u1eb7c c\u1ea7n g\u00ec c\u1ea7m s\u00fang khi \u0111i mua bia c\u01a1 ch\u1ee9? B\u1ea1n s\u1ebd ph\u1ea3i thay class <code>AK47</code> th\u00e0nh <code>M4A1</code> hay <code>TayKh\u00f4ng</code> \u01b0?</p> <p>Hay nguy hi\u1ec3m h\u01a1n, kh\u1ea9u <code>AK47</code> b\u1ecb h\u1ecfng? (code l\u1edbp <code>AK47</code> kh\u00f4ng ho\u1ea1t \u0111\u1ed9ng?) n\u00f3 s\u1ebd \u1ea3nh h\u01b0\u1edfng tr\u1ef1c ti\u1ebfp t\u1edbi ch\u00fa b\u1ed9 \u0111\u1ed9i <code>BoDoi</code>.</p> <p>V\u1ea5n \u0111\u1ec1 l\u00e0 \u1edf \u0111\u00f3, nguy\u00ean t\u1eafc l\u00e0:</p> <p>C\u00e1c Class kh\u00f4ng n\u00ean ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1c k\u1ebf th\u1eeba c\u1ea5p th\u1ea5p, m\u00e0 n\u00ean ph\u1ee5 thu\u1ed9c v\u00e0o Abstraction (l\u1edbp tr\u1eebu t\u01b0\u1ee3ng).</p> <p>Nghe h\u01a1i kh\u00f3 hi\u1ec3u. B\u00e2y gi\u1edd m\u00ecnh thay \u0111o\u1ea1n code nh\u01b0 n\u00e0y:</p> <pre><code>// M\u1ed9t interface cho vi\u1ec7c d\u00f9ng s\u00fang\npublic interface EquipGun {\n  public void equip();\n}\n\n// M\u1ed9t object c\u1ea5p th\u1ea5p, implement c\u1ee7a EquipGun\npublic class AK47 implements EquipGun {\n  public void equip() {\n    System.out.println(\"\u0110\u00e3 \u0111eo AK47\");\n  }\n}\n\n// B\u00e2y gi\u1edd BoDoi ch\u1ec9 ph\u1ee5 thu\u1ed9c v\u00e0o EquipGun. n\u1ebfu mu\u1ed1n thay \u0111\u1ed5i s\u00fang c\u1ee7a anh \u1ea5y, ch\u00fang ta ch\u1ec9 c\u1ea7n cho EquipGun m\u1ed9t th\u1ec3 hi\u1ec7n m\u1edbi.\n\npublic class BoDoi {\n    private EquipGun equipGun;\n    public BoDoi() {\n      equipGun = new AK47();\n    }\n}\n</code></pre> <p>T\u1edbi \u0111\u00e2y, ch\u00fang ta m\u1edbi ch\u1ec9 <code>Abtract</code> h\u00f3a thu\u1ed9c t\u00ednh c\u1ee7a <code>BoDoi</code> m\u00e0 th\u00f4i, c\u00f2n th\u1ef1c t\u1ebf, <code>BoDoi</code> v\u1eabn \u0111ang b\u1ecb g\u1eafn v\u1edbi m\u1ed9t kh\u1ea9u <code>AK47</code> duy nh\u1ea5t. V\u1eady mu\u1ed1n thay s\u00fang cho anh \u1ea5y, b\u1ea1n ph\u1ea3i l\u00e0m nh\u01b0 n\u00e0o.</p> <p>Ph\u1ea3i s\u1eeda <code>code</code> th\u00eam ch\u00fat n\u1eefa:</p> <pre><code>public class BoDoi{\n    private EquipGun gun;\n    public BoDoi(EquipGun anything){\n      this.gun = anything // T\u1ea1o ra m\u1ed9t anh BoDoi, v\u1edbi s\u00fang t\u00f9y bi\u1ebfn\n      // Kh\u00f4ng b\u1ecb ph\u1ee5 thu\u1ed9c qu\u00e1 nhi\u1ec1u v\u00e0o th\u1eddi \u0111i\u1ec3m kh\u1edfi t\u1ea1o, hay code.\n    }\n}\n\npublic class Main {\n  public static void main(String[] args) {\n    EquipGun AK47 = new AK47(); // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng AK47 \u1edf ngo\u00e0i \u0111\u1ed1i t\u01b0\u1ee3ng\n    BoDoi truongAnhNgoc = new BoDoi(AK47); // Cho anh \u0111eo s\u00fang khi \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\n  }\n}\n</code></pre> <p>V\u1edbi \u0111o\u1ea1n code \u1edf tr\u00ean, ch\u00fang ta \u0111\u00e3_g\u1ea7n nh\u01b0 t\u00e1ch \u0111\u01b0\u1ee3c <code>AK47</code> ra ho\u00e0n to\u00e0n kh\u1ecfi <code>BoDoi</code>. \u0111i\u1ec1u n\u00e0y l\u00e0m gi\u1ea3m s\u1ef1 ph\u1ee5 thu\u1ed9c gi\u1eefa<code>BoDoi</code>v\u00e0<code>AK47</code>. M\u00e0 t\u0103ng t\u00ednh t\u00f9y bi\u1ebfn, linh ho\u1ea1t cho<code>code</code>.</p> <p>B\u00e2y gi\u1edd <code>BoDoi</code> s\u1ebd ho\u1ea1t \u0111\u1ed9ng v\u1edbi <code>EquipGun</code> m\u00e0 th\u00f4i. V\u00e0 <code>EquipGun</code> \u1edf \u0111\u00e2u ra? Ch\u00fang ta t\u1ea1o ra v\u00e0 \u0111\u01b0a n\u00f3 v\u00e0o <code>(Inject)</code> anh <code>BoDoi</code>.</p> <p>Kh\u00e1i ni\u1ec7m <code>Dependency Injection</code> t\u1eeb \u0111\u00e2y m\u00e0 ra~</p> <p>Dependency Injection l\u00e0 vi\u1ec7c c\u00e1c Object n\u00ean ph\u1ee5 thu\u1ed9c v\u00e0o c\u00e1c Abstract Class v\u00e0 th\u1ec3 hi\u1ec7n chi ti\u1ebft c\u1ee7a n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c Inject v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng l\u00fac runtime.</p> <p>B\u00e2y gi\u1edd mu\u1ed1n <code>BoDoi</code> d\u00f9ng s\u00fang g\u00ec kh\u00e1c, b\u1ea1n ch\u1ec9 c\u1ea7n t\u1ea1o m\u1ed9t Class k\u1ebf th\u1eeba <code>EquipGun</code> v\u00e0 Inject (d\u1ecbch l\u00e0 Ti\u00eam v\u00e0o c\u0169ng \u0111\u01b0\u1ee3c) n\u00f3 v\u00e0o <code>BoDoi</code> l\u00e0 xong!</p> <p>C\u00e1c c\u00e1ch \u0111\u1ec3 Inject dependency v\u00e0o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 th\u1ec3 k\u1ec3 \u0111\u1ebfn nh\u01b0 sau:</p> <ul> <li>Constructor Injection: C\u00e1i n\u00e0y ch\u00ednh l\u00e0 v\u00ed d\u1ee5 c\u1ee7a m\u00ecnh, ti\u00eam dependency ngay v\u00e0o<code>Contructor</code> cho ti\u1ec7n.</li> <li>Setter Injection:  X\u00e0i <code>BoDoi.setEquipGun(new P2000())</code> (Round \u0111\u1ea7u ch\u1ec9 c\u1ea7n P2000 th\u00f4i)</li> <li>Interface Injection : M\u1ed7i <code>Class</code> mu\u1ed1n inject c\u00e1i g\u00ec, th\u00ec ph\u1ea3i implement m\u1ed9t<code>Interface</code> c\u00f3 ch\u1ee9a m\u1ed9t h\u00e0m <code>inject(xx)</code> (G\u1ea7n nh\u01b0 thay th\u1ebf cho setter \u00fd b\u1ea1n). R\u1ed3i b\u1ea1n mu\u1ed1n inject g\u00ec \u0111\u00f3 th\u00ec g\u1ecdi c\u00e1i h\u00e0m <code>inject(xx)</code> ra. C\u00e1ch n\u00e0y h\u01a1i d\u00e0i v\u00e0 kh\u00f3 cho ng\u01b0\u1eddi m\u1edbi.</li> </ul>"},{"location":"java/spring-boot/core/#inversion-of-control","title":"Inversion of Control","text":"<p><code>Dependency Injection</code> gi\u00fap ch\u00fang ta d\u1ec5 d\u00e0ng m\u1edf r\u1ed9ng <code>code</code> v\u00e0 gi\u1ea3m s\u1ef1 ph\u1ee5 thu\u1ed9c gi\u1eefa c\u00e1c dependency v\u1edbi nhau. Tuy nhi\u00ean, l\u00fac n\u00e0y, khi code b\u1ea1n s\u1ebd ph\u1ea3i ki\u00eam th\u00eam nhi\u1ec7m v\u1ee5 <code>Inject dependency (ti\u00eam s\u1ef1 ph\u1ee5 thu\u1ed9c)</code>. Th\u1eed t\u01b0\u1edfng t\u01b0\u1ee3ng m\u1ed9t <code>Class</code> c\u00f3 h\u00e0ng ch\u1ee5c dependency th\u00ec b\u1ea1n s\u1ebd ph\u1ea3i t\u1ef1 tay inject t\u1eebng \u00fd c\u00e1i. Vi\u1ec7c n\u00e0y l\u1ea1i d\u1eabn t\u1edbi kh\u00f3 kh\u0103n trong vi\u1ec7c code, qu\u1ea3n l\u00fd code v\u00e0 dependency</p> <pre><code>public static void main(String[] args) {\n    EquipGun AK47 = new AK47();\n    AoChongDan gucci = new AoChongDan();\n    MuBaoHiem muCoi = new MuBaoHiem();\n    BoDoi truongAnhNgoc = new BoDoi(AK47, gucci, muCoi);\n}\n</code></pre> <p>B\u00e2y gi\u1edd gi\u1ea3 s\u1eed, ch\u00fang ta \u0111\u1ecbnh ngh\u0129a tr\u01b0\u1edbc to\u00e0n b\u1ed9 c\u00e1c <code>dependency</code> c\u00f3 trong Project, m\u00f4 t\u1ea3 n\u00f3 v\u00e0 t\u1ed1ng n\u00f3 v\u00e0o 1 c\u00e1i <code>kho</code> v\u00e0 giao cho m\u1ed9t th\u1eb1ng t\u00ean l\u00e0 <code>framework</code> qu\u1ea3n l\u00fd. B\u1ea5t k\u1ef3 c\u00e1c <code>Class</code> n\u00e0o khi kh\u1edfi t\u1ea1o, n\u00f3 c\u1ea7n dependency g\u00ec, th\u00ec c\u00e1i <code>framework</code> n\u00e0y s\u1ebd t\u1ef1 t\u00ecm trong <code>kho</code> r\u1ed3i inject v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng thay ch\u00fang ta. s\u1ebd ti\u1ec7n h\u01a1n ph\u1ea3i kh\u00f4ng?</p> <p>V\u00e0, \u0111\u00f3 c\u0169ng ch\u00ednh l\u00e0 nguy\u00ean l\u00fd ch\u00ednh c\u1ee7a<code>Inversion of Control (IOC)</code>-<code>\u0110\u1ea3o chi\u1ec1u s\u1ef1 \u0111i\u1ec1u khi\u1ec3n</code></p> <p>Nguy\u00ean v\u0103n Wiki:</p> <p>Inversion of Control is a programming principle. flow of control within the application is not controlled by the application itself, but rather by the underlying framework.</p> <p>Khi \u0111\u00f3, code ch\u00fang ta s\u1ebd ch\u1ec9 c\u1ea7n nh\u01b0 n\u00e0y, \u0111\u1ec3 l\u1ea5y ra 1 \u0111\u1ed1i t\u01b0\u1ee3ng:</p> <pre><code>@Override\npublic void run(String... args) throws Exception {\n    BoDoi BoDoi = context.getBean(BoDoi.class);\n}\n</code></pre> <p>\u0110\u1ed1i v\u1edbi <code>Java</code> th\u00ec c\u00f3 m\u1ed9t s\u1ed1 Framework h\u1ed7 tr\u1ee3 ch\u00fang ta<code>Inversion of Control (IOC)</code>. Th\u01b0\u1eddng th\u00ec d\u00f9ng lu\u00f4n Spring framework. </p>"},{"location":"java/spring-boot/jpa/","title":"\u300cJpa\u300dHibernate l\u00e0 g\u00ec?","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>\u0110\u1ecbnh ngh\u0129a</li> <li>POJO</li> <li>Mapping d\u1eef li\u1ec7u</li> <li>Session</li> <li>Hibernate Query Language (HQL)</li> </ul>"},{"location":"java/spring-boot/jpa/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p><code>Hibernate</code>\u00a0l\u00e0 framework \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng nhi\u1ec1u nh\u1ea5t hi\u1ec7n nay \u0111\u1ec3 gi\u00fap l\u1eadp tr\u00ecnh vi\u00ean Java c\u00f3 th\u1ec3 map c\u00e1c class (Pojo) v\u1edbi m\u1ed9t c\u01a1 s\u1edf d\u1eef li\u1ec7u b\u1ea5t k\u1ef3.</p> <p>Tr\u01b0\u1edbc khi\u00a0<code>Hibernate</code>\u00a0ra \u0111\u1eddi, ch\u00fang ta th\u01b0\u1eddng thao t\u00e1c v\u1edbi c\u01a1 s\u1edf d\u1eef li\u1ec7u th\u00f4ng qua\u00a0<code>JDBC</code>. Theo th\u1eddi gian,\u00a0<code>JDBC</code>\u00a0b\u1ed9c l\u1ed9 nhi\u1ec1u \u0111i\u1ec3m y\u1ebfu nh\u01b0:</p> <ul> <li>C\u00f3 nhi\u1ec1u code th\u1eeba m\u00e0 ch\u1ec9 ph\u1ee5c v\u1ee5 m\u1ee5c \u0111\u00edch l\u00e0 l\u1ea5y d\u1eef li\u1ec7u.</li> <li>M\u1ea5t nhi\u1ec1u th\u1eddi gian map d\u1eef li\u1ec7u v\u00e0o object Java.</li> <li>S\u1ebd t\u1ed1n nhi\u1ec1u c\u00f4ng s\u1ee9c khi h\u1ec7 th\u1ed1ng thay \u0111\u1ed5i CSDL (y\u00eau c\u1ea7u\u00a0<code>jdbc</code>\u00a0m\u1edbi, code m\u1edbi)</li> <li>Giao ti\u1ebfp gi\u1eefa c\u00e1c b\u1ea3ng th\u01b0\u1eddng kh\u00f3, thi\u1ebfu t\u00ednh OOP trong \u0111\u00f3.</li> </ul> <p>T\u1eeb \u0111\u00e2y, \u0111\u1ec3 gi\u1ea3m t\u1ea3i g\u00e1nh n\u1eb7ng cho dev khi thao t\u00e1c v\u1edbi database.\u00a0<code>Hibernate</code>\u00a0ra \u0111\u1eddi!</p>"},{"location":"java/spring-boot/jpa/#inh-nghia","title":"\u0110\u1ecbnh ngh\u0129a","text":"<p><code>Hibernate</code>\u00a0l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n\u00a0<code>ORM (Object Relational Mapping)</code>\u00a0m\u00e3 ngu\u1ed3n m\u1edf gi\u00fap l\u1eadp tr\u00ecnh vi\u00ean vi\u1ebft \u1ee9ng d\u1ee5ng Java c\u00f3 th\u1ec3 map c\u00e1c objects (pojo) v\u1edbi h\u1ec7 qu\u1ea3n tr\u1ecb c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7, v\u00e0 h\u1ed7 tr\u1ee3 th\u1ef1c hi\u1ec7n c\u00e1c kh\u00e1i ni\u1ec7m l\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng v\u1edbi c\u1edb d\u1eef li\u1ec7u quan h\u1ec7.</p> <p>Hi\u1ec3u ng\u1eafn g\u1ecdn th\u00ec\u00a0<code>Hibernate</code>\u00a0s\u1ebd l\u00e0 m\u1ed9t layer \u0111\u1ee9ng trung gian gi\u1eefa \u1ee9ng d\u1ee5ng v\u00e0 database, v\u00e0 ch\u00fang ta s\u1ebd giao ti\u1ebfp v\u1edbi\u00a0<code>Hibernate</code>\u00a0thay v\u00ec giao ti\u1ebfp v\u1edbi database</p> <p>!image</p> <p>\u0110\u1ec3 giao ti\u1ebfp v\u1edbi\u00a0<code>Hibernate</code>, ch\u00fang ta s\u1ebd t\u1ea1o ra m\u1ed9t\u00a0<code>Class</code>\u00a0\u0111\u1ea1i di\u1ec7n cho m\u1ed9t\u00a0<code>Table</code>. V\u00e0 m\u1ecdi d\u1eef li\u1ec7u t\u1eeb\u00a0<code>Table</code>\u00a0trong database s\u1ebd \u0111\u01b0\u1ee3c\u00a0<code>Hibernate</code>\u00a0bind v\u00e0o\u00a0<code>Class</code>\u00a0\u0111\u00f3 cho ch\u00fang ta.</p>"},{"location":"java/spring-boot/jpa/#pojo","title":"POJO","text":"<p><code>Pojo (plain old Java object)</code>\u00a0l\u00e0 class \u0111\u1ea1i di\u1ec7n cho m\u1ed9t\u00a0<code>Table</code>, thu\u1eadt ng\u1eef n\u00e0y \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a ch\u00ednh x\u00e1c th\u00ec m\u00ecnh kh\u00f4ng d\u00e1m ch\u1eafc, nh\u01b0ng v\u1ec1 \u00fd ngh\u0129a th\u00ec n\u00f3 l\u00e0 m\u1ed9t class java thu\u1ea7n t\u00fay, r\u1ea5t thu\u1ea7n t\u00fay:</p> <ol> <li>All properties must public setter and getter methods (m\u1ecdi bi\u1ebfn \u0111\u1ec1u ph\u1ea3i c\u00f3 get/set)</li> <li>All instance variables should be private (m\u1ecdi bi\u1ebfn l\u00e0 thu\u1ed9c t\u00ednh th\u00ec n\u00ean l\u00e0 private)</li> </ol> <pre><code>public class MyFirstPojo\n{\n    private String name;\n\n    public static void main(String [] args)\n    {\n       for (String arg : args)\n       {\n          MyFirstPojo pojo = new MyFirstPojo(arg);  // Here's how you create a POJO\n          System.out.println(pojo);\n       }\n    }\n\n    public MyFirstPojo(String name)\n    {\n        this.name = name;\n    }\n\n    public String getName() { return this.name; }\n\n    public String toString() { return this.name; }\n}\n</code></pre>"},{"location":"java/spring-boot/jpa/#mapping-du-lieu","title":"Mapping d\u1eef li\u1ec7u","text":"<p>Khi \u0111\u00e3 c\u00f3\u00a0<code>Class</code>\u00a0\u0111\u1ea1i di\u1ec7n cho\u00a0<code>Table</code>\u00a0r\u1ed3i, ch\u00fang ta s\u1ebd \u0111\u1ecbnh ngh\u0129a c\u00e1c tr\u01b0\u1eddng trong class \u0111\u00f3 t\u01b0\u01a1ng \u1ee9ng v\u1edbi column n\u00e0o trong database b\u1eb1ng t\u1eadp h\u1ee3p c\u00e1c\u00a0<code>Annotaion</code>\u00a0m\u00e0\u00a0<code>Hibernate</code>\u00a0cung c\u1ea5p.</p> <pre><code>@Entity // \u0110\u00e1nh d\u1ea5u \u0111\u00e2y l\u00e0 m\u1ed9t Entity, ch\u1ecbu s\u1ef1 qu\u1ea3n l\u00fd c\u1ee7a Hibernate\n@Table(name = \"USER\") //Entity n\u00e0y \u0111\u1ea1i di\u1ec7n cho table USER trong db\npublic class UserModel {\n    @Id // \u0110\u00e1nh d\u1ea5u bi\u1ebfn \u1edf d\u01b0\u1edbi l\u00e0 primary key c\u1ee7a table n\u00e0y\n    @GeneratedValue(strategy = GenerationType.IDENTITY) // T\u1ef1 \u0111\u1ed9ng t\u0103ng gi\u00e1 tr\u1ecb khi insert\n    private Long id;\n\n    @Column(name = \"email\", unique = true) // tr\u01b0\u1eddng email \u1edf d\u01b0\u1edbi \u0111\u1ea1i di\u1ec7n cho c\u1ed9t email trong database\n    private String email;\n\n    @Column(name = \"name\")\n    private String name;\n\n    public Long getId() {\n        return this.id;\n    }\n    public void setId(Long id) {\n        this.id = id;\n    }\n    public String getEmail() {\n        return email;\n    }\n    public void setEmail(String email) {\n        this.email = email;\n    }\n    public String getName() {\n        return this.name;\n    }\n    public void setName(String name) {\n        this.name = name;\n    }\n}\n</code></pre> <p>B\u00e2y gi\u1edd vi\u1ec7c b\u1ea1n l\u1ea5y d\u1eef li\u1ec7u t\u1eeb database s\u1ebd \u0111\u1ea1i lo\u1ea1i nh\u01b0 n\u00e0y:</p> <pre><code>public List&lt;User&gt; findAll() {\n    return session.createQuery(\"SELECT a FROM User a\", User.class).getResultList();\n}\n</code></pre> <p>Ch\u00fang ta ti\u1ebft ki\u1ec7m \u0111\u01b0\u1ee3c r\u1ea5t nhi\u1ec1u th\u1eddi gian cho vi\u1ec7c mapping d\u1eef li\u1ec7u t\u1eeb database sang class java, v\u00e0 \u0111\u1eb7c bi\u1ec7t l\u00e0 khi thay \u0111\u1ed5i Database th\u00ec c\u0169ng s\u1ebd kh\u00f4ng \u1ea3nh h\u01b0\u1edfng g\u00ec t\u1edbi \u0111o\u1ea1n code \u1edf tr\u00ean c\u1ea3, ch\u00fang ta g\u1ea7n nh\u01b0 trong su\u1ed1t v\u1edbi t\u1ea7ng database, m\u00e0 ch\u1ec9 c\u1ea7n n\u00f3i chuy\u1ec7n v\u1edbi\u00a0<code>Hibernate</code>\u00a0l\u00e0 \u0111\u1ee7!</p>"},{"location":"java/spring-boot/jpa/#session","title":"Session","text":"<p>\u0110\u1ed1i t\u01b0\u1ee3ng ch\u00ednh c\u1ee7a vi\u1ec7c truy xu\u1ea5t hay insert d\u1eef li\u1ec7u b\u1eb1ng\u00a0<code>Hibernate</code>\u00a0ch\u00ednh l\u00e0\u00a0<code>Session</code>\u00a0v\u00e0 \u0111\u01b0\u1ee3c t\u1ea1o ra t\u1eeb\u00a0<code>Session Factory</code>.</p> <p><code>Session Factory</code>\u00a0L\u00e0 m\u1ed9t interface gi\u00fap t\u1ea1o ra session k\u1ebft n\u1ed1i \u0111\u1ebfn database b\u1eb1ng c\u00e1ch \u0111\u1ecdc c\u00e1c c\u1ea5u h\u00ecnh trong m\u1ed9t file xml v\u00e0 m\u1ed7i lo\u1ea1i Database kh\u00e1c nhau s\u1ebd c\u00f3 m\u1ed9t c\u1ea5u h\u00ecnh kh\u00e1c nhau.</p> <p>File c\u1ea5u h\u00ecnh\u00a0<code>hibernate.cfg.xml</code>\u00a0c\u00f3 d\u1ea1ng nh\u01b0 sau:</p> <pre><code>&lt;?xml version='1.0' encoding='utf-8'?&gt;\n&lt;!DOCTYPE hibernate-configuration PUBLIC\n\"-//Hibernate/Hibernate Configuration DTD//EN\"\n\"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\"&gt;\n\n&lt;hibernate-configuration&gt;&lt;session-factory&gt;&lt;propertyname=\"hibernate.connection.driver_class\"&gt;com.mysql.jdbc.Driver&lt;/property&gt;&lt;propertyname=\"hibernate.connection.url\"&gt;jdbc:mysql://192.168.10.13:3306/loda\n&lt;/property&gt;&lt;propertyname=\"hibernate.connection.username\"&gt;root&lt;/property&gt;&lt;propertyname=\"hibernate.connection.password\"&gt;root&lt;/property&gt;&lt;propertyname=\"hibernate.connection.pool_size\"&gt;10&lt;/property&gt;&lt;propertyname=\"dialect\"&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;&lt;propertyname=\"hibernate.current_session_context_class\"&gt;thread&lt;/property&gt;&lt;/session-factory&gt;&lt;/hibernate-configuration&gt;\n</code></pre> <p>Khi \u0111\u00e3 c\u00f3 file config n\u00e0y r\u1ed3i, ch\u00fang ta s\u1eed d\u1ee5ng n\u00f3 \u0111\u1ec3 t\u1ea1o ra\u00a0<code>Session Factory</code>\u00a0nh\u01b0 sau:</p> <pre><code>public class SessionFactoryProvider {\n\n    private static SessionFactory buildSessionFactory() {\n        ServiceRegistry serviceRegistry = new StandardServiceRegistryBuilder()//\n                .configure(\"hibernate.cfg.xml\").build();\n\n        Metadata metadata = new MetadataSources(serviceRegistry).getMetadataBuilder().build();\n\n        return metadata.getSessionFactoryBuilder().build();\n    }\n}\n</code></pre> <p>T\u1eeb \u0111\u00f3, m\u1ed7i l\u1ea7n c\u1ea7n query hay insert d\u1eef li\u1ec7u, ch\u00fang ta s\u1ebd t\u1ea1o ra\u00a0<code>Session</code>\u00a0v\u00e0 s\u1eed d\u1ee5ng.</p> <pre><code>SessionFactory factory = HibernateSessionUtils.getSessionFactory();\n\nSession session = factory.getCurrentSession();\n\ntry {\n    session.getTransaction().begin();\n\n    List&lt;User&gt; users = session.createQuery(\"SELECT a FROM User a\", User.class).getResultList();\n\n    session.getTransaction().commit();\n}catch (Exception e) {}\n</code></pre>"},{"location":"java/spring-boot/jpa/#hibernate-query-language-hql","title":"Hibernate Query Language (HQL)","text":"<p><code>Hibernate</code>\u00a0s\u1eed d\u1ee5ng ng\u00f4n ng\u1eef\u00a0<code>Hibernate Query Language (HQL)</code>\u00a0\u0111\u1ec3 query d\u1eef li\u1ec7u. N\u00f3 ch\u1ec9 kh\u00e1c\u00a0<code>SQL</code>\u00a0b\u00ecnh th\u01b0\u1eddng \u1edf ch\u1ed7, \u0111\u1ed1i t\u01b0\u1ee3ng t\u00e1c \u0111\u1ed9ng l\u00fac n\u00e0y l\u00e0\u00a0<code>Entity</code>\u00a0ch\u1ee9 kh\u00f4ng c\u00f2n l\u00e0\u00a0<code>Table</code>\u00a0n\u1eefa:</p> <p>v\u00ed d\u1ee5:</p> <pre><code>-- SQL\n-- from table name\nSelect u.id, u.email from USER u;\n\n-- HQL\n-- from class name\nSelect u.id, u.email from User u;\n\n-- query to\u00e0n b\u1ed9 object\nSelect u from User u;\n</code></pre> <p>\u0110ang vi\u1ebft d\u1edf Continue...</p> <ol> <li>\ud83e\ude82\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng @OneToOne</li> <li>\ud83d\ude85\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @OneToMany v\u00e0 @ManyToOne</li> <li>\ud83d\udef5\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @ManyToMany</li> </ol> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/jpa/#jpa-huong-dan-su-dung-specification-phan-1","title":"\u300cJpa\u300d H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng Specification (Ph\u1ea7n 1)","text":""},{"location":"java/spring-boot/jpa/#gioi-thieu_1","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong m\u1ed9t b\u00e0i vi\u1ebft g\u1ea7n nh\u1ea5t v\u1ec1\u00a0\u00a0t\u00f4i \u0111\u00e3 h\u01b0\u1edbng d\u1eabn c\u00e1c b\u1ea1n c\u00e1ch x\u00e2y d\u1ef1ng c\u00e1c c\u00e2u query xu\u1ed1ng Database b\u1eb1ng c\u00e1c API do Hibernate cung c\u1ea5p.</p> <p>V\u00e0 trong m\u1ed9t b\u00e0i vi\u1ebft kh\u00e1c v\u1ec1 JPA Repository th\u00ec ch\u00fang ta c\u0169ng \u0111\u00e3 bi\u1ebft c\u00e1ch custom c\u00e1c query b\u1eb1ng c\u00e1ch \u0111\u1eb7t t\u00ean method:</p> <ol> <li>\u300cSpring Boot #11\u300d Hu\u031bo\u031b\u0301ng da\u0302\u0303n Spring Boot JPA + MySQL</li> <li>\u300cSpring Boot #12\u300d Spring JPA Method + @Query </li> </ol> <p>Tuy nhi\u00ean, trong c\u00e1c ph\u01b0\u01a1ng ph\u00e1p tr\u00ean, v\u1eabn s\u1ebd c\u00f2n m\u1ed9t s\u1ed1 c\u00e1c \u0111i\u1ec3m b\u1ea5t c\u1eadp, v\u00ed d\u1ee5 nh\u01b0\u00a0<code>JpaRepository</code>\u00a0th\u00ec b\u1ea1n s\u1ebd ph\u1ea3i vi\u1ebft qu\u00e1 nhi\u1ec1u method v\u00e0 m\u1ed7i c\u00e1i s\u1ebd ph\u1ee5c v\u1ee5 cho m\u1ed9t m\u1ee5c \u0111\u00edch c\u1ed1 \u0111\u1ecbnh (kh\u00f4ng th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng, reuseable).</p> <pre><code>public interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n\n  User findByEmailAddress(String emailAddress);\n\n  List&lt;User&gt; findByLastname(String lastname, Sort sort);\n\n  Page&lt;User&gt; findByFirstname(String firstname, Pageable pageable);\n}\n</code></pre> <p>\u0110\u1ec3 c\u00f3 th\u1ec3 t\u1ed1i \u01b0u vi\u1ec7c vi\u1ebft query m\u1ed9t c\u00e1ch linh \u0111\u1ed9ng h\u01a1n v\u00e0 c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng l\u1ea1i, Spring mang t\u1edbi cho ch\u00fang ta interface\u00a0<code>Specification</code>.</p> <p>L\u00fac n\u00e0y, c\u00e1ch ti\u1ebfp c\u1eadn c\u1ee7a vi\u1ec7c x\u00e2y d\u1ef1ng query s\u1ebd \u0111\u1ea1i lo\u1ea1i nh\u01b0 sau:</p> <pre><code>userRepository.findAll(Specification.where(hasIdIn(Arrays.asList(1L, 2L, 3L, 4L, 5L)))\n                                                .and(hasType(UserType.NORMAL))\n                                                .or(hasId(10L)));\n</code></pre> <p>V\u1edbi c\u00e1ch \u0111\u1ecbnh ngh\u0129a n\u00e0y, ch\u00fang ta c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng query v\u00e0 tu\u1ef3 bi\u1ebfn n\u00f3 m\u1ecdi l\u00fac \u0111\u1ec3 ph\u00f9 h\u1ee3p v\u1edbi y\u00eau c\u1ea7u.</p> <p>Kh\u00e1i ni\u1ec7m\u00a0<code>Specification</code>\u00a0\u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi\u00a0<code>Predicate</code>\u00a0trong Hibernate. B\u1ea1n h\u00e3y \u0111\u1ecdc b\u00e0i d\u01b0\u1edbi tr\u01b0\u1edbc khi \u0111i ti\u1ebfp v\u00e0o b\u00e0i n\u00e0y: Hu\u031bo\u031b\u0301ng da\u0302\u0303n su\u031b\u0309 du\u0323ng Criteria API trong Hibernate (Pha\u0302\u0300n 2) </p> <p>Trong b\u00e0i c\u00f3 s\u1eed d\u1ee5ng: Lombok</p>"},{"location":"java/spring-boot/jpa/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Nh\u1edb th\u00eam\u00a0<code>spring-boot-starter-data-jpa</code>\u00a0v\u00e0o dependencies c\u1ee7a b\u1ea1n.</p> <p>Trong ph\u1ea7n n\u00e0y, t\u00f4i x\u00e0i\u00a0H2 database\u00a0\u0111\u1ec3 demo. (H2 l\u00e0 d\u1ea1ng memory database, n\u00f3 s\u1ebd l\u01b0u trong ram v\u00e0 khi t\u1eaft ch\u01b0\u01a1ng tr\u00ecnh n\u00f3 s\u1ebd m\u1ea5t s\u1ea1ch)</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;parent&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&lt;version&gt;2.0.5.RELEASE&lt;/version&gt;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;&lt;groupId&gt;me.loda.spring&lt;/groupId&gt;&lt;artifactId&gt;example-independent-maven-spring-project&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;name&gt;example-independent-maven-spring-project&lt;/name&gt;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&lt;properties&gt;&lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;!--         &lt;exclusions&gt;--&gt;\n            &lt;!--                &lt;exclusion&gt;--&gt;\n            &lt;!--                    &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;--&gt;\n            &lt;!--                    &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;--&gt;\n            &lt;!--                &lt;/exclusion&gt;--&gt;\n            &lt;!--            &lt;/exclusions&gt;--&gt;\n        &lt;/dependency&gt;&lt;!--spring jpa--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!--in memory database--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;com.h2database&lt;/groupId&gt;&lt;artifactId&gt;h2&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;&lt;!--https://mvnrepository.com/artifact/org.hibernate/hibernate-jpamodelgen --&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;&lt;artifactId&gt;hibernate-jpamodelgen&lt;/artifactId&gt;&lt;version&gt;5.4.9.Final&lt;/version&gt;&lt;scope&gt;provided&lt;/scope&gt;&lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt;&lt;plugins&gt;&lt;plugin&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&lt;/plugin&gt;&lt;/plugins&gt;&lt;/build&gt;&lt;/project&gt;\n</code></pre> <p>Ch\u00fa \u00fd, xem k\u0129 h\u01a1n\u00a0<code>hibernate-jpamodelgen</code>\u00a0trong b\u00e0i vi\u1ebft\u00a0</p>"},{"location":"java/spring-boot/jpa/#specification","title":"Specification","text":"<p><code>Specification</code>\u00a0l\u00e0 m\u1ed9t c\u00e1ch \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a c\u00e1c\u00a0<code>Predicate</code>\u00a0c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c.</p> <p>B\u1ea3n ch\u1ea5t\u00a0<code>Specification</code>\u00a0l\u00e0 m\u1ed9t funtional interface v\u1edbi 1 h\u00e0m duy nh\u1ea5t nh\u01b0 sau:</p> <pre><code>public interface Specification&lt;T&gt; {\n  Predicate toPredicate(Root&lt;T&gt; root, CriteriaQuery query, CriteriaBuilder cb);\n}\n</code></pre> <p>Tham s\u1ed1 \u0111\u1ea7u v\u00e0o l\u00e0 3 kh\u00e1i ni\u1ec7m t\u00f4i \u0111\u00e3 gi\u1edbi thi\u1ec7u \u1edf b\u00e0i\u00a0, bao g\u1ed3m:</p> <ol> <li><code>Root</code></li> <li><code>CriteriaQuery</code></li> <li><code>CriteriaBuilder</code></li> </ol> <p>t\u00f4i s\u1ebd demo tr\u01b0\u1edbc m\u1ed9t s\u1ed1 implementation c\u1ee7a\u00a0<code>Specification</code>\u00a0v\u00e0 \u0111\u1ec1 c\u1eadp c\u00e1ch s\u1eed d\u1ee5ng n\u00f3 \u1edf ph\u00eda d\u01b0\u1edbi:</p> <p>User.java</p> <pre><code>@Entity\n@Data\n@Builder\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private UserType type;\n    private String name;\n\n    public enum UserType {\n        NORMAL, VIP;\n    }\n}\n</code></pre> <p>UserSpecification.java</p> <pre><code>public final class UserSpecification {\n    /**\n     * L\u1ea5y ra user c\u00f3 UserType ch\u1ec9 \u0111\u1ecbnh\n     * @param type\n     * @return\n     */\n    public static Specification&lt;User&gt; hasType(UserType type) {\n        return (root, query, cb) -&gt; cb.equal(root.get(User_.TYPE), type);\n    }\n\n    /**\n     * L\u1ea5y ra user c\u00f3 id ch\u1ec9 \u0111\u1ecbnh\n     * @param userId\n     * @return\n     */\n    public static Specification&lt;User&gt; hasId(long userId) {\n        return (root, query, cb) -&gt; cb.equal(root.get(User_.ID), userId);\n    }\n\n    /**\n     * L\u1ea5y ra user n\u1eb1m trong t\u1eadp ID ch\u1ec9 \u0111\u1ecbnh\n     * @param userIds\n     * @return\n     */\n    public static Specification&lt;User&gt; hasIdIn(Collection&lt;Long&gt; userIds) {\n        return (root, query, cb) -&gt; root.get(User_.ID).in(userIds);\n    }\n}\n</code></pre> <p>T\u00f4i \u0111\u1ecbnh ngh\u0129a ra c\u00e1c\u00a0<code>static method</code>\u00a0tr\u1ea3 ra ngo\u00e0i l\u00e0 c\u00e1c implement c\u1ee7a\u00a0<code>Specification</code>. N\u00f3 kh\u00f4ng h\u1eb3n l\u00e0 \u0111o\u1ea1n code \u0111\u1eb9p nh\u1ea5t ==! nh\u01b0ng n\u00f3 l\u00e0 m\u1ed9t c\u00e1ch l\u00e0m hay \u0111\u1ec3 c\u00f3 th\u1ec3 \u0111\u1ecbnh ngh\u0129a m\u1ed9t t\u1eadp c\u00e1c \u0111i\u1ec1u ki\u1ec7n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng l\u1ea1i \u0111\u01b0\u1ee3c cho\u00a0<code>User</code>.</p>"},{"location":"java/spring-boot/jpa/#jpaspecificationexecutor","title":"JpaSpecificationExecutor","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c\u00a0<code>Specification</code>, b\u1ea1n c\u1ea7n k\u1ebf th\u1eeba\u00a0<code>JpaSpecificationExecutor</code>\u00a0t\u1eeb Spring JPA</p> <pre><code>public interface UserRepository extends JpaRepository&lt;User, Long&gt;,\n                                        JpaSpecificationExecutor&lt;User&gt; {\n}\n</code></pre> <p>L\u00fac n\u00e0y, ngo\u00e0i c\u00e1c method truy\u1ec1n th\u1ed1ng nh\u01b0\u00a0<code>findAll()</code>,\u00a0<code>findOne()</code>,\u00a0<code>findBy()</code>\u00a0th\u00ec b\u1ea1n s\u1ebd th\u1ea5y xu\u1ea5t hi\u1ec7n c\u00e1c method m\u1edbi c\u00f3 tham s\u1ed1 \u0111\u1ea7u v\u00e0o l\u00e0\u00a0<code>Specification&lt;T&gt;</code>:</p> <pre><code>Optional&lt;T&gt; findOne(@Nullable Specification&lt;T&gt; var1);\n\nList&lt;T&gt; findAll(@Nullable Specification&lt;T&gt; var1);\n\nPage&lt;T&gt; findAll(@Nullable Specification&lt;T&gt; var1, Pageable var2);\n\nList&lt;T&gt; findAll(@Nullable Specification&lt;T&gt; var1, Sort var2);\n\nlong count(@Nullable Specification&lt;T&gt; var1);\n</code></pre>"},{"location":"java/spring-boot/jpa/#usage","title":"Usage","text":"<p>L\u00fac n\u00e0y, \u0111\u1ec3 s\u1eed d\u1ee5ng, b\u1ea1n g\u1ecdi\u00a0<code>Specification.where()</code>\u00a0\u0111\u1ec3 x\u00e2y d\u1ef1ng cho m\u00ecnh t\u1eadp c\u00e1c \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec3 query</p> <pre><code>// L\u1ea5y ra user n\u1eb1m trong t\u1eadp ID \u0111\u00e3 cho v\u00e0 c\u00f3 type l\u00e0 NORMAL\n// ho\u1eb7c l\u1ea5y ra user c\u00f3 ID = 10\nSpecification conditions = Specification.where(UserSpecification.hasIdIn(Arrays.asList(1L, 2L, 3L, 4L, 5L)))\n                                        .and(UserSpecification.hasType(UserType.NORMAL))\n                                        .or(UserSpecification.hasId(10L));\n// Truy\u1ec1n Specification v\u00e0o h\u00e0m findAll()\nuserRepository.findAll(conditions).forEach(System.out::println);\n</code></pre> <p>OUTPUT:</p> <pre><code>User(id=1, type=NORMAL, name=name-0)\nUser(id=2, type=NORMAL, name=name-1)\nUser(id=5, type=NORMAL, name=name-4)\nUser(id=10, type=VIP, name=name-9)\n</code></pre> <p>Ngo\u00e0i ra, b\u1ea1n c\u00f3 th\u1ec3 import tr\u1ef1c ti\u1ebfp c\u00e1c h\u00e0m static v\u00e0o \u0111\u1ec3 code g\u1ecdn h\u01a1n:</p> <pre><code>import static me.loda.spring.specification.User.UserType.NORMAL;\nimport static me.loda.spring.specification.UserSpecification.*;\n\n...\n// L\u1ea5y ra user n\u1eb1m trong t\u1eadp ID \u0111\u00e3 cho v\u00e0 c\u00f3 type l\u00e0 NORMAL\n// ho\u1eb7c l\u1ea5y ra user c\u00f3 ID = 10\nSpecification conditions = Specification.where(hasIdIn(Arrays.asList(1L, 2L, 3L, 4L, 5L)))\n                                        .and(hasType(NORMAL))\n                                        .or(hasId(10L));\n// Truy\u1ec1n Specification v\u00e0o h\u00e0m findAll()\nuserRepository.findAll(conditions).forEach(System.out::println);\n</code></pre> <p>G\u1ecdn h\u01a1n th\u00ec kh\u00f4ng n\u00ean t\u1ea1o ra 1 bi\u1ebfn tham chi\u1ebfu th\u1eeba th\u00e3i:</p> <pre><code>userRepository.findAll(Specification.where(hasIdIn(Arrays.asList(1L, 2L, 3L, 4L, 5L)))\n                                    .and(hasType(NORMAL))\n                                    .or(hasId(10L)))\n              .forEach(System.out::println);\n</code></pre>"},{"location":"java/spring-boot/jpa/#ket","title":"K\u1ebft","text":"<p>T\u1edbi \u0111\u00e2y b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng\u00a0<code>Specification</code>\u00a0\u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c truy v\u1ea5n ph\u1ee9c t\u1ea1p v\u00e0 t\u00e1i s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c trong nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p. \u0110\u00f3n \u0111\u1ecdc c\u00e1c b\u00e0i sau v\u1ec1 c\u00e1c ph\u1ea7n n\u00e2ng cao h\u01a1n.</p>"},{"location":"java/spring-boot/jpa/#jpahuong-dan-su-dung-onetoone","title":"\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng @OneToOne","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>T\u1ea1o project</li> <li>T\u1ea1o Table</li> <li>Ch\u1ea1y th\u1eed</li> <li>Th\u00eam d\u1eef li\u1ec7u</li> </ul>"},{"location":"java/spring-boot/jpa/#gioi-thieu_2","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00e1ch bi\u1ec3u th\u1ecb quan h\u1ec7 1-1 trong c\u01a1 s\u1edf d\u1eef li\u1ec7u l\u00e0 r\u1ea5t ph\u1ed5 bi\u1ebfn, v\u00ed d\u1ee5 m\u1ed9t ng\u01b0\u1eddi s\u1ebd c\u00f3 m\u1ed9t \u0111\u1ecba ch\u1ec9 duy nh\u1ea5t (gi\u1ea3 s\u1eed).</p> <p>B\u00ecnh th\u01b0\u1eddng, khi c\u00e1c b\u1ea1n t\u1ea1o table trong csdl \u0111\u1ec3 bi\u1ec3u th\u1ecb m\u1ed1i quan h\u1ec7 n\u00e0y, th\u00ec s\u1ebd c\u00f3 m\u1ed9t b\u1ea3ng ch\u1ee9a kh\u00f3a ngo\u1ea1i c\u1ee7a b\u1ea3ng c\u00f2n l\u1ea1i.</p> <p>!image</p> <p>Th\u1ec3 hi\u1ec7n m\u1ed7i quan h\u1ec7 n\u00e0y trong\u00a0<code>code</code>\u00a0b\u1eb1ng\u00a0<code>Hibernate</code>\u00a0th\u00ec ch\u00fang ta s\u1ebd d\u00f9ng\u00a0<code>@OneToOne</code>.</p> <p>Trong b\u00e0i s\u1eed d\u1ee5ng c\u00e1c ki\u1ebfn th\u1ee9c:</p> <ol> <li>Hibernate l\u00e0 g\u00ec?</li> <li>C\u00e1ch s\u1eed d\u1ee5ng Lombok \u0111\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian code</li> </ol>"},{"location":"java/spring-boot/jpa/#tao-project","title":"T\u1ea1o project","text":"<p>To\u00e0n b\u1ed9 b\u00e0i vi\u1ebft \u0111\u01b0\u1ee3c up t\u1ea1i\u00a0<code>Github</code>:\u00a0github.com/loda-kun/java-all</p> <p>Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>Gradle</code>\u00a0\u0111\u1ec3 t\u1ea1o m\u1ed9t project c\u00f3 khai b\u00e1o\u00a0<code>Spring Boot</code>\u00a0v\u00e0\u00a0<code>Jpa</code>\u00a0\u0111\u1ec3 h\u1ed7 tr\u1ee3 cho vi\u1ec7c demo\u00a0<code>@OneToOne</code>.</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 t\u1ea1o 1 project Spring-boot v\u1edbi gradle \u0111\u01a1n gi\u1ea3n t\u1ea1i:\u00a0https://start.spring.io</p> <pre><code>plugins {\n    id 'org.springframework.boot' version '2.1.4.RELEASE'\n    id 'java'\n}\napply plugin: 'io.spring.dependency-management'\n\ngroup 'me.loda.java'\nversion '1.0-SNAPSHOT'\n\nsourceCompatibility = 1.8\n\nconfigurations {\n    compileOnly {\n        extendsFrom annotationProcessor\n    }\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    compileOnly 'org.projectlombok:lombok'\n    runtimeOnly 'com.h2database:h2'\n    annotationProcessor 'org.projectlombok:lombok'\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\n}\n</code></pre> <p>Trong \u1ee9ng d\u1ee5ng tr\u00ean b\u1ea1n s\u1ebd th\u1ea5y c\u00f3\u00a0<code>com.h2database:h2</code>. \u0110\u00e2y l\u00e0 m\u1ed9t\u00a0database, tuy nhi\u00ean n\u00f3 ch\u1ec9 t\u1ed3n t\u1ea1i trong b\u1ed9 nh\u1edb. T\u1ee9c l\u00e0m m\u1ed7i khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y, n\u00f3 s\u1ebd t\u1ea1o database trong\u00a0<code>RAM</code>, v\u00e0 t\u1eaft ch\u01b0\u01a1ng tr\u00ecnh \u0111i n\u00f3 s\u1ebd m\u1ea5t.</p> <p>Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>H2</code>\u00a0thay cho\u00a0<code>MySql</code>\u00a0\u0111\u1ec3 cho.. ti\u1ec7n!</p> <p>Khi t\u1ea1o xong project, s\u1ebd c\u00f3 th\u01b0 m\u1ee5c nh\u01b0 sau:</p> <p>!image</p>"},{"location":"java/spring-boot/jpa/#tao-table","title":"T\u1ea1o Table","text":"<p>\u0110\u1ec3 t\u1ea1o table, ch\u00fang ta t\u1ea1o ra c\u00e1c\u00a0<code>Class</code>\u00a0t\u01b0\u01a1ng \u1ee9ng.</p> <pre><code>import javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.OneToOne;\n\nimport lombok.Builder;\nimport lombok.Data;\n\n@Entity // Hibernate entity\n@Data // Lombok\n@Builder // Lombok\npublic class Person { //Table person\n\n    @Id // \u0110\u00e1nh d\u1ea5u tr\u01b0\u1eddng n\u00e0y l\u00e0 primary key\n    @GeneratedValue // T\u1ef1 \u0111\u1ed9ng t\u0103ng gi\u00e1 tr\u1ecb id\n    private Long id;\n    private String name;\n}\n</code></pre> <pre><code>@Entity\n@Data\n@Builder\npublic class Address { // Table address\n    @Id\n    @GeneratedValue\n    private Long id;\n\n    private String city;\n    private String province;\n\n    @OneToOne // \u0110\u00e1nh d\u1ea5u c\u00f3 m\u1ed7i quan h\u1ec7 1-1 v\u1edbi Person \u1edf ph\u00eda d\u01b0\u1edbi\n    @JoinColumn(name = \"person_id\") // Li\u00ean k\u1ebft v\u1edbi nhau qua kh\u00f3a ngo\u1ea1i person_id\n    private Person person;\n}\n</code></pre> <p>N\u1ebfu ch\u00fang ta ch\u01b0a t\u1ea1o ra c\u00e1c table trong c\u01a1 s\u1edf d\u1eef li\u1ec7u, th\u00ec m\u1eb7c \u0111\u1ecbnh\u00a0<code>Hibernate</code>\u00a0s\u1ebd bind d\u1eef li\u1ec7u t\u1eeb class xu\u1ed1ng v\u00e0 t\u1ea1o table cho ch\u00fang ta.</p> <p>B\u1ea1n ph\u1ea3i t\u1ea1o file config\u00a0<code>src\\main\\resources\\application.properties</code>\u00a0nh\u01b0 sau \u0111\u1ec3 k\u1ebft n\u1ed1i t\u1edbi\u00a0<code>H2</code>\u00a0database nh\u00e9:</p> <pre><code>spring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=\n// Kh\u00f4ng c\u00f3 password, v\u00e0o th\u1eb3ng lu\u00f4n\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n\n## Cho ph\u00e9p v\u00e0o xem db th\u00f4ng qua web\nspring.h2.console.enabled=true\n</code></pre>"},{"location":"java/spring-boot/jpa/#chay-thu","title":"Ch\u1ea1y th\u1eed","text":"<p>B\u1ea1n t\u1ea1o file\u00a0<code>OneToOneExampleApplication</code>\u00a0v\u00e0 c\u1ea5u h\u00ecnh\u00a0<code>Spring Boot</code>\u00a0v\u00e0 kh\u1edfi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh.</p> <pre><code>@SpringBootApplication\n@RequiredArgsConstructor\npublic class OneToOneExampleApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(OneToOneExampleApplication.class, args);\n    }\n}\n</code></pre> <p>Sau khi ch\u1ea1y xong, h\u00e3y truy c\u1eadp v\u00e0o\u00a0<code>http://localhost:8080/h2-console/</code>\u00a0\u0111\u1ec3 v\u00e0o xem database c\u00f3 g\u00ec nh\u00e9.</p> <p>!image</p> <p>B\u1ea1n s\u1ebd th\u1ea5y n\u00f3 t\u1ea1o table gi\u1ed1ng v\u1edbi m\u00f4 t\u1ea3 \u1edf \u0111\u1ea7u b\u00e0i. V\u1edbi kh\u00f3a ngo\u1ea1i\u00a0<code>person_id</code>\u00a0\u1edf b\u1ea3ng\u00a0<code>address</code>.</p>"},{"location":"java/spring-boot/jpa/#them-du-lieu","title":"Th\u00eam d\u1eef li\u1ec7u","text":"<p>\u0110\u1ec3 th\u00eam d\u1eef li\u1ec7u v\u00e0o database, ch\u00fang ta s\u1ebd d\u00f9ng t\u1edbi\u00a0<code>Jpa</code>.</p> <pre><code>import org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface AddressRepository extends JpaRepository&lt;Address,Long&gt; {\n}\npublic interface PersonRepository extends JpaRepository&lt;Person, Long&gt; {\n}\n</code></pre> <p>Ch\u00fang ta s\u1ebd t\u1ea1o m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh\u00a0<code>Spring Boot</code>\u00a0\u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>CommandLineRunner</code>\u00a0\u0111\u1ec3 ch\u1ea1y code ngay khi kh\u1edfi \u0111\u1ed9ng.</p> <pre><code>import javax.transaction.Transactional;\n\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\nimport com.google.common.collect.Lists;\n\nimport lombok.RequiredArgsConstructor;\n\n@SpringBootApplication\n@RequiredArgsConstructor\npublic class OneToOneExampleApplication implements CommandLineRunner {\n    public static void main(String[] args) {\n        SpringApplication.run(OneToOneExampleApplication.class, args);\n    }\n\n    // S\u1eed d\u1ee5ng @RequiredArgsConstructor v\u00e0 final \u0111\u1ec3 thay cho @Autowired\n    private final PersonRepository personRepository;\n    private final AddressRepository addressRepository;\n\n    @Override\n    public void run(String... args) throws Exception {\n        // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng person\n        Person person = Person.builder()\n                              .name(\"loda\")\n                              .build();\n        // L\u01b0u v\u00e0o db\n        personRepository.save(person);\n\n        // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng Address c\u00f3 tham chi\u1ebfu t\u1edbi person\n        Address address = Address.builder()\n                .city(\"Hanoi\")\n                .person(person)\n                .build();\n\n        // L\u01b0u v\u00e0o db\n        addressRepository.save(address);\n\n        // V\u00e0o:http://localhost:8080/h2-console/ \u0111\u1ec3 xem d\u1eef li\u1ec7u \u0111\u00e3 insert\n    }\n}\n</code></pre> <p>K\u1ebft qu\u1ea3 trong database l\u00fac n\u00e0y:</p> <p>!image</p> <p>V\u1eady l\u00e0 th\u1eb1ng\u00a0<code>Address</code>\u00a0\u0111\u00e3 li\u00ean k\u1ebft t\u1edbi\u00a0<code>Person</code>\u00a0c\u00f3\u00a0<code>id=1</code>. \u0110\u00fang nh\u01b0 ta mong \u0111\u1ee3i.</p> <p>B\u00e0i vi\u1ebft c\u1ee7a m\u00ecnh kh\u00f4ng c\u00f2n g\u00ec \u0111\u1ec3 ng\u1eafn h\u01a1n \u0111\u01b0\u1ee3c n\u1eefa :((( th\u1eadt h\u1ed5 th\u1eb9n, m\u00ecnh c\u00f3 up code l\u00ean \u0111\u00e2y, b\u1ea1n ch\u1ea1y code c\u00e1i l\u00e0 hi\u1ec3u li\u1ec1n \u00e0:</p> <p>Ch\u00fac c\u00e1c b\u1ea1n h\u1ecdc t\u1eadp t\u1ed1t! ahuu</p> <ol> <li>\ud83d\ude85\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @OneToMany v\u00e0 @ManyToOne</li> <li>\ud83d\udef5\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @ManyToMany</li> </ol> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/jpa/#jpahuong-dan-onetomany-va-manytoone","title":"\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @OneToMany v\u00e0 @ManyToOne","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>T\u1ea1o project</li> <li>T\u1ea1o Table</li> <li>Ch\u1ea1y th\u1eed</li> <li>Th\u00eam d\u1eef li\u1ec7u</li> </ul>"},{"location":"java/spring-boot/jpa/#gioi-thieu_3","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00e1ch bi\u1ec3u th\u1ecb quan h\u1ec7 1-n trong c\u01a1 s\u1edf d\u1eef li\u1ec7u l\u00e0 r\u1ea5t ph\u1ed5 bi\u1ebfn, v\u00ed d\u1ee5 m\u1ed9t \u0111\u1ecba ch\u1ec9 c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u ng\u01b0\u1eddi \u1edf (gia \u0111\u00ecnh).</p> <p>B\u00ecnh th\u01b0\u1eddng, khi c\u00e1c b\u1ea1n t\u1ea1o table trong csdl \u0111\u1ec3 bi\u1ec3u th\u1ecb m\u1ed1i quan h\u1ec7 n\u00e0y, th\u00ec b\u1ea3ng \u0111\u1ea1i di\u1ec7n ph\u00eda nhi\u1ec1u (ph\u00eda n trong c\u00e2u 1-n) s\u1ebd ch\u1ee9a id c\u1ee7a b\u1ea3ng tham chi\u1ebfu (ph\u00eda 1 trong c\u00e2u 1-n)</p> <p>!image</p> <p>Th\u1ec3 hi\u1ec7n m\u1ed7i quan h\u1ec7 n\u00e0y m\u1ed9t c\u00e1ch \u0111\u1ea7y \u0111\u1ee7 trong\u00a0<code>code</code>\u00a0b\u1eb1ng\u00a0<code>Hibernate</code>\u00a0th\u00ec ch\u00fang ta s\u1ebd d\u00f9ng\u00a0<code>@OneToMany</code>\u00a0v\u00e0\u00a0<code>@ManyToOne</code>.</p> <p>Trong b\u00e0i s\u1eed d\u1ee5ng c\u00e1c ki\u1ebfn th\u1ee9c:</p> <ol> <li>Hibernate l\u00e0 g\u00ec?</li> <li>C\u00e1ch s\u1eed d\u1ee5ng Lombok \u0111\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian code</li> </ol>"},{"location":"java/spring-boot/jpa/#tao-project_1","title":"T\u1ea1o project","text":"<p>To\u00e0n b\u1ed9 b\u00e0i vi\u1ebft \u0111\u01b0\u1ee3c up t\u1ea1i\u00a0<code>Github</code>:\u00a0github.com/loda-kun/java-all</p> <p>Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>Gradle</code>\u00a0\u0111\u1ec3 t\u1ea1o m\u1ed9t project c\u00f3 khai b\u00e1o\u00a0<code>Spring Boot</code>\u00a0v\u00e0\u00a0<code>Jpa</code>\u00a0\u0111\u1ec3 h\u1ed7 tr\u1ee3 cho vi\u1ec7c demo\u00a0<code>@ManyToOne</code>.</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 t\u1ea1o 1 project Spring-boot v\u1edbi gradle \u0111\u01a1n gi\u1ea3n t\u1ea1i:\u00a0https://start.spring.io</p> <pre><code>plugins {\n    id 'org.springframework.boot' version '2.1.4.RELEASE'\n    id 'java'\n}\napply plugin: 'io.spring.dependency-management'\n\ngroup 'me.loda.java'\nversion '1.0-SNAPSHOT'\n\nsourceCompatibility = 1.8\n\nconfigurations {\n    compileOnly {\n        extendsFrom annotationProcessor\n    }\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    compileOnly 'org.projectlombok:lombok'\n    runtimeOnly 'com.h2database:h2'\n    annotationProcessor 'org.projectlombok:lombok'\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\n}\n</code></pre> <p>Trong \u1ee9ng d\u1ee5ng tr\u00ean b\u1ea1n s\u1ebd th\u1ea5y c\u00f3\u00a0<code>com.h2database:h2</code>. \u0110\u00e2y l\u00e0 m\u1ed9t\u00a0database, tuy nhi\u00ean n\u00f3 ch\u1ec9 t\u1ed3n t\u1ea1i trong b\u1ed9 nh\u1edb. T\u1ee9c l\u00e0m m\u1ed7i khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y, n\u00f3 s\u1ebd t\u1ea1o database trong\u00a0<code>RAM</code>, v\u00e0 t\u1eaft ch\u01b0\u01a1ng tr\u00ecnh \u0111i n\u00f3 s\u1ebd m\u1ea5t.</p> <p>Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>H2</code>\u00a0thay cho\u00a0<code>MySql</code>\u00a0\u0111\u1ec3 cho.. ti\u1ec7n!</p> <p>Khi t\u1ea1o xong project, s\u1ebd c\u00f3 th\u01b0 m\u1ee5c nh\u01b0 sau:</p> <p>!image</p>"},{"location":"java/spring-boot/jpa/#tao-table_1","title":"T\u1ea1o Table","text":"<p>\u0110\u1ec3 t\u1ea1o table, ch\u00fang ta t\u1ea1o ra c\u00e1c\u00a0<code>Class</code>\u00a0t\u01b0\u01a1ng \u1ee9ng.</p> <pre><code>import java.util.Collection;\n\nimport javax.persistence.CascadeType;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.OneToMany;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\nimport lombok.NoArgsConstructor;\nimport lombok.ToString;\n\n@Entity // \u0110\u00e1nh d\u1ea5u \u0111\u00e2y l\u00e0 table trong db\n@Data // lombok gi\u00fap generate c\u00e1c h\u00e0m constructor, get, set v.v.\n@AllArgsConstructor\n@NoArgsConstructor\npublic class Address {\n\n    @Id //\u0110\u00e1nh d\u1ea5u l\u00e0 primary key\n    @GeneratedValue // Gi\u00fap t\u1ef1 \u0111\u1ed9ng t\u0103ng\n    private Long id;\n\n    private String city;\n    private String province;\n\n    @OneToMany(mappedBy = \"address\", cascade = CascadeType.ALL) // Quan h\u1ec7 1-n v\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng \u1edf d\u01b0\u1edbi (Person) (1 \u0111\u1ecba \u0111i\u1ec3m c\u00f3 nhi\u1ec1u ng\u01b0\u1eddi \u1edf)\n    // MapopedBy tr\u1ecf t\u1edbi t\u00ean bi\u1ebfn Address \u1edf trong Person.\n    @EqualsAndHashCode.Exclude // kh\u00f4ng s\u1eed d\u1ee5ng tr\u01b0\u1eddng n\u00e0y trong equals v\u00e0 hashcode\n    @ToString.Exclude // Khoonhg s\u1eed d\u1ee5ng trong toString()\n    private Collection&lt;Person&gt; persons;\n}\n</code></pre> <pre><code>@Entity\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Person {\n\n    @Id\n    @GeneratedValue\n    private Long id;\n    private String name;\n\n    // Many to One C\u00f3 nhi\u1ec1u ng\u01b0\u1eddi \u1edf 1 \u0111\u1ecba \u0111i\u1ec3m.\n    @ManyToOne\n    @JoinColumn(name = \"address_id\") // th\u00f4ng qua kh\u00f3a ngo\u1ea1i address_id\n    @EqualsAndHashCode.Exclude\n    @ToString.Exclude\n    private Address address;\n}\n</code></pre> <p>N\u1ebfu ch\u00fang ta ch\u01b0a t\u1ea1o ra c\u00e1c table trong c\u01a1 s\u1edf d\u1eef li\u1ec7u, th\u00ec m\u1eb7c \u0111\u1ecbnh\u00a0<code>Hibernate</code>\u00a0s\u1ebd bind d\u1eef li\u1ec7u t\u1eeb class xu\u1ed1ng v\u00e0 t\u1ea1o table cho ch\u00fang ta.</p> <p>B\u1ea1n ph\u1ea3i t\u1ea1o file config\u00a0<code>src\\main\\resources\\application.properties</code>\u00a0nh\u01b0 sau \u0111\u1ec3 k\u1ebft n\u1ed1i t\u1edbi\u00a0<code>H2</code>\u00a0database nh\u00e9:</p> <pre><code>spring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=\n// Kh\u00f4ng c\u00f3 password, v\u00e0o th\u1eb3ng lu\u00f4n\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n\n## Cho ph\u00e9p v\u00e0o xem db th\u00f4ng qua web\nspring.h2.console.enabled=true\n</code></pre>"},{"location":"java/spring-boot/jpa/#chay-thu_1","title":"Ch\u1ea1y th\u1eed","text":"<p>B\u1ea1n t\u1ea1o file\u00a0<code>OneToManyExampleApplication</code>\u00a0v\u00e0 c\u1ea5u h\u00ecnh\u00a0<code>Spring Boot</code>\u00a0v\u00e0 kh\u1edfi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh.</p> <pre><code>@SpringBootApplication\n@RequiredArgsConstructor\npublic class OneToManyExampleApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(OneToManyExampleApplication.class, args);\n    }\n}\n</code></pre> <p>Sau khi ch\u1ea1y xong, h\u00e3y truy c\u1eadp v\u00e0o\u00a0<code>http://localhost:8080/h2-console/</code>\u00a0\u0111\u1ec3 v\u00e0o xem database c\u00f3 g\u00ec nh\u00e9.</p> <p>!image</p> <p>B\u1ea1n s\u1ebd th\u1ea5y n\u00f3 t\u1ea1o table gi\u1ed1ng v\u1edbi m\u00f4 t\u1ea3 \u1edf \u0111\u1ea7u b\u00e0i. V\u1edbi kh\u00f3a ngo\u1ea1i\u00a0<code>address_id</code>\u00a0\u1edf b\u1ea3ng\u00a0<code>person</code>.</p>"},{"location":"java/spring-boot/jpa/#them-du-lieu_1","title":"Th\u00eam d\u1eef li\u1ec7u","text":"<p>\u0110\u1ec3 th\u00eam d\u1eef li\u1ec7u v\u00e0o database, ch\u00fang ta s\u1ebd d\u00f9ng t\u1edbi\u00a0<code>Spring JPA</code>\u00a0.</p> <pre><code>import org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface AddressRepository extends JpaRepository&lt;Address,Long&gt; {\n}\npublic interface PersonRepository extends JpaRepository&lt;Person, Long&gt; {\n}\n</code></pre> <p>Ch\u00fang ta s\u1ebd t\u1ea1o m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh\u00a0<code>Spring Boot</code>\u00a0\u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>CommandLineRunner</code>\u00a0\u0111\u1ec3 ch\u1ea1y code ngay khi kh\u1edfi \u0111\u1ed9ng.</p> <pre><code>import javax.transaction.Transactional;\n\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\nimport com.google.common.collect.Lists;\n\nimport lombok.RequiredArgsConstructor;\n\n@SpringBootApplication\n@RequiredArgsConstructor\npublic class OneToManyExampleApplication implements CommandLineRunner {\n    public static void main(String[] args) {\n        SpringApplication.run(OneToManyExampleApplication.class, args);\n    }\n\n    // S\u1eed d\u1ee5ng @RequiredArgsConstructor v\u00e0 final \u0111\u1ec3 thay cho @Autowired\n    private final PersonRepository personRepository;\n    private final AddressRepository addressRepository;\n\n    @Override\n    public void run(String... args) throws Exception {\n        // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng Address c\u00f3 tham chi\u1ebfu t\u1edbi person\n        Address address = new Address();\n        address.setCity(\"Hanoi\");\n\n        // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng person\n        Person person = new Person();\n        person.setName(\"loda\");\n        person.setAddress(address);\n\n        address.setPersons(Collections.singleton(person));\n        // L\u01b0u v\u00e0o db\n        // Ch\u00fang ta ch\u1ec9 c\u1ea7n l\u01b0u address, v\u00ec cascade = CascadeType.ALL n\u00ean n\u00f3 s\u1ebd l\u01b0u lu\u00f4n Person.\n        addressRepository.saveAndFlush(address);\n\n        // V\u00e0o:http://localhost:8080/h2-console/ \u0111\u1ec3 xem d\u1eef li\u1ec7u \u0111\u00e3 insert\n\n        personRepository.findAll().forEach(p -&gt; {\n            System.out.println(p.getId());\n            System.out.println(p.getName());\n            System.out.println(p.getAddress());\n        });\n\n    }\n}\n//output:\n// 2\n// loda\n// Address(id=1, city=Hanoi, province=null)\n// Ch\u00fang ta \u0111\u00e3 c\u00f3 th\u1ec3 g\u1ecdi tr\u1ef1c ti\u1ebfp address trong person sau khi query\n</code></pre> <p>K\u1ebft qu\u1ea3 trong database l\u00fac n\u00e0y:</p> <p>!image</p> <p>B\u00e0i vi\u1ebft c\u1ee7a m\u00ecnh kh\u00f4ng c\u00f2n g\u00ec \u0111\u1ec3 ng\u1eafn h\u01a1n \u0111\u01b0\u1ee3c n\u1eefa :((( th\u1eadt h\u1ed5 th\u1eb9n, m\u00ecnh c\u00f3 up code l\u00ean \u0111\u00e2y, b\u1ea1n ch\u1ea1y code c\u00e1i l\u00e0 hi\u1ec3u li\u1ec1n \u00e0:</p> <p>Ch\u00fac c\u00e1c b\u1ea1n h\u1ecdc t\u1eadp th\u1eadt t\u1ed1t! ahuu</p> <ol> <li>\ud83e\ude82\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng @OneToOne</li> <li>\ud83d\udef5\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @ManyToMany</li> </ol> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/jpa/#jpahuong-dan-manytomany","title":"\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @ManyToMany","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>T\u1ea1o project</li> <li>T\u1ea1o Table</li> <li>Ch\u1ea1y th\u1eed</li> <li>Th\u00eam d\u1eef li\u1ec7u</li> </ul>"},{"location":"java/spring-boot/jpa/#gioi-thieu_4","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00e1ch bi\u1ec3u th\u1ecb quan h\u1ec7 n-n trong c\u01a1 s\u1edf d\u1eef li\u1ec7u l\u00e0 r\u1ea5t ph\u1ed5 bi\u1ebfn, v\u00ed d\u1ee5 m\u1ed9t \u0111\u1ecba ch\u1ec9 c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u ng\u01b0\u1eddi \u1edf (gia \u0111\u00ecnh). v\u00e0 m\u1ed9t ng\u01b0\u1eddi c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u h\u01a1n m\u1ed9t \u0111\u1ecba ch\u1ec9.</p> <p>B\u00ecnh th\u01b0\u1eddng, khi c\u00e1c b\u1ea1n t\u1ea1o table trong csdl \u0111\u1ec3 bi\u1ec3u th\u1ecb m\u1ed1i quan h\u1ec7 n\u00e0y, ch\u00fang ta s\u1ebd t\u1ea1o ra m\u1ed9t b\u1ea3ng m\u1edbi, tham chi\u1ebfu t\u1edbi c\u1ea3 b\u1ea3ng n\u00e0y.</p> <p>!image</p> <p>Th\u1ec3 hi\u1ec7n m\u1ed7i quan h\u1ec7 n\u00e0y m\u1ed9t c\u00e1ch \u0111\u1ea7y \u0111\u1ee7 trong\u00a0<code>code</code>\u00a0b\u1eb1ng\u00a0<code>Hibernate</code>\u00a0th\u00ec ch\u00fang ta s\u1ebd d\u00f9ng\u00a0<code>@ManyToMany</code></p> <p>Trong b\u00e0i s\u1eed d\u1ee5ng c\u00e1c ki\u1ebfn th\u1ee9c:</p> <ol> <li>Hibernate l\u00e0 g\u00ec?</li> <li>C\u00e1ch s\u1eed d\u1ee5ng Lombok \u0111\u1ec3 ti\u1ebft ki\u1ec7m th\u1eddi gian code</li> </ol>"},{"location":"java/spring-boot/jpa/#tao-project_2","title":"T\u1ea1o project","text":"<p>To\u00e0n b\u1ed9 b\u00e0i vi\u1ebft \u0111\u01b0\u1ee3c up t\u1ea1i\u00a0<code>Github</code>:\u00a0github.com/loda-kun/java-all</p> <p>Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>Gradle</code>\u00a0\u0111\u1ec3 t\u1ea1o m\u1ed9t project c\u00f3 khai b\u00e1o\u00a0<code>Spring Boot</code>\u00a0v\u00e0\u00a0<code>Jpa</code>\u00a0\u0111\u1ec3 h\u1ed7 tr\u1ee3 cho vi\u1ec7c demo\u00a0<code>@ManyToMany</code>.</p> <p>C\u00e1c b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 t\u1ea1o 1 project Spring-boot v\u1edbi gradle \u0111\u01a1n gi\u1ea3n t\u1ea1i:\u00a0https://start.spring.io</p> <pre><code>plugins {\n    id 'org.springframework.boot' version '2.1.4.RELEASE'\n    id 'java'\n}\napply plugin: 'io.spring.dependency-management'\n\ngroup 'me.loda.java'\nversion '1.0-SNAPSHOT'\n\nsourceCompatibility = 1.8\n\nconfigurations {\n    compileOnly {\n        extendsFrom annotationProcessor\n    }\n}\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n    implementation 'org.springframework.boot:spring-boot-starter-web'\n    compileOnly 'org.projectlombok:lombok'\n    runtimeOnly 'com.h2database:h2'\n    annotationProcessor 'org.projectlombok:lombok'\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\n}\n</code></pre> <p>Trong \u1ee9ng d\u1ee5ng tr\u00ean b\u1ea1n s\u1ebd th\u1ea5y c\u00f3\u00a0<code>com.h2database:h2</code>. \u0110\u00e2y l\u00e0 m\u1ed9t\u00a0database, tuy nhi\u00ean n\u00f3 ch\u1ec9 t\u1ed3n t\u1ea1i trong b\u1ed9 nh\u1edb. T\u1ee9c l\u00e0m m\u1ed7i khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y, n\u00f3 s\u1ebd t\u1ea1o database trong\u00a0<code>RAM</code>, v\u00e0 t\u1eaft ch\u01b0\u01a1ng tr\u00ecnh \u0111i n\u00f3 s\u1ebd m\u1ea5t.</p> <p>Ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>H2</code>\u00a0thay cho\u00a0<code>MySql</code>\u00a0\u0111\u1ec3 cho.. ti\u1ec7n!</p> <p>Khi t\u1ea1o xong project, s\u1ebd c\u00f3 th\u01b0 m\u1ee5c nh\u01b0 sau:</p> <p>!image</p>"},{"location":"java/spring-boot/jpa/#tao-table_2","title":"T\u1ea1o Table","text":"<p>\u0110\u1ec3 t\u1ea1o table, ch\u00fang ta t\u1ea1o ra c\u00e1c\u00a0<code>Class</code>\u00a0t\u01b0\u01a1ng \u1ee9ng.</p> <pre><code>import java.util.Collection;\n\nimport javax.persistence.CascadeType;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.JoinTable;\nimport javax.persistence.ManyToMany;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\nimport lombok.NoArgsConstructor;\nimport lombok.ToString;\n\n@Entity // \u0110\u00e1nh d\u1ea5u \u0111\u00e2y l\u00e0 table trong db\n@Data // lombok gi\u00fap generate c\u00e1c h\u00e0m constructor, get, set v.v.\n@AllArgsConstructor\n@NoArgsConstructor\n@Builder\npublic class Address {\n\n    @Id //\u0110\u00e1nh d\u1ea5u l\u00e0 primary key\n    @GeneratedValue // Gi\u00fap t\u1ef1 \u0111\u1ed9ng t\u0103ng\n    private Long id;\n\n    private String city;\n    private String province;\n\n    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)\n    // Quan h\u1ec7 n-n v\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng \u1edf d\u01b0\u1edbi (Person) (1 \u0111\u1ecba \u0111i\u1ec3m c\u00f3 nhi\u1ec1u ng\u01b0\u1eddi \u1edf)\n    @EqualsAndHashCode.Exclude // kh\u00f4ng s\u1eed d\u1ee5ng tr\u01b0\u1eddng n\u00e0y trong equals v\u00e0 hashcode\n    @ToString.Exclude // Khoonhg s\u1eed d\u1ee5ng trong toString()\n\n    @JoinTable(name = \"address_person\", //T\u1ea1o ra m\u1ed9t join Table t\u00ean l\u00e0 \"address_person\"\n            joinColumns = @JoinColumn(name = \"address_id\"),  // TRong \u0111\u00f3, kh\u00f3a ngo\u1ea1i ch\u00ednh l\u00e0 address_id tr\u1ecf t\u1edbi class hi\u1ec7n t\u1ea1i (Address)\n            inverseJoinColumns = @JoinColumn(name = \"person_id\") //Kh\u00f3a ngo\u1ea1i th\u1ee9 2 tr\u1ecf t\u1edbi thu\u1ed9c t\u00ednh \u1edf d\u01b0\u1edbi (Person)\n    )\n    private Collection&lt;Person&gt; persons;\n}\n</code></pre> <pre><code>@Entity\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\n@Builder\npublic class Person {\n\n    @Id\n    @GeneratedValue\n    private Long id;\n    private String name;\n\n    // mappedBy tr\u1ecf t\u1edbi t\u00ean bi\u1ebfn persons \u1edf trong Address.\n    @ManyToMany(mappedBy = \"persons\")\n    // LAZY \u0111\u1ec3 tr\u00e1nh vi\u1ec7c truy xu\u1ea5t d\u1eef li\u1ec7u kh\u00f4ng c\u1ea7n thi\u1ebft. L\u00fac n\u00e0o c\u1ea7n th\u00ec m\u1edbi query\n    @EqualsAndHashCode.Exclude\n    @Exclude\n    private Collection&lt;Address&gt; addresses;\n}\n</code></pre> <p>N\u1ebfu ch\u00fang ta ch\u01b0a t\u1ea1o ra c\u00e1c table trong c\u01a1 s\u1edf d\u1eef li\u1ec7u, th\u00ec m\u1eb7c \u0111\u1ecbnh\u00a0<code>Hibernate</code>\u00a0s\u1ebd bind d\u1eef li\u1ec7u t\u1eeb class xu\u1ed1ng v\u00e0 t\u1ea1o table cho ch\u00fang ta.</p> <p>B\u1ea1n ph\u1ea3i t\u1ea1o file config\u00a0<code>src\\main\\resources\\application.properties</code>\u00a0nh\u01b0 sau \u0111\u1ec3 k\u1ebft n\u1ed1i t\u1edbi\u00a0<code>H2</code>\u00a0database nh\u00e9:</p> <pre><code>spring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=\n// Kh\u00f4ng c\u00f3 password, v\u00e0o th\u1eb3ng lu\u00f4n\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n\n## Cho ph\u00e9p v\u00e0o xem db th\u00f4ng qua web\nspring.h2.console.enabled=true\n</code></pre>"},{"location":"java/spring-boot/jpa/#chay-thu_2","title":"Ch\u1ea1y th\u1eed","text":"<p>B\u1ea1n t\u1ea1o file\u00a0<code>ManyToManyExampleApplication</code>\u00a0v\u00e0 c\u1ea5u h\u00ecnh\u00a0<code>Spring Boot</code>\u00a0v\u00e0 kh\u1edfi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh.</p> <pre><code>@SpringBootApplication\n@RequiredArgsConstructor\npublic class ManyToManyExampleApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(ManyToManyExampleApplication.class, args);\n    }\n}\n</code></pre> <p>Sau khi ch\u1ea1y xong, h\u00e3y truy c\u1eadp v\u00e0o\u00a0<code>http://localhost:8080/h2-console/</code>\u00a0\u0111\u1ec3 v\u00e0o xem database c\u00f3 g\u00ec nh\u00e9.</p> <p>!image</p> <p>B\u1ea1n s\u1ebd th\u1ea5y n\u00f3 t\u1ea1o table gi\u1ed1ng v\u1edbi m\u00f4 t\u1ea3 \u1edf \u0111\u1ea7u b\u00e0i. G\u1ed3m c\u00f3 hai b\u1ea3ng ch\u00ednh l\u00e0\u00a0<code>address</code>\u00a0v\u00e0\u00a0<code>person</code>. Ngo\u00e0i ra, s\u1ebd t\u1ea1o ra m\u1ed9t b\u1ea3ng trung gian \u1edf gi\u1eefa li\u00ean k\u1ebft hai b\u1ea3ng l\u00e0\u00a0<code>address_person</code>.</p>"},{"location":"java/spring-boot/jpa/#them-du-lieu_2","title":"Th\u00eam d\u1eef li\u1ec7u","text":"<p>\u0110\u1ec3 th\u00eam d\u1eef li\u1ec7u v\u00e0o database, ch\u00fang ta s\u1ebd d\u00f9ng t\u1edbi\u00a0<code>Spring JPA</code>\u00a0.</p> <pre><code>import org.springframework.data.jpa.repository.JpaRepository;\n\npublic interface AddressRepository extends JpaRepository&lt;Address,Long&gt; {\n}\npublic interface PersonRepository extends JpaRepository&lt;Person, Long&gt; {\n}\n</code></pre> <p>Ch\u00fang ta s\u1ebd t\u1ea1o m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh\u00a0<code>Spring Boot</code>\u00a0\u0111\u01a1n gi\u1ea3n b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>CommandLineRunner</code>\u00a0\u0111\u1ec3 ch\u1ea1y code ngay khi kh\u1edfi \u0111\u1ed9ng.</p> <pre><code>import javax.transaction.Transactional;\n\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\nimport com.google.common.collect.Lists;\n\nimport lombok.RequiredArgsConstructor;\n\n@SpringBootApplication\n@RequiredArgsConstructor\npublic class ManyToManyExampleApplication implements CommandLineRunner {\n    public static void main(String[] args) {\n        SpringApplication.run(ManyToManyExampleApplication.class, args);\n    }\n\n    // S\u1eed d\u1ee5ng @RequiredArgsConstructor v\u00e0 final \u0111\u1ec3 thay cho @Autowired\n    private final PersonRepository personRepository;\n    private final AddressRepository addressRepository;\n\n    @Override\n    @Transactional\n    public void run(String... args) throws Exception {\n        // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng Address\n        Address hanoi = Address.builder()\n                                 .city(\"hanoi\")\n                                 .build();\n        Address hatay = Address.builder()\n                               .city(\"hatay\")\n                               .build();\n\n        // T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng person\n        Person person1 = Person.builder()\n                              .name(\"loda1\")\n                              .build();\n        Person person2 = Person.builder()\n                              .name(\"loda2\")\n                              .build();\n\n        // set Persons v\u00e0o address\n        hanoi.setPersons(Lists.newArrayList(person1, person2));\n        hatay.setPersons(Lists.newArrayList(person1));\n\n        // L\u01b0u v\u00e0o db\n        // Ch\u00fang ta ch\u1ec9 c\u1ea7n l\u01b0u address, v\u00ec cascade = CascadeType.ALL n\u00ean n\u00f3 s\u1ebd l\u01b0u lu\u00f4n Person.\n        addressRepository.saveAndFlush(hanoi);\n        addressRepository.saveAndFlush(hatay);\n\n        // V\u00e0o:http://localhost:8080/h2-console/ \u0111\u1ec3 xem d\u1eef li\u1ec7u \u0111\u00e3 insert\n\n        Address queryResult = addressRepository.findById(1L).get();\n        System.out.println(queryResult.getCity());\n        System.out.println(queryResult.getPersons());\n\n    }\n\n}\n// Output:\n// hanoi\n// [Person(id=2, name=loda1), Person(id=3, name=loda2)]\n</code></pre> <p>L\u01b0u \u00fd \u1edf \u0111\u00e2y ch\u00fang ta d\u00f9ng\u00a0<code>@Transactional</code>. \u0110\u00ea khi\u1ebfn to\u00e0n b\u1ed9 code ch\u1ea1y trong h\u00e0m \u0111\u1ec1u n\u1eb1m trong\u00a0<code>Session</code>\u00a0qu\u1ea3n l\u00fd c\u1ee7a\u00a0<code>Hibernate</code>.</p> <p>N\u1ebfu kh\u00f4ng c\u00f3\u00a0<code>@Transactional</code>\u00a0th\u00ec vi\u1ec7c b\u1ea1n g\u1ecdi\u00a0<code>address.getPersons()</code>\u00a0s\u1ebd b\u1ecb l\u1ed7i, v\u00ec n\u00f3 kh\u00f4ng th\u1ec3 query xu\u1ed1ng database \u0111\u1ec3 l\u1ea5y d\u1eef li\u1ec7u person l\u00ean \u0111\u01b0\u1ee3c. B\u1ea1n ghi nh\u1edb ch\u1ed7 n\u00e0y nh\u00e9.</p> <p>K\u1ebft qu\u1ea3 trong database l\u00fac n\u00e0y:</p> <p><code>Address</code></p> <p>!image</p> <p>!image</p> <p>!image</p> <p>B\u00e0i vi\u1ebft c\u1ee7a m\u00ecnh kh\u00f4ng c\u00f2n g\u00ec \u0111\u1ec3 ng\u1eafn h\u01a1n \u0111\u01b0\u1ee3c n\u1eefa :((( th\u1eadt h\u1ed5 th\u1eb9n, m\u00ecnh c\u00f3 up code l\u00ean \u0111\u00e2y, b\u1ea1n ch\u1ea1y code c\u00e1i l\u00e0 hi\u1ec3u li\u1ec1n \u00e0:</p> <p>Ch\u00fac c\u00e1c b\u1ea1n h\u1ecdc t\u1eadp th\u1eadt t\u1ed1t! ahuu</p> <ol> <li>\ud83e\ude82\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng @OneToOne</li> <li>\ud83d\ude85\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn @OneToMany v\u00e0 @ManyToOne</li> </ol> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/jpa/#jpahuong-dan-query-phan-trang-bang-pageable-phan-1","title":"\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn Query ph\u00e2n trang b\u1eb1ng Pageable (Ph\u1ea7n 1)","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e0i \u0111\u1eb7t</li> <li>T\u1ea1o Model v\u00e0 Repository</li> <li>Pageable</li> <li>Sorting</li> <li>Note</li> <li>V\u00ed d\u1ee5 DEMO</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/jpa/#gioi-thieu_5","title":"Gi\u1edbi thi\u1ec7u","text":"<p>\u0110i\u1ec1u n\u00e0y c\u00f3 l\u1ebd ai c\u0169ng bi\u1ebft, \u0111\u00f3 l\u00e0 \u0111a ph\u1ea7n ch\u00fang ta kh\u00f4ng l\u1ea5y to\u00e0n b\u1ed9 d\u1eef li\u1ec7u t\u1eeb Database l\u00ean, m\u00e0 ch\u1ec9 l\u1ea5y m\u1ed9t s\u1ed1 l\u01b0\u1ee3ng nh\u1ea5t \u0111\u1ecbnh, v\u00e0 chia n\u00f3 th\u00e0nh nhi\u1ec1u trang.</p> <p>M\u00e0 c\u00e1i blog n\u00e0y c\u0169ng l\u00e0 v\u00ed d\u1ee5 \u0111i\u1ec3n h\u00ecnh:</p> <p>!image</p> <p>T\u00f4i chia d\u1eef li\u1ec7u th\u00e0nh nhi\u1ec1u trang kh\u00e1c nhau, v\u1edbi m\u1ed7i trang th\u00ec s\u1ebd l\u1ea5y ra c\u00e1c b\u00e0i vi\u1ebft c\u1ea7n thi\u1ebft.</p> <p>T\u1ea1o sao c\u1ea7n d\u00f9ng ph\u00e2n trang? v\u00ec n\u00f3 gi\u00fap ti\u1ebft ki\u1ec7m b\u0103ng th\u00f4ng v\u00e0 t\u0103ng t\u1ed1c x\u1eed l\u00fd, ngo\u00e0i ra n\u00f3 c\u0169ng gi\u1ea3m thi\u1ec3u vi\u1ec7c hi\u1ec3n th\u1ecb c\u00e1c th\u00f4ng tin th\u1eeba kh\u00f4ng c\u1ea7n thi\u1ebft.</p> <p>Ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u c\u00e1c l\u00e0m vi\u1ec7c n\u00e0y b\u1eb1ng\u00a0<code>JPA Pageable</code></p> <p>N\u1ebfu ch\u01b0a bi\u1ebft Spring JPA th\u00ec xem t\u1ea1i \u0111\u00e2y:</p> <ol> <li>Hibernate l\u00e0 g\u00ec?</li> <li>Spring JPA</li> </ol>"},{"location":"java/spring-boot/jpa/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Nh\u1edb th\u00eam\u00a0<code>spring-boot-starter-data-jpa</code>\u00a0v\u00e0o dependencies c\u1ee7a b\u1ea1n.</p> <p>Trong ph\u1ea7n n\u00e0y, t\u00f4i x\u00e0i H2 database \u0111\u1ec3 demo. (h2 l\u00e0 d\u1ea1ng memory database, n\u00f3 s\u1ebd l\u01b0u trong ram v\u00e0 khi t\u1eaft ch\u01b0\u01a1ng tr\u00ecnh n\u00f3 s\u1ebd m\u1ea5t s\u1ea1ch)</p> <p>pom.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;packaging&gt;pom&lt;/packaging&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.0.5.RELEASE&lt;/version&gt;\n        &lt;relativePath /&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;me.loda.spring&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-learning&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;spring-boot-learning&lt;/name&gt;\n    &lt;description&gt;Everything about Spring Boot&lt;/description&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n\n        &lt;!--spring mvc, rest--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;!--spring jpa--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;!-- h2 database --&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.h2database&lt;/groupId&gt;\n            &lt;artifactId&gt;h2&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n        &lt;plugin&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n        &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre> <p>C\u1ea5u tr\u00fac th\u01b0 m\u1ee5c:</p> <p>!image</p>"},{"location":"java/spring-boot/jpa/#tao-model-va-repository","title":"T\u1ea1o Model v\u00e0 Repository","text":"<p>T\u1ea1o ra class\u00a0<code>User</code>\u00a0v\u00e0 insert s\u1eb5n 100\u00a0<code>User</code>\u00a0v\u00e0o Database.</p> <p>User.java</p> <pre><code>@Entity\n@Data\n@Builder\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String name;\n}\n</code></pre> <p>UserRepository.java</p> <pre><code>public interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n\n}\n</code></pre> <p>DatasourceConfig.java</p> <pre><code>@Configuration\n@RequiredArgsConstructor\npublic class DatasourceConfig {\n    // inject b\u1edfi RequiredArgsConstructor\n    private final UserRepository userRepository;\n\n    // Ch\u1ec9 \u00e1p d\u1ee5ng trong demo :D\n    @PostConstruct\n    public void initData() {\n        // Insert 100 User v\u00e0o H2 Database sau khi\n        // DatasourceConfig \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\n        userRepository.saveAll(IntStream.range(0, 100)\n                                        .mapToObj(i -&gt; User.builder()\n                                                           .name(\"name-\" + i)\n                                                           .build())\n                                        .collect(Collectors.toList())\n        );\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/jpa/#pageable","title":"Pageable","text":"<p>Ukie, gi\u1ea3 s\u1eed b\u00e2y gi\u1edd ch\u00fang ta c\u00f3 100 record trong DB r\u1ed3i.</p> <p>\u0110\u1ec3 c\u00f3 th\u1ec3 query l\u1ea5y d\u1eef li\u1ec7u theo d\u1ea1ng Page,\u00a0Spring Data JPA\u00a0h\u1ed7 tr\u1ee3 ch\u00fang ta b\u1eb1ng \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>Pageable</code>.</p> <p>H\u00e0m\u00a0<code>findAll(Pageable pageable)</code>\u00a0l\u00e0 c\u00f3 s\u1eb5n v\u00e0 tr\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>Page&lt;T&gt;</code></p> <pre><code>// L\u1ea5y ra 5 user \u0111\u1ea7u ti\u00ean\n// PageRequest.of(0,5) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi l\u1ea5y ra page \u0111\u1ea7u ti\u00ean, v\u00e0 m\u1ed7i page s\u1ebd c\u00f3 5 ph\u1ea7n t\u1eed\n// PageRequest l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng k\u1ebf th\u1eeba Pageable\nPage&lt;User&gt; page = userRepository.findAll(PageRequest.of(0, 5));\n</code></pre> <p>\u0110\u1ec3 l\u1ea5y ra 5\u00a0<code>User</code>\u00a0ti\u1ebfp theo, ch\u00fang ta c\u00f3 th\u1ec3 l\u00e0m theo 2 c\u00e1ch:</p> <pre><code>// t\u1eadn d\u1ee5ng \u0111\u1ed1i t\u01b0\u1ee3ng Page tr\u01b0\u1edbc \u0111\u00f3\npage.nextPageable()\n\n// S\u1eed d\u1ee5ng PageRequest m\u1edbi\nPageRequest.of(1, 5)\n</code></pre>"},{"location":"java/spring-boot/jpa/#sorting","title":"Sorting","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 query d\u1ea1ng\u00a0<code>Page</code>\u00a0k\u00e8m theo y\u00eau c\u1ea7u sorting theo m\u1ed9t tr\u01b0\u1eddng n\u00e0o \u0111\u00f3.</p> <pre><code>Page&lt;User&gt; page = userRepository.findAll(PageRequest.of(1, 5, Sort.by(\"name\").descending()));\n</code></pre>"},{"location":"java/spring-boot/jpa/#note","title":"Note","text":"<p>Ngo\u00e0i ra, b\u1ea1n ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 t\u1ef1 custom \u0111\u1ec3 h\u00e0m tr\u1ea3 v\u1ec1\u00a0<code>Page&lt;T&gt;</code>,\u00a0<code>Slice&lt;T&gt;</code>,\u00a0<code>List&lt;T&gt;</code>.</p> <pre><code>public interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n    List&lt;User&gt; findAllByNameLike(String name, Pageable pageable);\n}\n</code></pre>"},{"location":"java/spring-boot/jpa/#vi-du-demo","title":"V\u00ed d\u1ee5 DEMO","text":"<pre><code>@SpringBootApplication\n@RequiredArgsConstructor\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n\n    private final UserRepository userRepository;\n\n    @Bean\n    CommandLineRunner run() {\n        return args -&gt; {\n            // L\u1ea5y ra 5 user \u0111\u1ea7u ti\u00ean\n            // PageRequest.of(0,5) t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi l\u1ea5y ra page \u0111\u1ea7u ti\u00ean, v\u00e0 m\u1ed7i page s\u1ebd c\u00f3 5 ph\u1ea7n t\u1eed\n            Page&lt;User&gt; page = userRepository.findAll(PageRequest.of(0, 5));\n            // In ra 5 user \u0111\u1ea7u ti\u00ean\n            System.out.println(\"In ra 5 user \u0111\u1ea7u ti\u00ean: \");\n            page.forEach(System.out::println);\n            // L\u1ea5y ra 5 user ti\u1ebfp theo\n            page = userRepository.findAll(page.nextPageable());\n\n            System.out.println(\"In ra 5 user ti\u1ebfp theo: \");\n            page.forEach(System.out::println);\n\n            System.out.println(\"In ra s\u1ed1 l\u01b0\u1ee3ng user \u1edf page hi\u1ec7n t\u1ea1i: \" + page.getSize());\n            System.out.println(\"In ra t\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng user: \" + page.getTotalElements());\n            System.out.println(\"In ra t\u1ed5ng s\u1ed1 page: \" + page.getTotalPages());\n\n            // L\u1ea5y ra 5 user \u1edf page 1, sort theo t\u00ean\n            page = userRepository.findAll(PageRequest.of(1, 5, Sort.by(\"name\").descending()));\n            System.out.println(\"In ra 5 user page 1, s\u1eafp x\u1ebfp theo name descending:\");\n            page.forEach(System.out::println);\n\n            // Custom method\n            List&lt;User&gt; list = userRepository.findAllByNameLike(\"name-%\", PageRequest.of(0, 5));\n            System.out.println(list);\n        };\n    }\n\n}\n</code></pre> <p>Output:</p> <pre><code>In ra 5 user \u0111\u1ea7u ti\u00ean:\nUser(id=1, name=name-0)\nUser(id=2, name=name-1)\nUser(id=3, name=name-2)\nUser(id=4, name=name-3)\nUser(id=5, name=name-4)\n\nIn ra 5 user ti\u1ebfp theo:\nUser(id=6, name=name-5)\nUser(id=7, name=name-6)\nUser(id=8, name=name-7)\nUser(id=9, name=name-8)\nUser(id=10, name=name-9)\n\nIn ra s\u1ed1 l\u01b0\u1ee3ng user \u1edf page hi\u1ec7n t\u1ea1i: 5\nIn ra t\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng user: 100\nIn ra t\u1ed5ng s\u1ed1 page: 20\n\nIn ra 5 user page 1, s\u1eafp x\u1ebfp theo name descending:\nUser(id=95, name=name-94)\nUser(id=94, name=name-93)\nUser(id=93, name=name-92)\nUser(id=92, name=name-91)\nUser(id=91, name=name-90)\n\nCustom Method\n[User(id=1, name=name-0), User(id=2, name=name-1), User(id=3, name=name-2), User(id=4, name=name-3), User(id=5, name=name-4)]\n</code></pre>"},{"location":"java/spring-boot/jpa/#ket_1","title":"K\u1ebft","text":"<p><code>Pageable</code>\u00a0l\u00e0 m\u1ed9t c\u00e1ch ti\u1ebfp c\u1eadn r\u1ea5t ti\u1ec7n l\u1ee3i, tuy nhi\u00ean b\u1ea1n c\u1ea7n bi\u1ebft r\u1eb1ng c\u00e1c h\u00e0m s\u1eed d\u1ee5ng\u00a0<code>Pageable</code>\u00a0s\u1ebd th\u1ef1c hi\u1ec7n query 2 l\u1ea7n xu\u1ed1ng DB. M\u1ed9t l\u1ea7n l\u00e0 \u0111\u1ec3 l\u1ea5y ra t\u1ed5ng s\u1ed1 l\u01b0\u1ee3ng b\u1ea3n ghi, m\u1ed9t l\u1ea7n l\u00e0 query l\u1ea5y ra page b\u1ea1n c\u1ea7n. C\u00e1i n\u00e0y t\u00f4i s\u1ebd n\u00f3i k\u0129 h\u01a1n \u1edf b\u00e0i sau \u0111\u1ec3 ch\u00fang ta t\u1ed1i \u01b0u hi\u1ec7u n\u0103ng</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/jpa/#jpahuong-dan-su-dung-criteria-api-trong-hibernate","title":"\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng Criteria API trong Hibernate","text":"<p><code>JPA Criteria API</code>\u00a0cho ph\u00e9p ta t\u1ea1o ra c\u00e1c c\u00e2u truy v\u1ea5n b\u1eb1ng Java Object thay v\u00ec vi\u1ec7c khai b\u00e1o tr\u1ef1c ti\u1ebfp trong\u00a0<code>String</code>\u00a0(JPQL) nh\u01b0 th\u1ebf n\u00e0y:</p> <p>T\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi c\u00e2u l\u1ec7nh tr\u00ean nh\u01b0ng x\u00e2y d\u1ef1ng b\u1eb1ng\u00a0<code>Criteria API</code>\u00a0th\u00ec s\u1ebd nh\u01b0 n\u00e0y:</p> <pre><code>CriteriaBuilder cb = em.getCriteriaBuilder();\n\nCriteriaQuery&lt;Office&gt; q = cb.createQuery(Office.class);\nRoot&lt;Office&gt; c = q.from(Office.class);\nq.select(c);\n</code></pre> <p>Nh\u00ecn c\u00f3 v\u1ebb d\u00e0i d\u00f2ng v\u00e0 kh\u00f3 hi\u1ec3u ph\u1ea3i kh\u00f4ng &gt;\"&lt; Yea, th\u00ec \u0111\u00fang l\u00e0 nh\u01b0 th\u1ebf \u0111\u1ea5y ==!</p> <p>N\u1ebfu n\u00f3 d\u00e0i d\u00f2ng nh\u01b0 v\u1eady, t\u1ea1i sao ng\u01b0\u1eddi ta l\u1ea1i t\u1ea1o ra v\u00e0 s\u1eed d\u1ee5ng n\u00f3 thay cho c\u00e2u l\u1ec7nh\u00a0<code>JPQL</code>\u00a0b\u00ecnh th\u01b0\u1eddng? C\u00e1c b\u1ea1n \u0111\u1ecdc ph\u1ea7n ti\u1ebfp theo s\u1ebd r\u00f5 nha.</p>"},{"location":"java/spring-boot/jpa/#jpql-vs-criteria-api","title":"JPQL vs Criteria API","text":"<p><code>JPQL</code>\u00a0c\u00f3 th\u1ec3 l\u00e0m \u0111\u1ea7y \u0111\u1ee7 ch\u1ee9c n\u0103ng ch\u00fang ta c\u1ea7n ch\u1ec9 v\u1edbi 1 c\u00e2u l\u1ec7nh, tuy nhi\u00ean, ch\u00ednh v\u00ec \u0111i\u1ec1u \u0111\u00f3, ch\u00fang ta th\u01b0\u1eddng kh\u00f3 t\u00f9y bi\u1ebfn hay s\u1eed d\u1ee5ng l\u1ea1i n\u00f3, th\u1eadm ch\u00ed kh\u00f3 ki\u1ec3m so\u00e1t l\u1ed7i c\u1ee7a n\u00f3 h\u01a1n. V\u1edbi m\u1ed9t c\u00e2u l\u1ec7nh ph\u1ee9c t\u1ea1p, ch\u00fang ta kh\u00f4ng bi\u1ebft \u0111\u01b0\u1ee3c n\u00f3 c\u00f3 l\u1ed7i hay kh\u00f4ng cho t\u1edbi khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh hay debug (M\u00e0 ch\u01b0\u01a1ng tr\u00ecnh \u0111\u00e3 ch\u1ea1y \u0111\u01b0\u1ee3c r\u1ed3i th\u00ec v\u1eabn c\u00f3 l\u1ed7i ti\u1ec1m \u1ea9n :v ch\u1eddi \u0111\u1eadu).</p> <p><code>Criteria API</code>\u00a0th\u00ec ng\u01b0\u1ee3c l\u1ea1i, n\u00f3 cho ph\u00e9p ch\u00fang ta x\u00e2y d\u1ef1ng c\u00e2u l\u1ec7nh m\u1ed9t c\u00e1ch\u00a0<code>Dynamic</code>, r\u1ea5t linh \u0111\u1ed9ng, v\u00e0 kh\u00f4ng b\u1ecb\u00a0<code>hardcode</code>\u00a0trong m\u1ed9t\u00a0<code>String</code>\u00a0v\u00e0 c\u00f3 th\u1ec3\u00a0<code>t\u00e1i s\u1eed d\u1ee5ng</code>\u00a0l\u1ea1i \u0111\u01b0\u1ee3c. \u0110\u1eb7c bi\u1ec7t, v\u00ec l\u00e0 Java Object, n\u00ean ch\u00fang ta s\u1ebd bi\u1ebft m\u1ed9t c\u00e2u l\u1ec7nh b\u1ecb l\u1ed7i, kh\u00f4ng \u0111\u00fang quy t\u1eafc ngay khi bi\u00ean d\u1ecbch ch\u01b0\u01a1ng tr\u00ecnh r\u1ed3i.</p> <p>T\u00fam v\u00e1y l\u1ea1i, v\u1edbi m\u1ed9t l\u1ec7nh \u0111\u01a1n gi\u1ea3n nh\u01b0 v\u00ed d\u1ee5 \u0111\u1ea7u b\u00e0i, th\u00ec c\u00e1c b\u1ea1n n\u00ean x\u00e0i\u00a0<code>JPQL</code>, c\u00f2n v\u1edbi nh\u1eefng c\u00e2u l\u1ec7nh ph\u1ee9c h\u1ee3p, thay \u0111\u1ed5i theo\u00a0<code>context</code>\u00a0c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh th\u00ec n\u00ean s\u1eed d\u1ee5ng\u00a0<code>Criteria</code>.</p>"},{"location":"java/spring-boot/jpa/#how-to-use","title":"How to use.","text":"<p>Quay tr\u1edf l\u1ea1i v\u1edbi v\u00ed d\u1ee5 ban \u0111\u1ea7u nh\u00e9:</p> <pre><code>CriteriaBuilder builder = em.getCriteriaBuilder();\n\nCriteriaQuery&lt;Office&gt; query =  builder.createQuery(Office.class);\nRoot&lt;Office&gt; root = query.from(Office.class);\nquery.select(root);\n</code></pre> <p>Ch\u00fang ta c\u00f9ng t\u00ecm hi\u1ec3u t\u1eebng d\u00f2ng l\u1ec7nh:</p> <ul> <li><code>CriteriaBuilder</code>: \u0110\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t c\u00e2u query, c\u00e1c b\u1ea1n s\u1ebd c\u1ea7n t\u1edbi\u00a0<code>interface``CriteriaBuilder</code>, m\u1ee5c \u0111\u00edch c\u1ee7a n\u00f3 l\u00e0 gi\u00fap t\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ee9a c\u00e2u l\u1ec7nh truy v\u1ea5n\u00a0<code>CriteriaQuery</code>\u00a0v\u00e0 cung c\u1ea5p c\u01a1 s\u1ed1 c\u00e1c ph\u00e9p bi\u1ebfn \u0111\u1ed5i, ph\u00e9p logic, \u0111i\u1ec1u ki\u1ec7n cho c\u00e2u l\u1ec7nh (and, or, not, avg, greater than,v.v...)</li> <li> <p><code>CriteriaQuery</code>: \u0110\u1ed1i t\u01b0\u1ee3ng ch\u00ednh c\u1ee7a ch\u00fang ta \u0111\u00e2y, n\u00f3 \u0111\u01b0\u1ee3c t\u1ea1o ra b\u1edfi\u00a0<code>builder.createQuery(Office.class)</code>. M\u1ee5c \u0111\u00edch l\u00e0 khai b\u00e1o \u0111\u1ed1i t\u01b0\u1ee3ng b\u1ea1n mu\u1ed1n l\u1ea5y ra sau khi th\u1ef1c hi\u1ec7n query. N\u00f3 t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \u0111o\u1ea1n ngo\u1eb7c \u0111\u01a1n \u1edf d\u01b0\u1edbi \u0111\u00e2y:</p> </li> <li> <p><code>Root</code>: root l\u00e0 khai b\u00e1o \u0111\u1ed1i t\u01b0\u1ee3ng b\u1ea1n s\u1ebd s\u1eed d\u1ee5ng trong query, t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi \u0111\u1ed1i t\u01b0\u1ee3ng sau m\u1ec7nh \u0111\u1ec1\u00a0<code>FROM</code></p> </li> </ul> <p>Cu\u1ed1i c\u00f9ng, \u0111\u1ec3 ho\u00e0n thi\u1ec7n c\u00e2u l\u1ec7nh\u00a0<code>SELECT</code>\u00a0ch\u1ec9 \u0111\u01a1n gi\u1ea3n l\u00e0 l\u1ea5y \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>CriteriaQuery</code>\u00a0\u0111\u00e3 khai b\u00e1o l\u00e0 s\u1eed d\u1ee5ng function\u00a0<code>select</code>. \u0110\u1ed1i t\u01b0\u1ee3ng truy\u1ec1n v\u00e0o ch\u00ednh l\u00e0 c\u00e1i\u00a0<code>root</code>\u00a0(hay c\u00e1i \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a\u00a0<code>FROM</code>) kia.</p> <p>Tr\u00f4ng v\u1eady ch\u1ee9 c\u0169ng d\u1ec5 d\u1ec5 r\u1ed3i \u0111\u1ea5y nh\u1ec9 :)))</p> <p>Okie, c\u00f3 \u0111i\u1ec1u n\u00e0y kh\u00f4ng bi\u1ebft \u0111\u00e3 b\u1ea1n n\u00e0o \u0111\u1ec3 \u00fd ch\u01b0a \ud83d\ude05 ch\u00fang ta m\u1edbi t\u1ea1o ra c\u00e2u l\u1ec7nh, ch\u1ee9 ch\u01b0a h\u1ec1 g\u1ecdi n\u00f3 xu\u1ed1ng\u00a0<code>Database</code>\u00a0\ud83d\ude05</p> <p>\u0110\u1ec3 s\u1eed d\u1ee5ng c\u00e2u l\u1ec7nh \u0111\u00e3 t\u1ea1o, c\u00e1c b\u1ea1n l\u00e0m gi\u1ed1ng v\u1edbi\u00a0<code>JPQL</code>\u00a0\u0111\u00f3 l\u00e0 s\u1eed d\u1ee5ng \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>EntityManager</code></p> <pre><code>TypedQuery&lt;Office&gt; query = em.createQuery(query);\nList&lt;Office&gt; results = query.getResultList();\n</code></pre> <p>Oh right, th\u1ebf l\u00e0 implement xong v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n \u0111\u00e2u ti\u00ean, kh\u00f4ng c\u00f3a g\u00ec kh\u00f3 kh\u0103n \ud83e\udd14 (ch\u00e9m). B\u00e2y gi\u1edd th\u1eed advanced l\u00ean t\u00fd nh\u1ec9:</p> <p>B\u00e2y gi\u1edd m\u00ecnh mu\u1ed1n l\u1ea5y t\u1ea5t c\u1ea3\u00a0<code>Office</code>\u00a0\u1edf th\u00e0nh ph\u1ed1\u00a0<code>hanoi</code>\u00a0th\u00ec s\u1ebd l\u00e0m nh\u01b0 n\u00e0o?</p> <pre><code>SELECT o FROM Office o WHERE o.city = 'hanoi'\n</code></pre> <p>L\u00fac n\u00e0y query c\u1ee7a ch\u00fang ta s\u1ebd nh\u01b0 th\u1ebf n\u00e0y:</p> <pre><code>query.select(root).where(builder.equal(root.get(\"city\"), \"hanoi\"));\n</code></pre> <p>C\u00e1c b\u1ea1n \u0111\u1ec3 \u00fd \u0111o\u1ea1n n\u00e0y nh\u00e9. M\u00ecnh s\u1eed\u00a0<code>builder</code>\u00a0\u0111\u1ec3 l\u1ea5y h\u00e0m\u00a0<code>equal</code>\u00a0(ph\u00e9p to\u00e1n logic, nh\u01b0 m\u00ecnh \u0111\u1ec1 c\u1eadp \u1edf tr\u00ean, chu\u1ea9n ch\u01b0a n\u00e0o). Ti\u1ebfp t\u1edbi l\u00e0 c\u00e1i\u00a0<code>root.get(\"city\")</code>,\u00a0<code>root</code>\u00a0ch\u00ednh l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng ch\u00fang ta \u0111\u00e3 khai b\u00e1o, b\u00e2y gi\u1edd ch\u00fang ta s\u1ebd l\u1ea5y tr\u01b0\u1eddng\u00a0<code>city</code>\u00a0c\u1ee7a n\u00f3 v\u00e0 ki\u1ec3m tra n\u00f3 v\u1edbi\u00a0<code>hanoi</code>.</p> <p>C\u00f3 th\u1ec3 n\u00f3i\u00a0<code>Criteria API</code>\u00a0\u0111\u00e3 hi\u1ec7n th\u1ef1c h\u00f3a r\u1ea5t th\u00e0nh c\u00f4ng c\u00e2u l\u1ec7nh JPQL (hay HQL) th\u00e0nh nh\u1eefng api java c\u1ef1c k\u00ec d\u1ec5 d\u1ecdc, d\u1ec5 hi\u1ec3u v\u00e0 d\u1ec5 s\u1eed d\u1ee5ng. Khi \u0111\u00e3 hi\u1ec3u \u0111\u01b0\u1ee3c c\u00e2u l\u1ec7nh g\u1ed1c, b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng chuy\u1ec3n n\u00f3 th\u00e0nh\u00a0<code>Criteria</code>\u00a0v\u00e0 ng\u01b0\u1ee3c l\u1ea1i.</p> <p>Trong b\u00e0i vi\u1ebft t\u1edbi \u1edf ch\u01b0\u01a1ng\u00a0<code>Spring</code>, m\u00ecnh s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1c b\u1ea1n s\u1eed d\u1ee5ng t\u1edbi\u00a0<code>Specifications</code>\u00a0k\u1ebft h\u1ee3p\u00a0<code>Criteria API</code>\u00a0\u0111\u1ec3 t\u1ea1o ra m\u1ed9t v\u1ee5 n\u1ed5 khi giao ti\u1ebfp v\u1edbi db b\u1eb1ng\u00a0<code>Java</code>\u00a0(v\u00e3i c\u1ea3 ch\u00e9m \ud83d\ude02)</p> <p>Ch\u00fac c\u00e1c b\u1ea1n s\u1eed d\u1ee5ng th\u00e0nh c\u00f4ng\u00a0<code>Criteria API</code>\u00a0v\u00e0 \u0111\u1eebng qu\u00ean like or chia s\u1ebb b\u00e0i vi\u1ebft cho b\u1ea1n b\u00e8 hihi, c\u1ea3m \u01a1n c\u00e1c b\u1ea1n \u0111\u00e3 theo d\u00f5i!</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/jpa/#jpahuong-dan-su-dung-criteria-api-trong-hibernate-phan-2","title":"\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng Criteria API trong Hibernate (Ph\u1ea7n 2)","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e0i \u0111\u1eb7t</li> <li>JPA Meta Model</li> <li>Predicate</li> </ul>"},{"location":"java/spring-boot/jpa/#gioi-thieu_6","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft tr\u01b0\u1edbc, t\u00f4i \u0111\u00e3 gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c b\u1ea1n v\u1ec1\u00a0Criteria API\u00a0c\u1ee7a\u00a0Hibernate.</p> <ol> <li>Hibernate l\u00e0 g\u00ec?</li> <li>H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng Criteria API trong Hibernate</li> </ol> <p>Trong ph\u1ea7n n\u00e0y ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u m\u1ed9t s\u1ed1 c\u00e1c ph\u1ea7n c\u1ea7n thi\u1ebft kh\u00e1c trong\u00a0Criteria API, th\u1ee9 gi\u00fap cho b\u1ea1n x\u00e2y d\u1ef1ng query m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n h\u01a1n.</p> <p>Trong b\u00e0i c\u00f3 s\u1eed d\u1ee5ng:</p> <ol> <li>Lombok</li> </ol>"},{"location":"java/spring-boot/jpa/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Nh\u1edb th\u00eam\u00a0<code>spring-boot-starter-data-jpa</code>\u00a0v\u00e0o dependencies c\u1ee7a b\u1ea1n.</p> <p>Trong ph\u1ea7n n\u00e0y, t\u00f4i x\u00e0i\u00a0H2 database\u00a0\u0111\u1ec3 demo. (H2 l\u00e0 d\u1ea1ng memory database, n\u00f3 s\u1ebd l\u01b0u trong ram v\u00e0 khi t\u1eaft ch\u01b0\u01a1ng tr\u00ecnh n\u00f3 s\u1ebd m\u1ea5t s\u1ea1ch)</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;parent&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&lt;version&gt;2.0.5.RELEASE&lt;/version&gt;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;&lt;groupId&gt;me.loda.spring&lt;/groupId&gt;&lt;artifactId&gt;example-independent-maven-spring-project&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;name&gt;example-independent-maven-spring-project&lt;/name&gt;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&lt;properties&gt;&lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;!--         &lt;exclusions&gt;--&gt;\n            &lt;!--                &lt;exclusion&gt;--&gt;\n            &lt;!--                    &lt;groupId&gt;org.junit.vintage&lt;/groupId&gt;--&gt;\n            &lt;!--                    &lt;artifactId&gt;junit-vintage-engine&lt;/artifactId&gt;--&gt;\n            &lt;!--                &lt;/exclusion&gt;--&gt;\n            &lt;!--            &lt;/exclusions&gt;--&gt;\n        &lt;/dependency&gt;&lt;!--spring jpa--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!--in memory database--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;com.h2database&lt;/groupId&gt;&lt;artifactId&gt;h2&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;&lt;!--https://mvnrepository.com/artifact/org.hibernate/hibernate-jpamodelgen --&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;&lt;artifactId&gt;hibernate-jpamodelgen&lt;/artifactId&gt;&lt;version&gt;5.4.9.Final&lt;/version&gt;&lt;scope&gt;provided&lt;/scope&gt;&lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt;&lt;plugins&gt;&lt;plugin&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&lt;/plugin&gt;&lt;/plugins&gt;&lt;/build&gt;&lt;/project&gt;\n</code></pre> <p>\u0110\u1eb7c bi\u1ec7t, ch\u00fa \u00fd\u00a0<code>hibernate-jpamodelgen</code>, t\u00f4i s\u1ebd gi\u1ea3i th\u00edch t\u00e1c d\u1ee5ng c\u1ee7a n\u00f3 tr\u01b0\u1edbc.</p>"},{"location":"java/spring-boot/jpa/#jpa-meta-model","title":"JPA Meta Model","text":"<p>trong\u00a0b\u00e0i tr\u01b0\u1edbc\u00a0m\u1ecdi ng\u01b0\u1eddi c\u0169ng bi\u1ebft c\u00e1ch c\u1ea5u tr\u00fac c\u1ee7a m\u1ed9t c\u00e2u query trong Criteria API:</p> <pre><code>SELECT o FROM Office o WHERE o.city = 'hanoi'\n</code></pre> <p>L\u00fac n\u00e0y query c\u1ee7a ch\u00fang ta s\u1ebd nh\u01b0 th\u1ebf n\u00e0y:</p> <pre><code>query.select(root).where(builder.equal(root.get(\"city\"), \"hanoi\"));\n</code></pre> <p>\u0110\u1ec3 \u00fd th\u00ec c\u00f3 th\u1ec3 th\u1ea5y, khi mu\u1ed1n l\u1ea5y column\u00a0<code>city</code>\u00a0\u0111\u1ec3 ki\u1ec3m tra, ch\u00fang ta \u0111ang hardcode b\u1eb1ng\u00a0<code>String</code>.</p> <p>C\u00f3 m\u1ed9t s\u1ed1 b\u1ea5t l\u1ee3i khi l\u00e0m v\u1eady, th\u1ee9 nh\u1ea5t l\u00e0 b\u1ea1n ph\u1ea3i t\u1ef1 nh\u1edb t\u00ean c\u00e1c column m\u1ed7i khi g\u1ecdi, th\u1ee9 hai l\u00e0 b\u1ea1n s\u1ebd ph\u1ea3i t\u00ecm ki\u1ebfm t\u1ea5t c\u1ea3 c\u00e1c ch\u1ed7 s\u1eed d\u1ee5ng m\u1ed7i s\u1eeda \u0111\u1ed5i t\u00ean c\u1ed9t.</p> <p>C\u00e1ch gi\u1ea3i quy\u1ebft hay nh\u1ea5t l\u00e0 tham chi\u1ebfu t\u00ean c\u00e1c column c\u1ee7a\u00a0Table\u00a0v\u00e0o m\u1ed9t\u00a0Object\u00a0\u0111\u1ec3 ch\u00fang ta c\u00f3 th\u1ec3 g\u1ecdi t\u1edbi m\u1ed7i khi s\u1eed d\u1ee5ng. Khi c\u00f3 s\u1ef1 thay \u0111\u1ed5i, ch\u1ec9 c\u1ea7n thay \u0111\u1ed5i trong \u0111\u1ed1i t\u01b0\u1ee3ng n\u00e0y l\u00e0 xong. \u0110\u1ed1i t\u01b0\u1ee3ng bi\u1ec3u di\u1ec5n n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0\u00a0Meta Model.</p> <p>V\u00e0 r\u1ea5t may l\u00e0 Hibernate h\u1ed7 tr\u1ee3 ch\u00fang ta t\u1ef1 \u0111\u1ed9ng generate ra c\u00e1c Meta Model t\u1eeb c\u00e1c class\u00a0<code>@Entity</code></p> <p>V\u00ed d\u1ee5:</p> <p>Ch\u00fang ta c\u00f3 Class Entity\u00a0<code>User</code></p> <p>User.java</p> <pre><code>@Entity\n@Data\n@Builder\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private UserType type;\n    private String name;\n\n    public enum UserType {\n        NORMAL, VIP;\n    }\n}\n</code></pre> <p>Th\u00ec class Meta Model c\u1ee7a\u00a0<code>User</code>\u00a0s\u1ebd t\u00ean l\u00e0\u00a0<code>User_</code>\u00a0v\u00e0 c\u00f3 c\u1ea5u tr\u00fac nh\u01b0 sau:</p> <pre><code>@Generated(value = \"org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor\")\n@StaticMetamodel(User.class)\npublic abstract class User_ {\n\n    public static volatile SingularAttribute&lt;User, String&gt; name;\n    public static volatile SingularAttribute&lt;User, Long&gt; id;\n    public static volatile SingularAttribute&lt;User, UserType&gt; type;\n\n    public static final String NAME = \"name\";\n    public static final String ID = \"id\";\n    public static final String TYPE = \"type\";\n\n}\n</code></pre> <p>\u0110\u1ec3 c\u00f3 th\u1ec3 Generate ra c\u00e1c class Meta Model, b\u1ea1n s\u1ebd c\u1ea7n th\u00eam dependency\u00a0<code>hibernate-jpamodelgen</code>\u00a0v\u00e0o project c\u1ee7a m\u00ecnh.</p> <pre><code>&lt;dependency&gt;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;&lt;artifactId&gt;hibernate-jpamodelgen&lt;/artifactId&gt;&lt;version&gt;CURRENT-VERSION&lt;/version&gt;&lt;/dependency&gt;\n</code></pre> <p>Khi build jar n\u00f3 s\u1ebd t\u1ef1 \u0111\u1ed9ng generate th\u00eam cho b\u1ea1n</p> <p>\u0110\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng trong IDE, b\u1ea1n c\u00f3 th\u1ec3 Config Annotation Processor (Gi\u1ed1ng v\u1edbi Lombok), \u0111\u1ec3 IDE hi\u1ec3u v\u00e0 t\u1ef1 \u0111\u1ed9ng generate ra gi\u00fap b\u1ea1n l\u1eadp tr\u00ecnh d\u1ec5 h\u01a1n.</p> <p>!image</p>"},{"location":"java/spring-boot/jpa/#predicate","title":"Predicate","text":"<p>\u0110\u1ec3 c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng c\u00e2u truy v\u1ea5n m\u1ed9t c\u00e1ch tr\u1ecdn v\u1eb9n, b\u1ea1n c\u1ea7n bi\u1ebft\u00a0<code>Predicate</code>.</p> <p>T\u1ea1m hi\u1ec3u m\u1ed9t c\u00e1ch \u0111\u01a1n gi\u1ea3n th\u00ec\u00a0<code>Predicate</code>\u00a0l\u00e0 m\u1ed9t m\u1ec7nh \u0111\u1ec1 \u0111i\u1ec1u ki\u1ec7n trong c\u00e2u l\u1ec7nh truy v\u1ea5n.</p> <p>Nh\u01b0 v\u00ed d\u1ee5 \u1edf d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>@Repository\npublic class CustomUserRepository {\n\n    @PersistenceContext\n    private EntityManager em;\n\n    public User getUserById(Long id) {\n        CriteriaBuilder builder = em.getCriteriaBuilder();\n        CriteriaQuery&lt;User&gt; query = builder.createQuery(User.class);\n        Root&lt;User&gt; root = query.from(User.class);\n\n        Predicate condition = builder.equal(root.get(User_.ID), id);\n\n        query.select(root).where(condition);\n\n        return em.createQuery(query).getSingleResult();\n    }\n}\n</code></pre> <p><code>Predicate</code>\u00a0c\u00f3 th\u1ec3 li\u00ean k\u1ebft v\u1edbi nhau b\u1eb1ng c\u00e1c ph\u00e9p quan h\u1ec7\u00a0<code>and</code>,\u00a0<code>or</code>,\u00a0<code>not</code>, v.v..</p> <p>V\u00ed d\u1ee5:</p> <pre><code>    public Collection&lt;User&gt; getUserByComplexConditions(String name, UserType type) {\n        CriteriaBuilder builder = em.getCriteriaBuilder();\n        CriteriaQuery&lt;User&gt; query = builder.createQuery(User.class);\n        Root&lt;User&gt; root = query.from(User.class);\n\n        Predicate hasNameLike = builder.like(root.get(User_.NAME), name);\n        Predicate hasType = builder.equal(root.get(User_.TYPE), type);\n\n        Predicate condition = builder.and(hasNameLike, hasType);\n\n        query.select(root).where(condition);\n        return em.createQuery(query).getResultList();\n    }\n</code></pre> <p>T\u1edbi \u0111\u00e2y b\u1ea1n \u0111\u00e3 n\u1eafm \u0111\u01b0\u1ee3c c\u01a1 b\u1ea3n\u00a0Criteria API\u00a0v\u00e0 \u0111\u00e3 c\u00f3 th\u1ec3 t\u1ef1 s\u1eed d\u1ee5ng n\u00f3 trong \u0111a s\u1ed1 c\u00e1c c\u00e2u l\u1ec7nh \u0111\u01a1n gi\u1ea3n.</p> <p>Trong b\u00e0i ti\u1ebfp theo, t\u00f4i s\u1ebd h\u01b0\u1edbng d\u1eabn n\u1ed1t c\u00e1c join b\u1ea3ng n\u1eefa th\u00f4i l\u00e0 b\u1ea1n s\u1ebd mas con \u00f4ng ter.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/jpa/#jpahuong-dan-tu-tao-validator-e-kiem-tra-model-entity","title":"\u300cJpa\u300dH\u01b0\u1edbng d\u1eabn t\u1ef1 t\u1ea1o Validator \u0111\u1ec3 ki\u1ec3m tra Model &amp; Entity","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e0i \u0111\u1eb7t</li> <li>Prepare</li> <li>T\u1ea1o Annotation</li> <li>T\u1ea1o Validator</li> <li>Ch\u1ea1y th\u1eed</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/jpa/#gioi-thieu_7","title":"Gi\u1edbi thi\u1ec7u","text":"<p>B\u1ea3n th\u00e2n Hibernate v\u00e0 Java \u0111\u00e3 cung c\u1ea5p cho ch\u00fang ta r\u1ea5t nhi\u1ec1u c\u00e1c Annotation \u0111\u1ec3 validate d\u1eef li\u1ec7u c\u1ee7a model.</p> <p>Ch\u1eb3ng h\u1ea1n nh\u01b0:\u00a0<code>@@NotBlank</code>,\u00a0<code>@Size</code>,\u00a0<code>@Email</code>, v.v..</p> <p>Tuy nhi\u00ean, tr\u00ean th\u1ef1c t\u1ebf, ch\u00fang ta c\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1c \u0111i\u1ec1u ki\u1ec7n \u0111\u01b0\u1ee3c \u0111\u1eb7t ra, tu\u1ef3 thu\u1ed9c v\u00e0o business v\u00e0 m\u00f4 h\u00ecnh d\u1ef1 \u00e1n.</p> <p>V\u00ed d\u1ee5 nh\u01b0 trong d\u1ef1 \u00e1n c\u1ee7a t\u00f4i, t\u00f4i mu\u1ed1n t\u1ea5t c\u1ea3\u00a0<code>User</code>\u00a0\u0111\u1ec1u ph\u1ea3i c\u00f3 m\u1ed9t thu\u1ed9c t\u00ednh l\u00e0\u00a0<code>lodaId</code>.</p> <p>M\u1ed9t\u00a0<code>lodaId</code>\u00a0h\u1ee3p l\u1ec7 l\u00e0 chu\u1ed7i String c\u00f3 ti\u1ec1n t\u1ed1:\u00a0<code>loda://xxxx</code></p> <p>L\u00fac n\u00e0y, l\u00e0m sao \u0111\u1ec3 t\u00f4i ch\u1eafc ch\u1eafn \u0111\u01b0\u1ee3c r\u1eb1ng m\u1ecdi\u00a0<code>User</code>\u00a0tr\u01b0\u1edbc khi t\u1ea1o \u0111\u1ec1u ph\u1ea3i c\u00f3\u00a0<code>lodaId</code>\u00a0h\u1ee3p l\u1ec7?</p> <p>R\u00f5 r\u00e0ng t\u00f4i ph\u1ea3i t\u1ef1 t\u1ea1o ra m\u1ed9t b\u1ed9 ki\u1ec3m tra cho ri\u00eang m\u00ecnh \u0111\u1ec3 ki\u1ec3m so\u00e1t t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a\u00a0<code>User</code>.</p> <p>R\u1ea5t may,\u00a0<code>hibernate-validator</code>\u00a0s\u1ebd gi\u00fap t\u00f4i l\u00e0m \u0111i\u1ec1u \u0111\u00f3.</p> <p>Trong b\u00e0i c\u00f3 s\u1eed d\u1ee5ng c\u00e1c ki\u1ebfn th\u1ee9c:</p> <ol> <li>Spring Boot</li> <li>jpa</li> <li>lombok</li> </ol>"},{"location":"java/spring-boot/jpa/#cai-at_3","title":"C\u00e0i \u0111\u1eb7t","text":"<p>pom.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;parent&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&lt;version&gt;2.0.5.RELEASE&lt;/version&gt;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;&lt;groupId&gt;me.loda.spring&lt;/groupId&gt;&lt;artifactId&gt;example-independent-maven-spring-project&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;name&gt;example-independent-maven-spring-project&lt;/name&gt;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&lt;properties&gt;&lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;&lt;!--https://mvnrepository.com/artifact/org.hibernate/hibernate-validator --&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.hibernate&lt;/groupId&gt;&lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;&lt;version&gt;6.1.0.Final&lt;/version&gt;&lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt;&lt;plugins&gt;&lt;plugin&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&lt;/plugin&gt;&lt;/plugins&gt;&lt;/build&gt;&lt;/project&gt;\n</code></pre>"},{"location":"java/spring-boot/jpa/#prepare","title":"Prepare","text":"<p>Tr\u01b0\u1edbc khi t\u1ea1o ra m\u1ed9t b\u1ed9 Validator cho ri\u00eang m\u00ecnh, ch\u00fang ta t\u1ea1o ra c\u00e1c th\u00e0nh ph\u1ea7n ch\u00ednh.</p> <p>T\u1ea1o ra model\u00a0<code>User</code></p> <p>User.java</p> <pre><code>@Data\npublic class User {\n    private String lodaId;\n}\n</code></pre> <p>T\u1ea1o Controller giao ti\u1ebfp v\u1edbi client.</p> <p>UserController.java</p> <pre><code>@RestController\n@RequestMapping(\"api/v1/users\")\npublic class UserController {\n\n    /*\n        \u0110\u00e1nh d\u1ea5u object v\u1edbi @Valid \u0111\u1ec3 validator t\u1ef1 \u0111\u1ed9ng ki\u1ec3m tra object \u0111\u00f3 c\u00f3 h\u1ee3p l\u1ec7 hay kh\u00f4ng\n     */\n    @PostMapping\n    public Object createUser(@Valid @RequestBody User user) {\n        return user;\n    }\n\n}\n</code></pre>"},{"location":"java/spring-boot/jpa/#tao-annotation","title":"T\u1ea1o Annotation","text":"<p>\u0110\u1ec3 t\u1ea1o ra m\u1ed9t validator v\u1edbi Hibernate-Validator, ch\u00fang ta c\u1ea7n khai b\u00e1o m\u1ed9t annotation m\u1edbi.</p> <p>\u1ede \u0111\u00e2y, t\u00f4i t\u1ea1o ra m\u1ed9t Annotation c\u1ee7a ch\u00ednh m\u00ecnh nh\u01b0 sau:</p> <pre><code>/**\n * Khai b\u00e1o m\u1ed9t custom annotation\n */\n@Documented\n@Constraint(validatedBy = LodaIdValidator.class)\n@Target({ElementType.METHOD, ElementType.FIELD})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface LodaId {\n    // tr\u01b0\u1eddng message l\u00e0 b\u1eaft bu\u1ed9c, khai b\u00e1o n\u1ed9i dung s\u1ebd tr\u1ea3 v\u1ec1 khi field k h\u1ee3p l\u1ec7\n    String message() default \"LodaId must start with loda://\";\n    // C\u00e1i n\u00e0y l\u00e0 b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 \u0111\u1ec3 Hibernate Validator c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng\n    Class&lt;?&gt;[] groups() default {};\n    // C\u00e1i n\u00e0y l\u00e0 b\u1eaft bu\u1ed9c ph\u1ea3i c\u00f3 \u0111\u1ec3 Hibernate Validator c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng\n    Class&lt;? extends Payload&gt;[] payload() default {};\n}\n</code></pre> <p>V\u1eady l\u00e0 xong, gi\u1edd ch\u1ec9 c\u1ea7n g\u1eafn\u00a0<code>@LodaId</code>\u00a0l\u00ean tr\u01b0\u1eddng n\u00e0o c\u1ea7n ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7.</p> <pre><code>@Data\npublic class User {\n    // \u0110\u00e1nh d\u1ea5u field lodaId s\u1ebd c\u1ea7n validate b\u1edfi @LodaId\n    @LodaId\n    private String lodaId;\n}\n</code></pre>"},{"location":"java/spring-boot/jpa/#tao-validator","title":"T\u1ea1o Validator","text":"<p>Sau khi \u0111\u00e3 t\u1ea1o ra\u00a0<code>@LodaId</code>, ch\u00fang ta c\u1ea7n t\u1ea1o ra b\u1ed9 ki\u1ec3m tra cho Annotation n\u00e0y.</p> <p>R\u1ea5t \u0111\u01a1n gi\u1ea3n, b\u1ea1n ch\u1ec9 c\u1ea7n k\u1ebf th\u1eeba l\u1edbp\u00a0<code>ConstraintValidator</code>\u00a0c\u1ee7a Hibernate Validator</p> <pre><code>import javax.validation.ConstraintValidator;\nimport javax.validation.ConstraintValidatorContext;\n\npublic class LodaIdValidator implements ConstraintValidator&lt;LodaId, String&gt; {\n    private static final String LODA_PREFIX = \"loda://\";\n\n    /**\n     * Ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a tr\u01b0\u1eddng \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1edfi @LodaId\n     * @param s\n     * @param constraintValidatorContext\n     * @return\n     */\n    @Override\n    public boolean isValid(String s, ConstraintValidatorContext constraintValidatorContext) {\n        if (s == null || s.isEmpty()) return false;\n\n        return s.startsWith(LODA_PREFIX);\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/jpa/#chay-thu_3","title":"Ch\u1ea1y th\u1eed","text":"<p>Request m\u1ed9t\u00a0<code>User</code>\u00a0h\u1ee3p l\u1ec7:</p> <pre><code>{\n    \"lodaId\": \"loda://user_1\"\n}\n</code></pre> <p>tr\u1ea3 v\u1ec1 th\u00e0nh c\u00f4ng\u00a0<code>200</code>.</p> <p>!image</p> <p>Request m\u1ed9t\u00a0<code>User</code>\u00a0kh\u00f4ng h\u1ee3p l\u1ec7:</p> <pre><code>{\n    \"lodaId\": \"Laula://user_1\"\n}\n</code></pre> <p>Tr\u1ea3 v\u1ec1 th\u1ea5t b\u1ea1i, Bad Request\u00a0<code>400</code>.</p> <p>!image</p> <pre><code>{\n    \"timestamp\": \"2019-12-19T10:26:14.554+0000\",\n    \"status\": 400,\n    \"error\": \"Bad Request\",\n    \"errors\": [\n        {\n            \"codes\": [\n                \"LodaId.user.lodaId\",\n                \"LodaId.lodaId\",\n                \"LodaId.java.lang.String\",\n                \"LodaId\"\n            ],\n            \"arguments\": [\n                {\n                    \"codes\": [\n                        \"user.lodaId\",\n                        \"lodaId\"\n                    ],\n                    \"arguments\": null,\n                    \"defaultMessage\": \"lodaId\",\n                    \"code\": \"lodaId\"\n                }\n            ],\n            \"defaultMessage\": \"LodaId must start with loda://\",\n            \"objectName\": \"user\",\n            \"field\": \"lodaId\",\n            \"rejectedValue\": \"Laula://user_1\",\n            \"bindingFailure\": false,\n            \"code\": \"LodaId\"\n        }\n    ],\n    \"message\": \"Validation failed for object='user'. Error count: 1\",\n    \"path\": \"/api/v1/users\"\n}\n</code></pre>"},{"location":"java/spring-boot/jpa/#ket_2","title":"K\u1ebft","text":"<p>R\u1ea5t \u0111\u01a1n gi\u1ea3n \u0111\u1ec3 c\u00f3 th\u1ec3 t\u1ef1 t\u1ea1o ra cho m\u00ecnh c\u00e1c Validator v\u1edbi\u00a0<code>Hibernate-Validator</code>. N\u00f3 s\u1ebd gi\u00fap b\u1ea1n ti\u1ebft ki\u1ec7m r\u1ea5t nhi\u1ec1u th\u1eddi gian.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/redis/","title":"H\u01b0\u1edbng d\u1eabn Spring Boot + Redis","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e0i \u0111\u1eb7t</li> <li>Implement</li> <li>C\u1ea5u h\u00ecnh Redis</li> <li>Ch\u1ea1y th\u1eed</li> <li>Redis operations</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/redis/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Redis\u00a0l\u00e0 1 h\u1ec7 th\u1ed1ng l\u01b0u tr\u1eef key-value in-memory r\u1ea5t m\u1ea1nh m\u1ebd v\u00e0 ph\u1ed5 bi\u1ebfn hi\u1ec7n nay.</p> <p>Redis\u00a0n\u1ed5i b\u1eadt b\u1edfi vi\u1ec7c h\u1ed7 tr\u1ee3 nhi\u1ec1u c\u1ea5u tr\u00fac d\u1eef li\u1ec7u kh\u00e1c nhau (hash, list, set, sorted set, string), gi\u00fap vi\u1ec7c thao t\u00e1c v\u1edbi d\u1eef li\u1ec7u c\u1ef1c k\u00ec nhanh v\u00e0 thu\u1eadn ti\u1ec7n.</p> <p>C\u00e1c h\u1ec7 th\u1ed1ng ng\u00e0y nay lu\u00f4n t\u00ecm c\u00e1ch t\u1ed1i \u01b0u performance v\u00e0\u00a0Redis\u00a0g\u1ea7n nh\u01b0 l\u00e0 m\u1ed9t m\u1ea3nh gh\u00e9p kh\u00f4ng th\u1ec3 thi\u1ebfu trong \u0111\u00f3. H\u00f4m nay ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u c\u00e1ch k\u1ebft n\u1ed1i \u1ee9ng d\u1ee5ng\u00a0Spring Boot\u00a0v\u1edbi\u00a0Redis.</p>"},{"location":"java/spring-boot/redis/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ch\u00fang ta s\u1eed d\u1ee5ng Maven, v\u00e0 y\u00eau c\u1ea7u c\u00e1c dependencies sau:</p> <p>pom.xml</p> <pre><code>&lt;dependencies&gt;\n\n    &lt;!--spring mvc, rest--&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;\n      &lt;artifactId&gt;spring-data-redis&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;dependency&gt;\n      &lt;groupId&gt;io.lettuce&lt;/groupId&gt;\n      &lt;artifactId&gt;lettuce-core&lt;/artifactId&gt;\n      &lt;version&gt;5.1.3.RELEASE&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <p>Trong \u0111\u00f3,\u00a0<code>spring-data-redis</code>\u00a0l\u00e0 th\u01b0 vi\u1ec7n c\u1ee7a Spring gi\u00fap ch\u00fang ta thao t\u00e1c v\u1edbi\u00a0Redis\u00a0d\u1ec5 d\u00e0ng h\u01a1n.</p> <p>C\u00f2n\u00a0<code>lettuce-core</code>\u00a0l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n m\u00e3 ngu\u1ed3n m\u1edf, gi\u00fap k\u1ebft n\u1ed1i t\u1edbi Redis m\u1ed9t c\u00e1ch thread-safe b\u1eb1ng nhi\u1ec1u h\u00ecnh th\u1ee9c nh\u01b0 synchronous, asynchronous and reactive usage.</p> <p>Trong b\u00e0i n\u00e0y ch\u00fang ta s\u1ebd c\u1ea5u h\u00ecnh cho\u00a0<code>spring-data-redis</code>\u00a0s\u1eed d\u1ee5ng\u00a0<code>lettuce</code>\u00a0k\u1ebft n\u1ed1i t\u1edbi\u00a0Redis. C\u00f2n chi ti\u1ebft v\u1ec1\u00a0<code>letture</code>\u00a0s\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp \u1edf m\u1ed9t b\u00e0i vi\u1ebft kh\u00e1c.</p> <p>C\u1ea5u tr\u00fac th\u01b0 m\u1ee5c bao g\u1ed3m:</p> <p>!image</p>"},{"location":"java/spring-boot/redis/#implement","title":"Implement","text":""},{"location":"java/spring-boot/redis/#cau-hinh-redis","title":"C\u1ea5u h\u00ecnh Redis","text":"<p>B\u00e0i vi\u1ebft gi\u1ea3 \u0111\u1ecbnh b\u1ea1n \u0111\u00e3\u00a0c\u00e0i \u0111\u1eb7t Redis, \u0111\u1ec3 k\u1ebft n\u1ed1i t\u1edbi\u00a0Redis, b\u1ea1n c\u1ea7n cung c\u1ea5p \u0111\u1ecba ch\u1ec9\u00a0<code>host</code>\u00a0v\u00e0\u00a0<code>port</code>\u00a0cho\u00a0lettuce.</p> <p>C\u00e1ch d\u1ec5 nh\u1ea5t l\u00e0 ghi n\u00f3 \u1edf file\u00a0application.properties\u00a0trong th\u01b0 m\u1ee5c resources:</p> <p>application.properties</p> <pre><code>redis.host=localhost\nredis.port=6379\n</code></pre> <p>Sau \u0111\u00f3, T\u1ea1o file\u00a0<code>RedisConfig.java</code>\u00a0\u0111\u1ec3 c\u1ea5u h\u00ecnh m\u1ecdi th\u1ee9 li\u00ean quan t\u1edbi Redis.</p> <pre><code>import org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Primary;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.connection.RedisStandaloneConfiguration;\nimport org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\nimport org.springframework.data.redis.core.RedisTemplate;\n\n@Configuration\npublic class RedisConfig {\n    @Value(\"${redis.host}\")\n    private String redisHost;\n\n    @Value(\"${redis.port}\")\n    private int redisPort;\n\n    @Bean\n    public LettuceConnectionFactory redisConnectionFactory() {\n        // T\u1ea1o Standalone Connection t\u1edbi Redis\n        return new LettuceConnectionFactory(new RedisStandaloneConfiguration(redisHost, redisPort));\n    }\n\n    @Bean\n    @Primary\n    public RedisTemplate&lt;Object, Object&gt; redisTemplate(RedisConnectionFactory redisConnectionFactory) {\n        // t\u1ea1o ra m\u1ed9t RedisTemplate\n        // V\u1edbi Key l\u00e0 Object\n        // Value l\u00e0 Object\n        // RedisTemplate gi\u00fap ch\u00fang ta thao t\u00e1c v\u1edbi Redis\n        RedisTemplate&lt;Object, Object&gt; template = new RedisTemplate&lt;&gt;();\n        template.setConnectionFactory(redisConnectionFactory);\n        return template;\n    }\n}\n</code></pre> <p>Ch\u00fang ta c\u1ea7n s\u1eed d\u1ee5ng\u00a0<code>lettuce</code>\u00a0\u0111\u1ec3 k\u1ebft n\u1ed1i t\u1edbi Redis, n\u00ean t\u00f4i t\u1ea1o ra bean\u00a0<code>LettuceConnectionFactory</code>\u00a0v\u00e0 Spring Data s\u1ebd t\u1ef1 \u0111\u1ed9ng nh\u1eadn v\u00e0o c\u1ea5u h\u00ecnh c\u1ee7a m\u00ecnh.</p> <p>Trong v\u00ed d\u1ee5 n\u00e0y, ch\u00fang ta l\u00e0m vi\u1ec7c v\u1edbi Redis Standalone\u00a0<code>RedisStandaloneConfiguration</code>. C\u00f2n n\u1ebfu b\u1ea1n mu\u1ed1n c\u1ea5u h\u00ecnh v\u1edbi Redis Cluster th\u00ec c\u0169ng t\u01b0\u01a1ng t\u1ef1 b\u1eb1ng class\u00a0<code>RedisClusterConfiguration</code>.</p> <p>\u0110\u1ed1i t\u01b0\u1ee3ng \u0111\u1ec3 thao t\u00e1c v\u1edbi Redis ch\u00ednh l\u00e0\u00a0RedisTemplate.</p> <p>\u1ede \u0111\u00e2y t\u00f4i c\u1ea5u h\u00ecnh cho\u00a0<code>RedisTemplate</code>\u00a0nh\u1eadn key l\u00e0\u00a0<code>Object</code>\u00a0v\u00e0 value c\u0169ng l\u00e0\u00a0<code>Object</code>\u00a0lu\u00f4n. \u0110\u1ec3 ch\u00fang ta c\u00f3 th\u1ec3 l\u01b0u b\u1ea5t k\u1ef3 key-value n\u00e0o xu\u1ed1ng Redis.</p>"},{"location":"java/spring-boot/redis/#chay-thu","title":"Ch\u1ea1y th\u1eed","text":"<p>Ch\u00fang ta t\u1ea1o ra m\u1ed9t class\u00a0<code>RedisExample</code>\u00a0implements\u00a0<code>CommandLineRunner</code>\u00a0\u0111\u1ec3 ch\u1ea1y m\u1ed9t v\u00ed d\u1ee5:</p> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class RedisExample implements CommandLineRunner {\n    @Autowired\n    private RedisTemplate template;\n\n    @Override\n    public void run(String... args) throws Exception {\n        // Set gi\u00e1 tr\u1ecb c\u1ee7a key \"loda\" l\u00e0 \"hello redis\"\n        template.opsForValue().set(\"loda\",\"hello world\");\n\n        // In ra m\u00e0n h\u00ecnh Gi\u00e1 tr\u1ecb c\u1ee7a key \"loda\" trong Redis\n        System.out.println(\"Value of key loda: \"+template.opsForValue().get(\"loda\"));\n    }\n}\n</code></pre> <p>Ch\u1ea1y Spring App:</p> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n</code></pre> <p>Khi ch\u1ea1y th\u1eed, m\u00e0n h\u00ecnh s\u1ebd in ra k\u1ebft qu\u1ea3.</p> <pre><code>Value of key loda: hello world\n</code></pre> <p>V\u1eady l\u00e0 ch\u00fang ta \u0111\u00e3 k\u1ebft n\u1ed1i th\u00e0nh c\u00f4ng t\u1edbi Redis v\u00e0 l\u01b0u m\u1ed9t c\u1eb7p key-value v\u00e0o trong \u0111\u00f3.</p>"},{"location":"java/spring-boot/redis/#redis-operations","title":"Redis operations","text":"<p>Quay tr\u1edf l\u1ea1i v\u00ed d\u1ee5 \u1edf tr\u00ean:</p> <pre><code>template.opsForValue().set(\"loda\",\"hello world\");\n</code></pre> <p><code>.opsForValue()</code>\u00a0\u0111\u01b0\u1ee3c g\u1ecdi l\u00e0\u00a0Redis Operations.</p> <p>Spring Data\u00a0h\u1ed7 tr\u1ee3 ch\u00fang ta thao t\u00e1c v\u1edbi Redis th\u00f4ng qua c\u00e1c Operations nh\u01b0 sau:</p> <ol> <li><code>opsForValue()</code>: Ki\u1ec3u Key-Value th\u00f4ng th\u01b0\u1eddng. V\u1edbi Value l\u00e0 1 gi\u00e1 tr\u1ecb String t\u00f9y \u00fd.</li> <li><code>opsForHash()</code>: T\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u1ea5u tr\u00fac Hash trong Redis. Value l\u00e0 m\u1ed9t Object c\u00f3 c\u1ea5u tr\u00fac</li> <li><code>opsForList()</code>: T\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u1ea5u tr\u00fac List trong Redis. Value l\u00e0 m\u1ed9t list.</li> <li><code>opsForSet()</code>: T\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u1ea5u tr\u00fac Set trong Redis.</li> <li><code>opsForZSet()</code>: T\u01b0\u01a1ng \u1ee9ng v\u1edbi c\u1ea5u tr\u00fac ZSet trong Redis.</li> </ol> <p>V\u00ed d\u1ee5 v\u1edbi\u00a0<code>List</code>:</p> <pre><code>@Component\npublic class RedisExample implements CommandLineRunner {\n    @Autowired\n    private RedisTemplate template;\n\n    @Override\n    public void run(String... args) throws Exception {\n        listExample();\n    }\n\n    public void valueExample(){\n        // Set gi\u00e1 tr\u1ecb c\u1ee7a key \"loda\" l\u00e0 \"hello redis\"\n        template.opsForValue().set(\"loda\",\"hello world\");\n\n        // In ra m\u00e0n h\u00ecnh Gi\u00e1 tr\u1ecb c\u1ee7a key \"loda\" trong Redis\n        System.out.println(\"Value of key loda: \"+template.opsForValue().get(\"loda\"));\n    }\n\n    public void listExample(){\n        // T\u1ea1o ra m\u1ed9t list g\u1ed3m 2 ph\u1ea7n t\u1eed\n        List&lt;String&gt; list = new ArrayList&lt;&gt;();\n        list.add(\"Hello\");\n        list.add(\"redis\");\n\n        // Set gia tr\u1ecb c\u00f3 key loda_list\n        template.opsForList().rightPushAll(\"loda_list\", list);\n//        template.opsForList().rightPushAll(\"loda_list\", \"hello\", \"world\");\n\n        System.out.println(\"Size of key loda: \"+template.opsForList().size(\"loda_list\"));\n    }\n}\n</code></pre> <p>K\u1ebft qu\u1ea3 in ra m\u00e0n h\u00ecnh khi ch\u1ea1y:</p>"},{"location":"java/spring-boot/redis/#ket","title":"K\u1ebft","text":"<p>T\u1edbi \u0111\u00e2y c\u00e1c b\u1ea1n c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng thao t\u00e1c v\u1edbi c\u00e1c ki\u1ec3u c\u1ea5u tr\u00fac trong Redis th\u00f4ng qua\u00a0<code>RedisTemplate</code>.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/","title":"@Component v\u00e0 @Autowired","text":"<p>\u0110\u01b0\u1eddng d\u1eabn b\u00e0i vi\u1ebft</p> <p>Th\u01b0\u1eddng th\u00ec gi\u1edd \u0111\u00e3 c\u00f3 Spring Initializr r\u1ed3i n\u00ean th\u00eam d\u1ef1 \u00e1n m\u1edbi r\u1ea5t d\u1ec5!</p>"},{"location":"java/spring-boot/spring-boot/#viec-chay-ung-dung-spring-boot","title":"Vi\u1ec7c ch\u1ea1y \u1ee9ng d\u1ee5ng Spring Boot","text":"<p>Ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y \u1edf h\u00e0m <code>main()</code> v\u00e0 c\u1ea7n th\u00eam annotation <code>@SpringBootApplication</code> tr\u00ean class ch\u00ednh v\u00e0 g\u1ecdi <code>SpringApplication.run(App.class, args);</code> \u0111\u1ec3 ch\u1ea1y project (Cho Spring Boot bi\u1ebft <code>main()</code> \u1edf ch\u1ed7 n\u00e0o). <code>SpringApplication.run(App.class, args)</code> ch\u00ednh l\u00e0 c\u00e2u l\u1ec7nh \u0111\u1ec3 t\u1ea1o ra container. Sau \u0111\u00f3 n\u00f3 t\u00ecm to\u00e0n b\u1ed9 c\u00e1c dependency trong project c\u1ee7a b\u1ea1n v\u00e0 \u0111\u01b0a v\u00e0o \u0111\u00f3.</p> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ApplicationContext;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        // ApplicationContext ch\u1ee9a to\u00e0n b\u1ed9 dependency trong project.\n        SpringApplication.run(App.class, args);\n    }\n}\n</code></pre> <p>Spring \u0111\u1eb7t t\u00ean cho:</p> <ul> <li>container l\u00e0 <code>ApplicationContext</code></li> <li>dependency l\u00e0 <code>Bean</code> (\u0110\u1ec3 bi\u1ebft c\u00e1i n\u00e0o l\u00e0 dependency th\u00ec d\u00f9ng <code>@Component</code>)</li> </ul>"},{"location":"java/spring-boot/spring-boot/#component","title":"@Component","text":"<p>@Component l\u00e0 m\u1ed9t Annotation (ch\u00fa th\u00edch) \u0111\u00e1nh d\u1ea5u tr\u00ean c\u00e1c Class \u0111\u1ec3 gi\u00fap Spring bi\u1ebft n\u00f3 l\u00e0 m\u1ed9t Bean. </p> <p>Trong qu\u00e1 tr\u00ecnh d\u00f2 c\u00e1c classes, khi g\u1eb7p m\u1ed9t class \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u <code>@Component</code> th\u00ec n\u00f3 s\u1ebd t\u1ea1o ra m\u1ed9t instance v\u00e0 \u0111\u01b0a v\u00e0o <code>ApplicationContext</code> \u0111\u1ec3 qu\u1ea3n l\u00fd.</p> <pre><code>// ApplicationContext ch\u00ednh l\u00e0 container, ch\u1ee9a to\u00e0n b\u1ed9 c\u00e1c Bean\nApplicationContext context = SpringApplication.run(App.class, args);\n// Khi ch\u1ea1y xong, l\u00fac n\u00e0y context s\u1ebd ch\u1ee9a c\u00e1c Bean c\u00f3 \u0111\u00e1nh\n// d\u1ea5u @Component.\n// L\u1ea5y Bean ra b\u1eb1ng c\u00e1ch\nOutfit outfit = context.getBean(Outfit.class);\n// In ra \u0111\u1ec3 xem th\u1eed n\u00f3 l\u00e0 g\u00ec\nSystem.out.println(\"Instance: \" + outfit);\n// x\u00e0i h\u00e0m wear()\noutfit.wear();\n// Output\n// [1] Instance: me.loda.spring.helloworld.Bikini@1e1f6d9d\n// [2] M\u1eb7c bikini\n</code></pre> <p>Danh s\u00e1ch c\u00e1c b\u01b0\u1edbc \u0111\u01a1n gi\u1ea3n l\u00e0:</p> <ol> <li>Ch\u1ea1y <code>SpringApplication.run(App.class, args);</code></li> <li>D\u00f2 t\u00ecm c\u00e1c Classes c\u00f9ng c\u1ea5p.</li> <li>Th\u1ea5y Class \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1eb1ng <code>@Component</code> th\u00ec t\u1ea1o <code>new Customer()</code> ch\u1eb3ng h\u1ea1n v\u00e0 \u0111\u01b0a v\u00e0o Context (Hay <code>ApplicationContext</code>)</li> </ol>"},{"location":"java/spring-boot/spring-boot/#autowired","title":"@Autowired","text":"<pre><code>@Component\npublic class TuiXach {\n\n    @Autowired\n    Money tien;\n\n    public TuiXach (Money tien) {\n        this.tien = tien;\n    }\n}\n</code></pre> <p>T\u00f4i \u0111\u00e1nh d\u1ea5u thu\u1ed9c t\u00ednh <code>Money</code> (Ti\u1ec1n) c\u1ee7a <code>TuiXach</code> (T\u00fai x\u00e1ch) b\u1edfi Annotation <code>@Autowired</code>. \u0110i\u1ec1u n\u00e0y n\u00f3i v\u1edbi Spring Boot h\u00e3y t\u1ef1 inject (ti\u00eam) m\u1ed9t instance c\u1ee7a <code>Money</code> v\u00e0o thu\u1ed9c t\u00ednh n\u00e0y khi kh\u1edfi t\u1ea1o <code>TuiXach</code> (Thu\u1ed9c t\u00ednh \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 <code>@Autowired</code> trong Class \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 <code>Component</code>).</p>"},{"location":"java/spring-boot/spring-boot/#singleton","title":"Singleton","text":"<p>\u0110i\u1ec1u \u0111\u1eb7c bi\u1ec7t l\u00e0 c\u00e1c <code>Bean</code> \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd b\u00ean trong <code>ApplicationContext</code> \u0111\u1ec1u l\u00e0 singleton.</p> <p>T\u1ea5t c\u1ea3 nh\u1eefng <code>Bean</code> \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd trong <code>ApplicationContext</code> \u0111\u1ec1u ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra m\u1ed9t l\u1ea7n duy nh\u1ea5t v\u00e0 khi c\u00f3 <code>Class</code> y\u00eau c\u1ea7u <code>@Autowired</code> th\u00ec n\u00f3 s\u1ebd l\u1ea5y \u0111\u1ed1i t\u01b0\u1ee3ng c\u00f3 s\u1eb5n trong <code>ApplicationContext</code> \u0111\u1ec3 inject v\u00e0o.</p> <p>Trong tr\u01b0\u1eddng h\u1ee3p b\u1ea1n mu\u1ed1n m\u1ed7i l\u1ea7n s\u1eed d\u1ee5ng l\u00e0 m\u1ed9t instance ho\u00e0n to\u00e0n m\u1edbi. Th\u00ec h\u00e3y \u0111\u00e1nh d\u1ea5u <code>@Component</code> \u0111\u00f3 b\u1eb1ng <code>@Scope(\"prototype\")</code></p>"},{"location":"java/spring-boot/spring-boot/#inject-la-cai-quai-gi-vay","title":"Inject l\u00e0 c\u00e1i qu\u00e1i g\u00ec v\u1eady?","text":"<p>\u0110\u00e2y kh\u00f4ng ph\u1ea3i l\u00e0 ph\u1ea7n h\u01b0\u1edbng d\u1eabn c\u1ee7a loda, nh\u01b0ng m\u00ecnh v\u1eabn ch\u01b0a hi\u1ec3u inject (v\u1ec1 c\u01a1 b\u1ea3n ngh\u0129a l\u00e0 ti\u00eam) l\u00e0 g\u00ec? Th\u1eed l\u1ea5y v\u00ed d\u1ee5 v\u1ec1 truy\u1ec1n d\u1ecbch.</p> <p>Truy\u1ec1n n\u01b0\u1edbc bi\u1ec3n c\u00f2n g\u1ecdi l\u00e0 truy\u1ec1n d\u1ecbch l\u00e0 ph\u01b0\u01a1ng ph\u00e1p \u0111\u01b0a nh\u1ecf gi\u1ecdt mu\u1ed1i v\u00e0 c\u00e1c ch\u1ea5t \u0111i\u1ec7n gi\u1ea3i v\u00e0o c\u01a1 th\u1ec3 b\u1eb1ng \u0111\u01b0\u1eddng t\u0129nh m\u1ea1ch khi c\u00f3 ch\u1ec9 \u0111\u1ecbnh c\u1ee7a b\u00e1c s\u0129.</p> <p>Khi \u0111\u00f3 th\u00e0nh c\u00e1c gi\u1ecdt mu\u1ed1i v\u00e0 c\u00e1c ch\u1ea5t \u0111i\u1ec7n gi\u1ea3i s\u1ebd \u0111\u01b0\u1ee3c inject v\u00e0 tr\u1edf th\u00e0nh thu\u1ed9c t\u00ednh trong b\u1ea1n. M\u1ed7i m\u1ed9t Class trong Java c\u0169ng nh\u01b0 b\u1ea1n, l\u00e0 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng (dm gi\u1ea3i th\u00edch ngu qu\u00e1 m\u00e0 t\u00ednh l\u1ea5y v\u00ed d\u1ee5 Peter Park \u0111\u01b0\u1ee3c nh\u1ec7n ch\u00edch v\u00e0 th\u00e0nh Spider Man th\u00ec c\u00f3 ph\u1ea3i hay kh\u00f4ng???)</p> <p>Dependency Injection cho ph\u00e9p \"inject\" (ti\u00eam) nh\u1eefng dependencies v\u00e0o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng. Thay v\u00ec \u0111\u1ed1i t\u01b0\u1ee3ng ph\u1ea3i t\u1ef1 t\u1ea1o ra nh\u1eefng Dependencies c\u1ee7a ch\u00ednh n\u00f3. \u0110i\u1ec1u n\u00e0y s\u1ebd gi\u00fap gi\u1ea3m kh\u1ea3 n\u0103ng ph\u1ee5 thu\u1ed9c gi\u1eefa nh\u1eefng th\u00e0nh ph\u1ea7n. # @Autowired - @Primary - @Qualifier</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang ta s\u1ebd c\u00f9ng t\u00ecm hi\u1ec3u c\u00e1ch\u00a0<code>@Autow\u1ec9ed</code>\u00a0v\u1eadn h\u00e0nh v\u00e0 c\u00e1ch s\u1eed d\u1ee5ng 2 Annotation\u00a0<code>@Primary</code>,\u00a0<code>@Qualifier</code>.</p>"},{"location":"java/spring-boot/spring-boot/#cach-inject-bean-cua-spring","title":"C\u00e1ch inject Bean c\u1ee7a Spring","text":"<p><code>@Autowired</code>\u00a0\u0111\u00e1nh d\u1ea5u cho Spring bi\u1ebft r\u1eb1ng s\u1ebd t\u1ef1 \u0111\u1ed9ng inject bean t\u01b0\u01a1ng \u1ee9ng v\u00e0o v\u1ecb tr\u00ed \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u.</p> <pre><code>@Component\npublic class Girl {\n    // \u0110\u00e1nh d\u1ea5u \u0111\u1ec3 Spring inject m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Outfit v\u00e0o \u0111\u00e2y\n    @Autowired\n    Outfit outfit;\n\n    // public Girl(Outfit outfit) {\n    //     this.outfit = outfit;\n    // }\n\n    // GET\n    // SET\n}\n</code></pre> <p>Sau khi t\u00ecm th\u1ea5y m\u1ed9t class \u0111\u00e1nh d\u1ea5u\u00a0<code>@Component</code>. th\u00ec qu\u00e1 tr\u00ecnh inject\u00a0<code>Bean</code>\u00a0x\u1ea3y ra theo c\u00e1ch nh\u01b0 sau:</p> <ol> <li>N\u1ebfu\u00a0<code>Class</code>\u00a0kh\u00f4ng c\u00f3 h\u00e0m Constructor hay Setter. Th\u00ec s\u1ebd s\u1eed d\u1ee5ng\u00a0Java Reflection\u00a0\u0111\u1ec3 \u0111\u01b0a \u0111\u1ed1i t\u01b0\u1ee3ng v\u00e0o thu\u1ed9c t\u00ednh c\u00f3 \u0111\u00e1nh d\u1ea5u\u00a0<code>@Autowired</code>.</li> <li>N\u1ebfu c\u00f3 h\u00e0m Constructor th\u00ec s\u1ebd inject Bean v\u00e0o b\u1edfi tham s\u1ed1 c\u1ee7a h\u00e0m</li> <li>N\u1ebfu c\u00f3 h\u00e0m Setter th\u00ec s\u1ebd inject Bean v\u00e0o b\u1edfi tham s\u1ed1 c\u1ee7a h\u00e0m</li> </ol> <p>Nh\u01b0 v\u00ed d\u1ee5 \u1edf tr\u00ean t\u00f4i \u0111\u00e3 s\u1eed d\u1ee5ng c\u00e1ch Java Reflection \u0111\u1ec3 inject\u00a0<code>Bean</code>\u00a0v\u00e0o class\u00a0<code>Girl</code>. </p> <p>B\u1ea1n c\u0169ng c\u00f3 th\u1ec3 g\u1eafn\u00a0<code>@Autowired</code>\u00a0l\u00ean tr\u00ean method, thay v\u00ec thu\u1ed9c t\u00ednh, ch\u1ee9c n\u0103ng c\u0169ng v\u1eabn t\u01b0\u01a1ng t\u1ef1, n\u00f3 s\u1ebd t\u00ecm Bean ph\u00f9 h\u1ee3p v\u1edbi method \u0111\u00f3 v\u00e0 truy\u1ec1n v\u00e0o.</p> <pre><code>@Component\npublic class Girl {\n\n    // \u0110\u00e1nh d\u1ea5u \u0111\u1ec3 Spring inject m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Outfit v\u00e0o \u0111\u00e2y\n    @Autowired\n    Outfit outfit;\n\n    // Spring s\u1ebd inject outfit th\u00f4ng qua Constructor tr\u01b0\u1edbc\n    public Girl() { }\n\n    // N\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y Constructor tho\u1ea3 m\u00e3n, n\u00f3 s\u1ebd th\u00f4ng qua setter\n    public void setOutfit(Outfit outfit) {\n        this.outfit = outfit;\n    }\n\n    @Autowired\n    // N\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y Constructor tho\u1ea3 m\u00e3n, n\u00f3 s\u1ebd th\u00f4ng qua setter, \n    // n\u1ebfu v th\u00ec \u0111\u1eebng g\u1eafn Autowired \u1edf properties \u1edf tr\u00ean nha\n    public void setOutfit(Outfit outfit) {\n        this.outfit = outfit;\n    }\n\n    // GET\n    // SET\n}\n</code></pre> <p>N\u1ebfu kh\u00f4ng s\u1eed d\u1ee5ng\u00a0<code>@Autowired</code>\u00a0th\u00ec b\u1ea1n ph\u1ea3i c\u00f3 m\u1ed9t Constructor thay th\u1ebf, ho\u1eb7c m\u1ed9t Setter t\u01b0\u01a1ng \u1ee9ng. Kh\u00e1 nhi\u1ec1u c\u00e1c \u0111\u1ed3ng ch\u00ed g\u1ee3i \u00fd kh\u00f4ng d\u00f9ng <code>@Autowired</code> v\u00e0 thay th\u1ebf b\u1eb1ng:</p> <pre><code>@Component\npublic class Calculator {\n   private Multiplier multiplier;\n   // C\u00e1i l\u00e0y l\u00e0 constructor\n   public Calculator(Multiplier multiplier) {\n      this.multiplier = multiplier;\n   }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#van-e-cua-autowired","title":"V\u1ea5n \u0111\u1ec1 c\u1ee7a @Autowired","text":"<p>Trong th\u1ef1c t\u1ebf, s\u1ebd c\u00f3 tr\u01b0\u1eddng h\u1ee3p ch\u00fang ta s\u1eed d\u1ee5ng\u00a0<code>@Autowired</code>\u00a0khi\u00a0Spring Boot\u00a0c\u00f3 ch\u1ee9a 2 Bean c\u00f9ng lo\u1ea1i trong Context. L\u00fac n\u00e0y th\u00ec\u00a0Spring\u00a0s\u1ebd b\u1ed1i r\u1ed1i v\u00e0 kh\u00f4ng bi\u1ebft s\u1eed d\u1ee5ng Bean n\u00e0o \u0111\u1ec3 inject v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng.</p>"},{"location":"java/spring-boot/spring-boot/#primary","title":"@Primary","text":"<p>C\u00e1ch gi\u1ea3i quy\u1ebft th\u1ee9 nh\u1ea5t l\u00e0 s\u1eed d\u1ee5ng Annotation\u00a0<code>@Primary</code>. <code>@Primary</code>\u00a0l\u00e0 annotation \u0111\u00e1nh d\u1ea5u tr\u00ean m\u1ed9t Bean, gi\u00fap n\u00f3\u00a0lu\u00f4n \u0111\u01b0\u1ee3c \u01b0u ti\u00ean l\u1ef1a\u00a0ch\u1ecdn trong tr\u01b0\u1eddng h\u1ee3p c\u00f3 nhi\u1ec1u Bean c\u00f9ng lo\u1ea1i trong Context.</p> <p>Trong v\u00ed d\u1ee5 \u1edf tr\u00ean, n\u1ebfu ch\u00fang ta \u0111\u1ec3\u00a0<code>Suit</code>\u00a0l\u00e0 primary. Th\u00ec ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ch\u1ea1y b\u00ecnh th\u01b0\u1eddng. V\u00e0 hi\u1ec3n nhi\u00ean\u00a0<code>Outfit</code>\u00a0b\u00ean trong\u00a0<code>Girl</code>\u00a0s\u1ebd l\u00e0\u00a0<code>Suit</code>.</p> <p>Ch\u1ea1y th\u1eed ch\u01b0\u01a1ng tr\u00ecnh:</p> <pre><code>// ===========================================================================\n@Component\n@Primary\npublic class Suit implements Outfit {\n    @Override\n    public void wear() {\n        System.out.println(\"\u0110ang m\u1eb7c \u00e2u ph\u1ee5c\");\n    }\n}\n// ===========================================================================\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        // ApplicationContext ch\u00ednh l\u00e0 container, ch\u1ee9a to\u00e0n b\u1ed9 c\u00e1c Bean\n        ApplicationContext context = SpringApplication.run(App.class, args);\n        // Khi ch\u1ea1y xong, l\u00fac n\u00e0y context s\u1ebd ch\u1ee9a c\u00e1c Bean c\u00f3 \u0111\u00e1nh\n        // d\u1ea5u @Component.\n        Girl girl = context.getBean(Girl.class);\n        System.out.println(\"Girl Instance: \" + girl);\n        System.out.println(\"Girl Outfit: \" + girl.outfit);\n        girl.outfit.wear();\n    }\n}\n// ===========================================================================\n// Output:\n// Girl Instance: me.loda.spring.helloprimaryqualifier.Girl@eb9a089\n// Girl Outfit: me.loda.spring.helloprimaryqualifier.Naked@1688653c\n// \u0110ang m\u1eb7c \u00e2u ph\u1ee5c\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#qualifier","title":"@Qualifier","text":"<p>C\u00e1ch th\u1ee9 hai, l\u00e0 s\u1eed d\u1ee5ng Annotation\u00a0<code>@Qualifier</code>. <code>@Qualifier</code>\u00a0x\u00e1c \u0111\u1ecbnh t\u00ean c\u1ee7a m\u1ed9t Bean m\u00e0 b\u1ea1n mu\u1ed1n ch\u1ec9 \u0111\u1ecbnh inject.</p> <p>V\u00ed d\u1ee5:</p> <p><pre><code>@Component(\"suit\")\npublic class Suit implements Outfit {\n    @Override\n    public void wear() {\n        System.out.println(\"M\u1eb7c \u00e2u ph\u1ee5c\");\n    }\n}\n\n// ==============================================\n@Component\npublic class Girl {\n\n    Outfit outfit;\n\n    // \u0110\u00e1nh d\u1ea5u \u0111\u1ec3 Spring inject m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Outfit v\u00e0o \u0111\u00e2y\n    public Girl(@Qualifier(\"suit\") Outfit outfit) {\n        // Spring s\u1ebd inject outfit th\u00f4ng qua Constructor \u0111\u1ea7u ti\u00ean\n        // Ngo\u00e0i ra, n\u00f3 s\u1ebd t\u00ecm Bean c\u00f3 @Qualifier(\"naked\") trong context \u0111\u1ec3 \u1ecbnject\n        this.outfit = outfit;\n    }\n    // GET\n    // SET\n}\n```# Spring Bean Life Cycle + @PostConstruct v\u00e0 @PreDestroy\n\nT\u00ecm hi\u1ec3u v\u1ec1 v\u00f2ng \u0111\u1eddi c\u1ee7a Bean\n\n### @PostConstruct\n\n`@PostConstruct`\u00a0\u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u tr\u00ean m\u1ed9t method duy nh\u1ea5t b\u00ean trong\u00a0`Bean`.\u00a0\n\n`IoC Container`\u00a0ho\u1eb7c\u00a0`ApplicationContext`\u00a0s\u1ebd g\u1ecdi h\u00e0m n\u00e0y\u00a0sau khi\u00a0m\u1ed9t\u00a0`Bean`\u00a0\u0111\u01b0\u1ee3c t\u1ea1o ra v\u00e0 qu\u1ea3n l\u00fd.\n</code></pre> @Component public class Girl {</p> <pre><code>@PostConstruct\npublic void postConstruct(){\n    System.out.println(\"\\t&gt;&gt; \u0110\u1ed1i t\u01b0\u1ee3ng Girl sau khi kh\u1edfi t\u1ea1o xong s\u1ebd ch\u1ea1y h\u00e0m n\u00e0y\");\n}\n</code></pre> <p>} ``` </p>"},{"location":"java/spring-boot/spring-boot/#predestroy","title":"@PreDestroy","text":"<p><code>@PreDestroy</code>\u00a0\u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u tr\u00ean m\u1ed9t method duy nh\u1ea5t b\u00ean trong\u00a0<code>Bean</code>.\u00a0  <code>IoC Container</code>\u00a0ho\u1eb7c\u00a0<code>ApplicationContext</code>\u00a0s\u1ebd g\u1ecdi h\u00e0m n\u00e0y\u00a0tr\u01b0\u1edbc khi\u00a0m\u1ed9t\u00a0<code>Bean</code>\u00a0b\u1ecb x\u00f3a ho\u1eb7c kh\u00f4ng \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd n\u1eefa.  ``` @Component public class Girl {</p> <pre><code>@PreDestroy\npublic void preDestroy(){\n    System.out.println(\"\\t&gt;&gt; \u0110\u1ed1i t\u01b0\u1ee3ng Girl tr\u01b0\u1edbc khi b\u1ecb destroy th\u00ec ch\u1ea1y h\u00e0m n\u00e0y\");\n}\n</code></pre> <p>} ``` </p>"},{"location":"java/spring-boot/spring-boot/#bean-life-cycle","title":"Bean Life Cycle","text":"<p>Spring Boot\u00a0t\u1eeb th\u1eddi \u0111i\u1ec3m ch\u1ea1y l\u1ea7n \u0111\u1ea7u t\u1edbi khi\u00a0shutdown\u00a0th\u00ec c\u00e1c\u00a0<code>Bean</code>\u00a0n\u00f3 qu\u1ea3n l\u00fd s\u1ebd c\u00f3 m\u1ed9t v\u00f2ng \u0111\u1eddi \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n nh\u01b0 \u1ea3nh d\u01b0\u1edbi \u0111\u00e2y.    Nh\u00ecn c\u00f3 v\u1ebb lo\u1eb1ng ngo\u1eb1ng, trong series c\u0103n b\u1ea3n n\u00e0y, b\u1ea1n c\u00f3 l\u1ebd s\u1ebd ch\u1ec9 c\u1ea7n hi\u1ec3u nh\u01b0 sau:  1. Khi\u00a0<code>IoC Container</code>\u00a0(<code>ApplicationContext</code>) t\u00ecm th\u1ea5y m\u1ed9t Bean c\u1ea7n qu\u1ea3n l\u00fd, n\u00f3 s\u1ebd kh\u1edfi t\u1ea1o b\u1eb1ng\u00a0<code>Constructor</code>. 2. inject dependencies v\u00e0o\u00a0<code>Bean</code>\u00a0b\u1eb1ng Setter, v\u00e0 th\u1ef1c hi\u1ec7n c\u00e1c qu\u00e1 tr\u00ecnh c\u00e0i \u0111\u1eb7t kh\u00e1c v\u00e0o\u00a0<code>Bean</code>\u00a0nh\u01b0\u00a0<code>setBeanName</code>,\u00a0<code>setBeanClassLoader</code>, v.v.. 3. H\u00e0m \u0111\u00e1nh d\u1ea5u\u00a0<code>@PostConstruct</code>\u00a0\u0111\u01b0\u1ee3c g\u1ecdi 4. Ti\u1ec1n x\u1eed l\u00fd sau khi\u00a0<code>@PostConstruct</code>\u00a0\u0111\u01b0\u1ee3c g\u1ecdi. 5. <code>Bean</code>\u00a0s\u1eb5n s\u00e0ng \u0111\u1ec3 ho\u1ea1t \u0111\u1ed9ng 6. N\u1ebfu\u00a0<code>IoC Container</code>\u00a0kh\u00f4ng qu\u1ea3n l\u00fd bean n\u1eefa ho\u1eb7c b\u1ecb shutdown n\u00f3 s\u1ebd g\u1ecdi h\u00e0m\u00a0<code>@PreDestroy</code>\u00a0trong\u00a0<code>Bean</code> 7. X\u00f3a\u00a0<code>Bean</code>. </p>"},{"location":"java/spring-boot/spring-boot/#vi-du","title":"V\u00ed d\u1ee5","text":"<p>Ch\u00fang ta t\u1ea1o ra class\u00a0<code>Girl</code>\u00a0bao g\u1ed3m:  <code>java import org.springframework.stereotype.Component; import javax.annotation.PostConstruct; import javax.annotation.PreDestroy;  @Component public class Girl {      @PostConstruct     public void postConstruct(){         System.out.println(\"\\t&gt;&gt; \u0110\u1ed1i t\u01b0\u1ee3ng Girl sau khi kh\u1edfi t\u1ea1o xong s\u1ebd ch\u1ea1y h\u00e0m n\u00e0y\");     }      @PreDestroy     public void preDestroy(){         System.out.println(\"\\t&gt;&gt; \u0110\u1ed1i t\u01b0\u1ee3ng Girl tr\u01b0\u1edbc khi b\u1ecb destroy th\u00ec ch\u1ea1y h\u00e0m n\u00e0y\");     } }</code></p> <p>In ra m\u00e0n h\u00ecnh qu\u00e1 Spring Boot ch\u1ea1y l\u1ea7n \u0111\u1ea7u cho t\u1edbi khi shutdown:</p> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.ConfigurableApplicationContext;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        // ApplicationContext ch\u00ednh l\u00e0 container, ch\u1ee9a to\u00e0n b\u1ed9 c\u00e1c Bean\n        System.out.println(\"&gt; Tr\u01b0\u1edbc khi IoC Container \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\");\n        ApplicationContext context = SpringApplication.run(App.class, args);\n        System.out.println(\"&gt; Sau khi IoC Container \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\");\n        // Khi ch\u1ea1y xong, l\u00fac n\u00e0y context s\u1ebd ch\u1ee9a c\u00e1c Bean c\u00f3 \u0111\u00e1nh\n        // d\u1ea5u @Component.\n        Girl girl = context.getBean(Girl.class);\n        System.out.println(\"&gt; Tr\u01b0\u1edbc khi IoC Container destroy Girl\");\n        ((ConfigurableApplicationContext) context).getBeanFactory().destroyBean(girl);\n        System.out.println(\"&gt; Sau khi IoC Container destroy Girl\");\n\n    }\n}\n</code></pre> <p>Output:</p> <pre><code>&gt; Tr\u01b0\u1edbc khi IoC Container \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\n&gt; Tr\u01b0\u1edbc khi IoC Container \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\n    &gt;&gt; \u0110\u1ed1i t\u01b0\u1ee3ng Girl sau khi kh\u1edfi t\u1ea1o xong s\u1ebd ch\u1ea1y h\u00e0m n\u00e0y\n&gt; Sau khi IoC Container \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\n&gt; Tr\u01b0\u1edbc khi IoC Container destroy Girl\n    &gt;&gt; \u0110\u1ed1i t\u01b0\u1ee3ng Girl tr\u01b0\u1edbc khi b\u1ecb destroy th\u00ec ch\u1ea1y h\u00e0m n\u00e0y\n&gt; Sau khi IoC Container destroy Girl\n</code></pre> <p>B\u1ea1n s\u1ebd th\u1ea5y d\u00f2ng\u00a0\"Tr\u01b0\u1edbc khi IoC Container \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\"\u00a0\u0111\u01b0\u1ee3c ch\u1ea1y 2 l\u1ea7n. \u0110i\u1ec1u n\u00e0y x\u1ea3y ra b\u1edfi v\u00ec h\u00e0m\u00a0App.main(args)\u00a0\u0111\u01b0\u1ee3c ch\u1ea1y 2 l\u1ea7n!</p> <p>L\u1ea7n \u0111\u1ea7u l\u00e0 do ch\u00fang ta ch\u1ea1y. L\u1ea7n th\u1ee9 hai l\u00e0 do\u00a0Spring Boot\u00a0ch\u1ea1y sau khi n\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi\u00a0<code>SpringApplication.run(App.class, args)</code>. \u0110\u00e2y l\u00e0 l\u00fac m\u00e0\u00a0IoC Container\u00a0(<code>ApplicationContext</code>) \u0111\u01b0\u1ee3c t\u1ea1o ra v\u00e0 \u0111i t\u00ecm\u00a0<code>Bean</code>.</p>"},{"location":"java/spring-boot/spring-boot/#y-nghia","title":"\u00dd ngh\u0129a.","text":"<p><code>@PostConstruct</code>\u00a0v\u00e0\u00a0<code>@PreDestroy</code>\u00a0l\u00e0 2 Annotation c\u1ef1c k\u1ef3 \u00fd ngh\u0129a, n\u1ebfu b\u1ea1n n\u1eafm \u0111\u01b0\u1ee3c v\u00f2ng \u0111\u1eddi c\u1ee7a m\u1ed9t\u00a0<code>Bean</code>, b\u1ea1n c\u00f3 th\u1ec3 t\u1eadn d\u1ee5ng n\u00f3 \u0111\u1ec3 l\u00e0m c\u00e1c nhi\u1ec7m v\u1ee5 ri\u00eang nh\u01b0 setting, th\u00eam gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh trong thu\u1ed9c t\u00ednh sau khi t\u1ea1o, x\u00f3a d\u1eef li\u1ec7u tr\u01b0\u1edbc khi x\u00f3a, v.v.. R\u1ea5t nhi\u1ec1u ch\u1ee9c n\u0103ng kh\u00e1c t\u00f9y theo nhu c\u1ea7u.# @Component vs @Service vs @Repository</p>"},{"location":"java/spring-boot/spring-boot/#kien-truc-trong-spring-boot","title":"Ki\u1ebfn tr\u00fac trong Spring Boot","text":"<p>Ki\u1ebfn tr\u00fac MVC trong Spring Boot \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u1ef1a tr\u00ean t\u01b0 t\u01b0\u1edfng \"\u0111\u1ed9c l\u1eadp\" k\u1ebft h\u1ee3p v\u1edbi c\u00e1c nguy\u00ean l\u00fd thi\u1ebft k\u1ebf h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng (m\u1ed9t \u0111\u1ea1i di\u1ec7n ti\u00eau bi\u1ec3u l\u00e0 Dependency Inversion). </p> <p>\u0110\u1ed9c l\u1eadp \u1edf \u0111\u00e2y \u00e1m ch\u1ec9 vi\u1ec7c c\u00e1c layer ph\u1ee5c v\u1ee5 c\u00e1c m\u1ee5c \u0111\u00edch nh\u1ea5t \u0111\u1ecbnh, khi mu\u1ed1n th\u1ef1c hi\u1ec7n m\u1ed9t c\u00f4ng vi\u1ec7c ngo\u00e0i ph\u1ea1m vi th\u00ec s\u1ebd \u0111\u01b0a c\u00f4ng vi\u1ec7c xu\u1ed1ng c\u00e1c layer th\u1ea5p h\u01a1n.</p> <p>Ki\u1ebfn tr\u00fac Controller - Service - Repository chia project th\u00e0nh 3 l\u1edbp:</p> <ul> <li>Consumer Layer hay Controller:\u00a0l\u00e0 t\u1ea7ng giao ti\u1ebfp v\u1edbi b\u00ean ngo\u00e0i v\u00e0 handler c\u00e1c request t\u1eeb b\u00ean ngo\u00e0i t\u1edbi h\u1ec7 th\u1ed1ng.</li> <li>Service Layer:\u00a0Th\u1ef1c hi\u1ec7n c\u00e1c nghi\u1ec7p v\u1ee5 v\u00e0 x\u1eed l\u00fd logic</li> <li>Repository Layer: Ch\u1ecbu tr\u00e1ch nhi\u1ec7m giao ti\u1ebfp v\u1edbi c\u00e1c DB, thi\u1ebft b\u1ecb l\u01b0u tr\u1eef, x\u1eed l\u00fd query v\u00e0 tr\u1ea3 v\u1ec1 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u m\u00e0 t\u1ea7ng Service y\u00eau c\u1ea7u.</li> </ul>"},{"location":"java/spring-boot/spring-boot/#controller-vs-service-vs-repository","title":"@Controller vs @Service vs @Repository","text":"<p>\u0110\u1ec3 ph\u1ee5c v\u1ee5 cho ki\u1ebfn tr\u00fac \u1edf tr\u00ean,\u00a0Spring Boot\u00a0t\u1ea1o ra 3 Annotation l\u00e0\u00a0<code>@Controller</code>,\u00a0<code>@Service</code>, <code>@Repository</code>\u00a0\u0111\u1ec3 ch\u00fang ta c\u00f3 th\u1ec3 \u0111\u00e1nh d\u1ea5u c\u00e1c t\u1ea7ng v\u1edbi nhau.</p> <ul> <li><code>@Service</code>\u00a0\u0110\u00e1nh d\u1ea5u m\u1ed9t Class l\u00e0 t\u1ea7ng Service, ph\u1ee5c v\u1ee5 c\u00e1c logic nghi\u1ec7p v\u1ee5.</li> <li><code>@Repository</code>\u00a0\u0110\u00e1nh d\u1ea5u m\u1ed9t Class L\u00e0 t\u1ea7ng Repository, ph\u1ee5c v\u1ee5 truy xu\u1ea5t d\u1eef li\u1ec7u.</li> </ul>"},{"location":"java/spring-boot/spring-boot/#implement","title":"Implement","text":"<p>Ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh:</p> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ApplicationContext;\n\n@SpringBootApplication\npublic class App {\n\n    public static void main(String[] args) {\n        ApplicationContext context = SpringApplication.run(App.class, args);\n\n        // L\u1ea5y ra bean GirlService\n        GirlService girlService = context.getBean(GirlService.class);\n        // L\u1ea5u ra random m\u1ed9t c\u00f4 g\u00e1i t\u1eeb t\u1ea7ng service\n        Girl girl = girlService.getRandomGirl();\n        // In ra m\u00e0n h\u00ecnh\n        System.out.println(girl);\n\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#giai-thich","title":"Gi\u1ea3i th\u00edch","text":"<p>V\u1ec1 b\u1ea3n ch\u1ea5t\u00a0<code>@Service</code>\u00a0v\u00e0\u00a0<code>@Repository</code>\u00a0c\u0169ng ch\u00ednh l\u00e0\u00a0<code>@Component</code>. Nh\u01b0ng \u0111\u1eb7t t\u00ean kh\u00e1c nhau \u0111\u1ec3 gi\u00fap ch\u00fang ta ph\u00e2n bi\u1ec7t c\u00e1c t\u1ea7ng v\u1edbi nhau.</p> <p>C\u00f9ng nh\u00ecn v\u00e0o source code c\u1ee7a 2 Annotation n\u00e0y:</p> <p>Service.java</p> <pre><code>@Target({ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Component // C\u0169ng l\u00e0 m\u1ed9t @Component\npublic @interface Service {\n    @AliasFor(\n        annotation = Component.class\n    )\n    String value() default \"\";\n}\n</code></pre> <p>Repository.java</p> <pre><code>@Target({ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Component\npublic @interface Repository {\n    @AliasFor(\n        annotation = Component.class\n    )\n    String value() default \"\";\n}\n</code></pre> <p>Trong c\u00e1c b\u00e0i \u0111\u1ea7u ti\u00ean ch\u00fang ta \u0111\u00e3 bi\u1ebft\u00a0<code>@Component</code>\u00a0\u0111\u00e1nh d\u1ea5u cho Spring Boot bi\u1ebft Class \u0111\u00f3 l\u00e0\u00a0<code>Bean</code>. V\u00e0 hi\u1ec3n nhi\u00ean\u00a0<code>@Service</code>\u00a0v\u00e0\u00a0<code>@Repository</code>\u00a0c\u0169ng v\u1eady. V\u00ec th\u1ebf \u1edf v\u00ed d\u1ee5 tr\u00ean ch\u00fang ta c\u00f3 th\u1ec3 l\u1ea5y\u00a0<code>GirlService</code>\u00a0t\u1eeb\u00a0<code>ApplicationContext</code>. V\u1ec1 b\u1ea3n ch\u1ea5t th\u00ec b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng thay th\u1ebf 3 Annotation\u00a0<code>@Component</code>,\u00a0<code>@Service</code>\u00a0v\u00e0\u00a0<code>@Repository</code>\u00a0cho nhau m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng g\u00ec t\u1edbi code c\u1ee7a b\u1ea1n c\u1ea3. N\u00f3 v\u1eabn s\u1ebd ho\u1ea1t \u0111\u1ed9ng.</p> <p>Tuy nhi\u00ean t\u1eeb g\u00f3c \u0111\u1ed9 thi\u1ebft k\u1ebf th\u00ec ch\u00fang ta c\u1ea7n ph\u00e2n r\u00f5 3 Annotation n\u00e0y cho c\u00e1c Class \u0111\u1ea3m nhi\u1ec7m \u0111\u00fang nhi\u1ec7m v\u1ee5 c\u1ee7a n\u00f3.</p> <ul> <li><code>@Service</code>\u00a0g\u1eafn cho c\u00e1c\u00a0<code>Bean</code>\u00a0\u0111\u1ea3m nhi\u1ec7m x\u1eed l\u00fd logic</li> <li><code>@Repository</code>\u00a0g\u1eafn cho c\u00e1c\u00a0<code>Bean</code>\u00a0\u0111\u1ea3m nhi\u1ec7m giao ti\u1ebfp v\u1edbi DB</li> <li><code>@Component</code>\u00a0g\u1eafn cho c\u00e1c\u00a0<code>Bean</code>\u00a0kh\u00e1c.</li> </ul>"},{"location":"java/spring-boot/spring-boot/#component-scan-la-gi","title":"Component Scan l\u00e0 g\u00ec?","text":"<p>Ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u th\u00eam v\u1ec1 c\u00e1ch\u00a0Spring Boot\u00a0t\u00ecm ki\u1ebfm\u00a0<code>Bean</code>\u00a0trong project c\u1ee7a b\u1ea1n nh\u01b0 th\u1ebf n\u00e0o.</p>"},{"location":"java/spring-boot/spring-boot/#component-scan","title":"Component Scan","text":"<p>Trong\u00a0b\u00e0i 1\u00a0t\u00f4i c\u00f3 \u0111\u1ec1 c\u1eadp m\u1ed9t l\u1ea7n v\u1ec1 vi\u1ec7c\u00a0Spring Boot\u00a0khi ch\u1ea1y s\u1ebd d\u00f2 t\u00ecm to\u00e0n b\u1ed9 c\u00e1c\u00a0Class c\u00f9ng c\u1ea5p\u00a0ho\u1eb7c \u1edf trong c\u00e1c\u00a0package th\u1ea5p h\u01a1n\u00a0v\u00e0 t\u1ea1o ra Bean t\u1eeb c\u00e1c Class t\u00ecm th\u1ea5y.</p> <p>Trong tr\u01b0\u1eddng h\u1ee3p b\u1ea1n mu\u1ed1n tu\u1ef3 ch\u1ec9nh c\u1ea5u h\u00ecnh cho\u00a0Spring Boot\u00a0ch\u1ec9 t\u00ecm ki\u1ebfm c\u00e1c bean trong m\u1ed9t package nh\u1ea5t \u0111\u1ecbnh th\u00ec c\u00f3 c\u00e1c c\u00e1ch sau \u0111\u00e2y:</p> <ol> <li>S\u1eed d\u1ee5ng\u00a0<code>@ComponentScan</code></li> <li>S\u1eed d\u1ee5ng\u00a0<code>scanBasePackages</code>\u00a0tromg\u00a0<code>@SpringBootApplication</code>.</li> </ol> <p>B\u1ea1n c\u00f3 th\u1ec3 c\u1ea5u h\u00ecnh cho\u00a0Spring Boot\u00a0T\u00ecm ki\u1ebfm c\u00e1c Bean \u1edf nhi\u1ec1u package kh\u00e1c nhau b\u1eb1ng c\u00e1ch</p>"},{"location":"java/spring-boot/spring-boot/#cach-1componentscan","title":"C\u00e1ch 1:<code>@ComponentScan</code>","text":"<pre><code>@ComponentScan(\"me.loda.spring.componentscan.others\")\n// T\u00ecm nhi\u1ec1u package kh\u00e1c nhau\n// @ComponentScan({\"me.loda.spring.componentscan.others2\",\"me.loda.spring.componentscan.others\"})\n\n@SpringBootApplication\npublic class App {\n    ...\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#cach-2scanbasepackages","title":"C\u00e1ch 2:<code>scanBasePackages</code>","text":"<pre><code>@SpringBootApplication(scanBasePackages = \"me.loda.spring.componentscan.others\")\n// T\u00ecm nhi\u1ec1u package kh\u00e1c nhau\n// @SpringBootApplication(scanBasePackages = {\"me.loda.spring.componentscan.others\", \"me.loda.spring.componentscan.others2\"})\npublic class App {\n  ...\n}\n</code></pre> <p>C\u1ea3 2 c\u00e1ch \u0111\u1ec1u cho k\u1ebft qu\u1ea3 in ra m\u00e0n h\u00ecnh nh\u01b0 sau:</p> <pre><code>Bean Girl kh\u00f4ng t\u1ed3n t\u1ea1i\nBean: OtherGirl.java\n</code></pre> <p>L\u00fac n\u00e0y,\u00a0Spring Boot\u00a0ch\u1ec9 t\u00ecm ki\u1ebfm c\u00e1c bean trong package\u00a0<code>others</code>\u00a0m\u00e0 th\u00f4i. N\u00ean khi l\u1ea5y ra\u00a0<code>Girl</code>\u00a0th\u00ec n\u00f3 kh\u00f4ng t\u1ed3n t\u1ea1i trong\u00a0<code>Context</code>.</p>"},{"location":"java/spring-boot/spring-boot/#configuration-va-bean","title":"@Configuration v\u00e0 @Bean","text":""},{"location":"java/spring-boot/spring-boot/#configuration-va-bean_1","title":"@Configuration v\u00e0 @Bean","text":"<p><code>@Configuration</code>\u00a0l\u00e0 m\u1ed9t Annotation \u0111\u00e1nh d\u1ea5u tr\u00ean m\u1ed9t\u00a0<code>Class</code>\u00a0cho ph\u00e9p\u00a0Spring Boot\u00a0bi\u1ebft \u0111\u01b0\u1ee3c \u0111\u00e2y l\u00e0 n\u01a1i \u0111\u1ecbnh ngh\u0129a ra c\u00e1c\u00a0Bean.</p> <p><code>@Bean</code>\u00a0l\u00e0 m\u1ed9t Annotation \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u tr\u00ean c\u00e1c\u00a0<code>method</code>\u00a0cho ph\u00e9p\u00a0Spring Boot\u00a0bi\u1ebft \u0111\u01b0\u1ee3c \u0111\u00e2y l\u00e0\u00a0Bean\u00a0v\u00e0 s\u1ebd th\u1ef1c hi\u1ec7n \u0111\u01b0a\u00a0Bean\u00a0n\u00e0y v\u00e0o\u00a0<code>Context</code>.</p> <p><code>@Bean</code>\u00a0s\u1ebd n\u1eb1m trong c\u00e1c class c\u00f3 \u0111\u00e1nh d\u1ea5u\u00a0<code>@Configuration</code>.</p> <p>V\u00ed d\u1ee5:</p> <p>SimpleBean.java</p> <pre><code>// M\u1ed9t class c\u01a1 b\u1ea3n, kh\u00f4ng s\u1eed d\u1ee5ng `@Component`\n\npublic class SimpleBean {\n    private String username;\n\n    public SimpleBean(String username) {\n        setUsername(username);\n    }\n\n    @Override\n    public String toString() {\n        return \"This is a simple bean, name: \" + username;\n    }\n}\n</code></pre> <p>AppConfig.java</p> <pre><code>import org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class AppConfig {\n    @Bean\n    SimpleBean simpleBeanConfigure(){\n        // Kh\u1edfi t\u1ea1o m\u1ed9t instance c\u1ee7a SimpleBean v\u00e0 tr\u1ea3 ra ngo\u00e0i\n        return new SimpleBean(\"loda\");\n    }\n}\n</code></pre> <p>App.java</p> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ApplicationContext;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        ApplicationContext context = SpringApplication.run(App.class, args);\n        // L\u1ea5y ra bean SimpleBean trong Context\n        SimpleBean simpleBean = context.getBean(SimpleBean.class);\n        // In ra m\u00e0n h\u00ecnh\n        System.out.println(\"Simple Bean Example: \" + simpleBean.toString());\n        // OUTPUT: Simple Bean Example: This is a simple bean, name: loda\n    }\n}\n</code></pre> <p>B\u1ea1n s\u1ebd th\u1ea5y l\u00e0\u00a0<code>SimpleBean</code>\u00a0l\u00e0 m\u1ed9t object \u0111\u01b0\u1ee3c qu\u1ea3n l\u00fd trong\u00a0<code>Context</code>\u00a0c\u1ee7a\u00a0Spring Boot, m\u1eb7c d\u00f9 trong b\u00e0i n\u00e0y, ch\u00fang ta kh\u00f4ng h\u1ec1 s\u1eed d\u1ee5ng t\u1edbi c\u00e1c kh\u00e1i ni\u1ec7m\u00a0<code>@Component</code>.</p>"},{"location":"java/spring-boot/spring-boot/#hoat-ong-nen","title":"Ho\u1ea1t \u0111\u1ed9ng n\u1ec1n","text":"<p>\u0110\u1eb1ng sau ch\u01b0\u01a1ng tr\u00ecnh,\u00a0Spring Boot\u00a0l\u1ea7n \u0111\u1ea7u kh\u1edfi ch\u1ea1y, ngo\u00e0i vi\u1ec7c \u0111i t\u00ecm c\u00e1c\u00a0<code>@Component</code>\u00a0th\u00ec n\u00f3 c\u00f2n l\u00e0m m\u1ed9t nhi\u1ec7m v\u1ee5 n\u1eefa l\u00e0 t\u00ecm c\u00e1c class\u00a0<code>@Configuration</code>.</p> <ol> <li>\u0110i t\u00ecm class c\u00f3 \u0111\u00e1nh d\u1ea5u\u00a0<code>@Configuration</code></li> <li>T\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng t\u1eeb class c\u00f3 \u0111\u00e1nh d\u1ea5u\u00a0<code>@Configuration</code></li> <li>t\u00ecm c\u00e1c method c\u00f3 \u0111\u00e1nh d\u1ea5u\u00a0<code>@Bean</code>\u00a0trong \u0111\u1ed1i t\u01b0\u1ee3ng v\u1eeba t\u1ea1o</li> <li>Th\u1ef1c hi\u1ec7n g\u1ecdi c\u00e1c method c\u00f3 \u0111\u00e1nh d\u1ea5u\u00a0<code>@Bean</code>\u00a0\u0111\u1ec3 l\u1ea5y ra c\u00e1c\u00a0Bean\u00a0v\u00e0 \u0111\u01b0a v\u00e0o `Context.</li> </ol> <p>Ngo\u00e0i ra, v\u1ec1 b\u1ea3n ch\u1ea5t,\u00a0<code>@Configuration</code>\u00a0c\u0169ng l\u00e0\u00a0<code>@Component</code>. N\u00f3 ch\u1ec9 kh\u00e1c \u1edf \u00fd ngh\u0129a s\u1eed d\u1ee5ng. (Gi\u1ed1ng v\u1edbi vi\u1ec7c class \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u\u00a0<code>@Service</code>\u00a0ch\u1ec9 n\u00ean ph\u1ee5c v\u1ee5 logic v\u1eady).</p> <pre><code>@Target({ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Component // N\u00f3 \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u l\u00e0 Component\npublic @interface Configuration {\n    @AliasFor(\n        annotation = Component.class\n    )\n    String value() default \"\";\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#co-y-nghia-gi","title":"C\u00f3 \u00fd ngh\u0129a g\u00ec?","text":"<p>Nhi\u1ec1u b\u1ea1n s\u1ebd t\u1ef1 h\u1ecfi r\u1eb1ng\u00a0<code>@Configuration</code>\u00a0v\u00e0\u00a0<code>@Bean</code>\u00a0s\u1ebd c\u00f3 \u00fd ngh\u0129a g\u00ec khi ch\u00fang ta \u0111\u00e3 c\u00f3\u00a0<code>@Component</code>? Sao kh\u00f4ng \u0111\u00e1nh d\u1ea5u\u00a0<code>SimpleBean</code>\u00a0l\u00e0\u00a0<code>@Component</code>\u00a0cho nhanh?</p> <p>C\u00e1c b\u1ea1n th\u1eafc m\u1eafc r\u1ea5t \u0111\u00fang, v\u00e0 vi\u1ec7c s\u1eed d\u1ee5ng\u00a0<code>@Component</code>\u00a0c\u0169ng ho\u00e0n to\u00e0n \u1ed5n.</p> <p>Th\u00f4ng th\u01b0\u1eddng th\u00ec c\u00e1c class \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u\u00a0<code>@Component</code>\u00a0\u0111\u1ec1u c\u00f3 th\u1ec3 t\u1ea1o t\u1ef1 \u0111\u1ed9ng v\u00e0 inject t\u1ef1 \u0111\u1ed9ng \u0111\u01b0\u1ee3c.</p> <p>Tuy nhi\u00ean trong th\u1ef1c t\u1ebf, n\u1ebfu m\u1ed9t\u00a0<code>Bean</code>\u00a0c\u00f3 qu\u00e1 nhi\u1ec1u logic \u0111\u1ec3 kh\u1edfi t\u1ea1o v\u00e0 c\u1ea5u h\u00ecnh, th\u00ec ch\u00fang ta s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>@Configuration</code>\u00a0v\u00e0\u00a0<code>@Bean</code>\u00a0\u0111\u1ec3 t\u1ef1 tay t\u1ea1o ra\u00a0<code>Bean</code>. Vi\u1ec7c t\u1ef1 tay t\u1ea1o ra\u00a0<code>Bean</code>\u00a0nh\u01b0 n\u00e0y c\u00f3 th\u1ec3 hi\u1ec3u ph\u1ea7n n\u00e0o l\u00e0 ch\u00fang ta \u0111ang\u00a0config\u00a0cho ch\u01b0\u01a1ng tr\u00ecnh.</p>"},{"location":"java/spring-boot/spring-boot/#vi-du_1","title":"V\u00ed d\u1ee5","text":"<p>\u0110\u1ecdc trong trang b\u00e0i vi\u1ebft</p>"},{"location":"java/spring-boot/spring-boot/#bean-co-tham-so","title":"@Bean c\u00f3 tham s\u1ed1","text":"<p>N\u1ebfu method \u0111\u01b0\u1ee3c \u0111\u00e1nh d\u1ea5u b\u1edfi\u00a0<code>@Bean</code>\u00a0c\u00f3 tham s\u1ed1 truy\u1ec1n v\u00e0o, th\u00ec\u00a0Spring Boot\u00a0s\u1ebd t\u1ef1 inject c\u00e1c Bean \u0111\u00e3 c\u00f3 trong\u00a0<code>Context</code>\u00a0v\u00e0o l\u00e0m tham s\u1ed1.</p> <p>V\u00ed d\u1ee5:</p> <p>AppConfig.java</p> <pre><code>@Configuration\npublic class AppConfig {\n\n    @Bean\n    SimpleBean simpleBeanConfigure(){\n        // Kh\u1edfi t\u1ea1o m\u1ed9t instance c\u1ee7a SimpleBean v\u00e0 tr\u1ea3 ra ngo\u00e0i\n        return new SimpleBean(\"loda\");\n    }\n\n    @Bean(\"mysqlConnector\")\n    DatabaseConnector mysqlConfigure(SimpleBean simpleBean) { // SimpleBean \u0111\u01b0\u1ee3c t\u1ef1 \u0111\u1ed9ng inject v\u00e0o.\n        DatabaseConnector mySqlConnector = new MySqlConnector();\n        mySqlConnector.setUrl(\"jdbc:mysql://host1:33060/\" + simpleBean.getUsername());\n        // Set username, password, format, v.v...\n        return mySqlConnector;\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#thuc-te","title":"Th\u1ef1c t\u1ebf","text":"<p>Trong th\u1ef1c t\u1ebf, vi\u1ec7c s\u1eed d\u1ee5ng\u00a0<code>@Configuration</code>\u00a0l\u00e0 h\u1ebft s\u1ee9c c\u1ea7n thi\u1ebft, v\u00e0 n\u00f3 \u0111\u00f3ng vai tr\u00f2 l\u00e0 n\u01a1i c\u1ea5u h\u00ecnh cho to\u00e0n b\u1ed9 \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n. M\u1ed9t \u1ee8ng d\u1ee5ng s\u1ebd c\u00f3 nhi\u1ec1u class ch\u1ee9a\u00a0<code>@Configuration</code>\u00a0v\u00e0 m\u1ed7i class s\u1ebd \u0111\u1ea3m nh\u1eadn c\u1ea5u h\u00ecnh m\u1ed9t b\u1ed9 ph\u1eadn g\u00ec \u0111\u00f3 trong \u1ee9ng d\u1ee5ng.</p>"},{"location":"java/spring-boot/spring-boot/#application-config-va-value","title":"Application Config v\u00e0 @Value","text":"<p>Trong th\u1ef1c t\u1ebf kh\u00f4ng ph\u1ea3i l\u00fac n\u00e0o ch\u00fang ta c\u0169ng n\u00ean \u0111\u1ec3 m\u1ecdi th\u1ee9 trong code c\u1ee7a m\u00ecnh. C\u00f3 nh\u1eefng th\u00f4ng s\u1ed1 t\u1ed1t h\u01a1n h\u1ebft n\u00ean \u0111\u01b0\u1ee3c truy\u1ec1n t\u1eeb b\u00ean ngo\u00e0i v\u00e0o \u1ee9ng d\u1ee5ng, \u0111\u1ec3 gi\u00fap \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n d\u1ec5 d\u00e0ng thay \u0111\u1ed5i gi\u1eefa c\u00e1c m\u00f4i tr\u01b0\u1eddng kh\u00e1c nhau. \u0110\u1ec3 ph\u1ee5c v\u1ee5 \u0111i\u1ec1u n\u00e0y, ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u v\u1ec1 kh\u00e1i ni\u1ec7m config \u1ee9ng d\u1ee5ng\u00a0Spring Boot\u00a0v\u1edbi\u00a0<code>application.properties</code></p>"},{"location":"java/spring-boot/spring-boot/#applicationproperties","title":"application.properties","text":"<p>Trong\u00a0Spring Boot, c\u00e1c th\u00f4ng tin c\u1ea5u h\u00ecnh m\u1eb7c \u0111\u1ecbnh \u0111\u01b0\u1ee3c l\u1ea5y t\u1eeb file\u00a0<code>resources/applications.properties</code>. V\u00ed d\u1ee5, b\u1ea1n mu\u1ed1n\u00a0Spring Boot\u00a0ch\u1ea1y tr\u00ean port 8081 thay v\u00ec 8080 th\u00ec <code>server.port = 8081</code></p> <p>Ho\u1eb7c b\u1ea1n mu\u1ed1n log c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh chi ti\u1ebft h\u01a1n. H\u00e3y chuy\u1ec3n n\u00f3 sang d\u1eadng Debug b\u1eb1ng c\u00e1ch config nh\u01b0 sau: <code>logging.level.root=DEBUG</code></p>"},{"location":"java/spring-boot/spring-boot/#value","title":"@Value","text":"<p>Trong tr\u01b0\u1eddng h\u1ee3p, b\u1ea1n mu\u1ed1n t\u1ef1 config nh\u1eefng gi\u00e1 tr\u1ecb c\u1ee7a ri\u00eang m\u00ecnh, th\u00ec\u00a0Spring Boot\u00a0h\u1ed7 tr\u1ee3 b\u1ea1n v\u1edbi annotation\u00a0<code>@Value</code></p> <p>V\u00ed d\u1ee5, t\u00f4i mu\u1ed1n c\u1ea5u h\u00ecnh cho th\u00f4ng tin database c\u1ee7a t\u00f4i t\u1eeb b\u00ean ngo\u00e0i \u1ee9ng d\u1ee5ng</p> <p>application.properties</p> <pre><code>loda.mysql.url=jdbc:mysql://host1:33060/loda\n</code></pre> <p><code>@Value</code>\u00a0\u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng tr\u00ean thu\u1ed9c t\u00ednh c\u1ee7a class, C\u00f3 nhi\u1ec7m v\u1ee5 l\u1ea5y th\u00f4ng tin t\u1eeb file properties v\u00e0 g\u00e1n v\u00e0o bi\u1ebfn.</p> <pre><code>public class AppConfig {\n    // L\u1ea5y gi\u00e1 tr\u1ecb config t\u1eeb file application.properties\n    @Value(\"${loda.mysql.url}\")\n    String mysqlUrl;\n}\n</code></pre> <p>Th\u00f4ng tin truy\u1ec1n v\u00e0o annottaion\u00a0<code>@Value</code>\u00a0ch\u00ednh l\u00e0 t\u00ean c\u1ee7a c\u1ea5u h\u00ecnh \u0111\u1eb7t trong d\u1ea5u\u00a0<code>${name}</code></p>"},{"location":"java/spring-boot/spring-boot/#vi-du-va-oc-them","title":"V\u00ed d\u1ee5 v\u00e0 \u0111\u1ecdc th\u00eam","text":"<p>Ph\u1ea7n v\u00ed d\u1ee5 \u0111\u1ea7y \u0111\u1ee7 cho b\u00e0i vi\u1ebft n\u00e0y</p> <p>Sau b\u00e0i n\u00e0y b\u1ea1n c\u00f3 th\u1ec3 xem th\u00eam n\u1ed9i dung sau:</p> <ol> <li>H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng Spring Properties v\u1edbi <code>@ConfigurationProperties</code></li> <li>H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng Spring Profiles# @Controller + Thymeleaf</li> </ol>"},{"location":"java/spring-boot/spring-boot/#controller","title":"@Controller","text":"<p>Trong b\u00e0i vi\u1ebft s\u1ed1 4, khi n\u00f3i v\u1ec1\u00a0<code>@Service</code>\u00a0v\u00e0\u00a0<code>@Repository</code>\u00a0t\u00f4i \u0111\u00e3 \u0111\u1ec1 c\u1eadp t\u1edbi ki\u1ebfn tr\u00fac trong\u00a0Spring Boot.</p> <p>\u0110\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t trang web v\u1edbi\u00a0Spring Boot, b\u1ea1n s\u1ebd c\u1ea7n tu\u00e2n theo quy tr\u00ecnh nh\u01b0 h\u00ecnh d\u01b0\u1edbi \u0111\u00e2y:</p> <p></p> <p><code>@Controller</code>\u00a0l\u00e0 n\u01a1i ti\u1ebfp nh\u1eadn c\u00e1c th\u00f4ng tin request t\u1eeb ph\u00eda ng\u01b0\u1eddi d\u00f9ng. N\u00f3 c\u00f3 nhi\u1ec7m v\u1ee5 \u0111\u00f3n nh\u1eadn c\u00e1c y\u00eau c\u1ea7u (k\u00e8m theo th\u00f4ng tin request) v\u00e0 chuy\u1ec3n c\u00e1c y\u00eau c\u1ea7u n\u00e0y xu\u1ed1ng cho t\u1ea7ng\u00a0<code>@Serivce</code>\u00a0x\u1eed l\u00fd logic.</p>"},{"location":"java/spring-boot/spring-boot/#html","title":"HTML","text":"<p>\u0110\u1ec3 t\u1ea1o ra m\u1ed9t trang Web, b\u1ea1n s\u1ebd c\u1ea7n t\u1ea1o ra c\u00e1c trang html \u0111\u1ec3 tr\u1ea3 v\u1ec1 cho ng\u01b0\u1eddi d\u00f9ng. M\u1eb7c \u0111\u1ecbnh trong\u00a0Spring Boot, c\u00e1c file html n\u00e0y s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef trong th\u01b0 m\u1ee5c\u00a0<code>resources/templates</code>. Spring Boot + Thymeleaf\u00a0s\u1ebd t\u00ecm ki\u1ebfm c\u00e1c file n\u00e0y theo t\u00ean. V\u00ed d\u1ee5 \"index\" s\u1ebd t\u01b0\u01a1ng \u1ee9ng v\u1edbi \"index.html\".</p>"},{"location":"java/spring-boot/spring-boot/#giai-thich-1","title":"Gi\u1ea3i th\u00edch 1","text":"<p>B\u1ea3n th\u00e2n\u00a0<code>@Controller</code>\u00a0C\u0169ng l\u00e0 m\u1ed9t\u00a0<code>@Component</code>\u00a0n\u00ean n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c\u00a0Spring Boot\u00a0qu\u1ea3n l\u00fd.</p> <pre><code>@Target({ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Component\npublic @interface Controller {\n    @AliasFor(\n        annotation = Component.class\n    )\n    String value() default \"\";\n}\n</code></pre> <p>Spring Boot\u00a0s\u1ebd l\u1eafng nghe c\u00e1c request t\u1eeb ph\u00eda ng\u01b0\u1eddi d\u00f9ng. v\u00e0 t\u00f9y theo \u0111\u01b0\u1eddng d\u1eabn\u00a0<code>path</code>\u00a0l\u00e0 g\u00ec, n\u00f3 s\u1ebd mapping t\u1edbi h\u00e0m x\u1eed l\u00fd t\u01b0\u01a1ng \u1ee9ng trong\u00a0<code>@Controller</code>.</p> <p>Nh\u01b0 v\u00ed d\u1ee5 tr\u00ean, t\u00f4i s\u1eed d\u1ee5ng\u00a0<code>GET</code>\u00a0v\u00e0o \u0111\u1ecba ch\u1ec9\u00a0<code>localhost:8080/</code>\u00a0( \u0111\u01b0\u1eddng d\u1eabn l\u00e0\u00a0<code>/</code>).\u00a0Spring Boot\u00a0s\u1ebd g\u1ecdi t\u1edbi h\u00e0m c\u00f3 g\u1eafn\u00a0<code>@GetMapping(\"/\")</code>\u00a0v\u00e0 y\u00eau c\u1ea7u h\u00e0m n\u00e0y x\u1eed l\u00fd request n\u00e0y.</p>"},{"location":"java/spring-boot/spring-boot/#giai-thich-2","title":"Gi\u1ea3i th\u00edch 2","text":"<p>T\u1edbi \u0111\u00e2y b\u1ea1n h\u00e3y tham chi\u1ebfu \u0111\u01b0\u1eddng d\u1eabn request v\u1edbi h\u00e0m x\u1eed l\u00fd n\u00f3:</p> <pre><code>// http://localhost:8080/hello?name=Loda\n    @GetMapping(\"/hello\")\n    public String hello(\n            // Request param \"name\" s\u1ebd \u0111\u01b0\u1ee3c g\u00e1n gi\u00e1 tr\u1ecb v\u00e0o bi\u1ebfn String\n            @RequestParam(name = \"name\", required = false, defaultValue = \"\") String name,\n            // Model l\u00e0 m\u1ed9t object c\u1ee7a Spring Boot, \u0111\u01b0\u1ee3c g\u1eafn v\u00e0o trong m\u1ecdi request.\n            Model model\n    ) {\n        // G\u1eafn v\u00e0o model gi\u00e1 tr\u1ecb name nh\u1eadn \u0111\u01b0\u1ee3c\n        model.addAttribute(\"name\", name);\n\n        return \"hello\"; // tr\u1ea3 v\u1ec1 file hello.html c\u00f9ng v\u1edbi th\u00f4ng tin trong object Model\n    }\n</code></pre> <p>Khi request l\u00ean, ch\u00fang ta nh\u1eadn \u0111\u01b0\u1ee3c gi\u00e1 tr\u1ecb c\u1ee7a\u00a0<code>name</code>\u00a0v\u00e0 ti\u1ebfp t\u1ee5c g\u00e1n n\u00f3 v\u00e0o\u00a0<code>Model</code>.</p> <p></p> <p><code>Model</code>\u00a0\u1edf \u0111\u00e2y l\u00e0 m\u1ed9t object \u0111\u01b0\u1ee3c\u00a0Spring Boot\u00a0\u0111\u00ednh k\u00e9m trong m\u1ed7i response. <code>Model</code>\u00a0ch\u1ee9a c\u00e1c th\u00f4ng tin m\u00e0 b\u1ea1n mu\u1ed1n tr\u1ea3 v\u1ec1 v\u00e0\u00a0Template Engine\u00a0s\u1ebd tr\u00edch xu\u1ea5t th\u00f4ng tin n\u00e0y ra th\u00e0nh html v\u00e0 \u0111\u01b0a cho ng\u01b0\u1eddi d\u00f9ng. Trong file\u00a0<code>hello.html</code>\u00a0t\u00f4i l\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a\u00a0<code>name</code>\u00a0trong\u00a0<code>Model</code>\u00a0ra b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng c\u00fa ph\u00e1p c\u1ee7a\u00a0<code>Thymeleaf</code></p> <pre><code>&lt;h1 th:text=\"'Hello, ' + ${name}\"&gt;&lt;/h1&gt;\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#giai-thich-cach-thymeleaf-van-hanh-expression","title":"Gi\u1ea3i th\u00edch c\u00e1ch Thymeleaf v\u1eadn h\u00e0nh + Expression","text":""},{"location":"java/spring-boot/spring-boot/#thymeleaf","title":"Thymeleaf","text":"<p>Thymeleaf\u00a0l\u00e0 m\u1ed9t Java Template Engine. C\u00f3 nhi\u1ec7m v\u1ee5 x\u1eed l\u00fd v\u00e0 generate ra c\u00e1c file HTML, XML, v.v.. C\u00e1c file HMTL do Thymeleaf t\u1ea1o ra l\u00e0 nh\u1edd k\u1ebft h\u1ee3p\u00a0d\u1eef li\u1ec7u\u00a0v\u00e0\u00a0template + quy t\u1eafc\u00a0\u0111\u1ec3 sinh ra m\u1ed9t file HTML ch\u1ee9a \u0111\u1ea7y \u0111\u1ee7 th\u00f4ng tin. Vi\u1ec7c c\u1ee7a b\u1ea1n l\u00e0 cung c\u1ea5p d\u1eef li\u1ec7u v\u00e0 quy \u0111\u1ecbnh\u00a0template\u00a0nh\u01b0 n\u00e0o, c\u00f2n vi\u1ec7c d\u00f9ng c\u00e1c th\u00f4ng tin \u0111\u00f3 \u0111\u1ec3 render ra HTML s\u1ebd do\u00a0Thymeleaf\u00a0gi\u1ea3i quy\u1ebft.</p>"},{"location":"java/spring-boot/spring-boot/#cu-phap","title":"C\u00fa ph\u00e1p","text":"<p>C\u00fa ph\u00e1p c\u1ee7a\u00a0Thymeleaf\u00a0s\u1ebd l\u00e0 m\u1ed9t\u00a0attributes\u00a0(Thu\u1ed9c t\u00ednh) c\u1ee7a th\u1ebb HTML v\u00e0 b\u1eaft \u0111\u1ea7u b\u1eb1ng ch\u1eef\u00a0<code>th:</code>.</p> <p>V\u00ed d\u1ee5: \u0110\u1ec3 truy\u1ec1n d\u1eef li\u1ec7u t\u1eeb bi\u1ebfn\u00a0<code>name</code>\u00a0trong Java v\u00e0o m\u1ed9t th\u1ebb\u00a0<code>H1</code>\u00a0c\u1ee7a HTML.</p> <pre><code>&lt;h1 th:text=\"${name}\"&gt;&lt;/h1&gt;\n</code></pre> <p>Ch\u00fang ta vi\u1ebft th\u1ebb h1 nh\u01b0 b\u00ecnh th\u01b0\u1eddng, nh\u01b0ng kh\u00f4ng ch\u1ee9a b\u1ea5t c\u1ee9 text n\u00e0o trong th\u1ebb. M\u00e0 s\u1eed d\u1ee5ng c\u00fa ph\u00e1p\u00a0<code>th:text=\"${name}\"</code>\u00a0\u0111\u1ec3\u00a0Thymeleaf\u00a0l\u1ea5y th\u00f4ng tin t\u1eeb bi\u1ebfn\u00a0<code>name</code>\u00a0v\u00e0 \u0111\u01b0a v\u00e0o th\u1ebb\u00a0<code>H1</code>.</p> <p>K\u1ebft qu\u1ea3 khi render ra, thu\u1ed9c t\u00ednh\u00a0<code>th:text</code>\u00a0bi\u1ebfn m\u1ea5t v\u00e0 gi\u00e1 tr\u1ecb bi\u1ebfn\u00a0<code>name</code>\u00a0\u0111\u01b0\u1ee3c \u0111\u01b0a v\u00e0o trong th\u1ebb\u00a0<code>H1</code>. \u0110\u00f3 l\u00e0 c\u00e1ch\u00a0Thymeleaf\u00a0ho\u1ea1t \u0111\u1ed9ng:</p> <pre><code>// Gi\u1ea3 s\u1eed String name = \"loda\"\n&lt;h1&gt;Loda&lt;/h1&gt;\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#model-view-trong-spring-boot","title":"Model &amp; View Trong Spring Boot","text":"<p><code>Model</code>\u00a0l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng l\u01b0u gi\u1eef th\u00f4ng tin v\u00e0 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng b\u1edfi\u00a0Template Engine\u00a0\u0111\u1ec3 generate ra webpage. C\u00f3 th\u1ec3 hi\u1ec3u n\u00f3 l\u00e0\u00a0<code>Context</code>\u00a0c\u1ee7a\u00a0Thymeleaf. <code>Model</code>\u00a0l\u01b0u gi\u1eef th\u00f4ng tin d\u01b0\u1edbi d\u1ea1ng key-value.</p> <p>Trong template thymeleaf, \u0111\u1ec3 l\u1ea5y c\u00e1c th\u00f4ng tin trong\u00a0<code>Model</code>. b\u1ea1n s\u1ebd s\u1eed d\u1ee5ng\u00a0<code>Thymeleaf Standard Expression</code>.</p> <ol> <li><code>${...}</code>: Gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn.</li> <li><code>*{...}</code>: Gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn \u0111\u01b0\u1ee3c ch\u1ec9 \u0111\u1ecbnh.</li> </ol> <p>Ngo\u00e0i ra, \u0111\u1ec3 l\u1ea5y th\u00f4ng tin \u0111\u1eb7c bi\u1ec7t h\u01a1n:</p> <ol> <li><code>#{...}</code>: L\u1ea5y message</li> <li><code>@{...}</code>: L\u1ea5y \u0111\u01b0\u1eddng d\u1eabn URL d\u1ef1a theo context c\u1ee7a server</li> </ol> <p>N\u00f3i t\u1edbi \u0111\u00e2y c\u00f3 l\u1ebd h\u01a1i kh\u00f3 hi\u1ec3u, ch\u00fang ta s\u1ebd d\u00f9ng v\u00ed d\u1ee5 \u0111\u1ec3 hi\u1ec3u r\u00f5 t\u1eebng lo\u1ea1i Expression.</p>"},{"location":"java/spring-boot/spring-boot/#-variables-expressions","title":"<code>${...}</code> - Variables Expressions","text":"<p>Tr\u00ean Controller b\u1ea1n \u0111\u01b0a v\u00e0o m\u1ed9t s\u1ed1 gi\u00e1 tr\u1ecb:</p> <pre><code>model.addAttribute(\"today\", \"Monday\");\n</code></pre> <p>\u0110\u1ec3 l\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a bi\u1ebfn\u00a0<code>today</code>, t\u00f4i s\u1eed d\u1ee5ng\u00a0<code>${...}</code></p> <pre><code>&lt;p&gt;Today is: &lt;span th:text=\"${today}\"&gt;&lt;/span&gt;.&lt;/p&gt;\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#-variables-expressions-on-selections","title":"<code>*{...}</code> - Variables Expressions on selections","text":"<p>D\u1ea5u\u00a0<code>*</code>\u00a0c\u00f2n g\u1ecdi l\u00e0\u00a0<code>asterisk syntax</code>. Ch\u1ee9c n\u0103ng c\u1ee7a n\u00f3 gi\u1ed1ng v\u1edbi\u00a0<code>${...}</code>\u00a0l\u00e0 l\u1ea5y gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn. \u0110i\u1ec3m kh\u00e1c bi\u1ec7t l\u00e0 n\u00f3 s\u1ebd l\u1ea5y ra gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ebfn cho tr\u01b0\u1edbc b\u1edfi\u00a0<code>th:object</code></p> <pre><code>&lt;div th:object=\"${session.user}\"&gt;&lt;!-- th:object t\u1ed3n t\u1ea1i trong ph\u1ea1m vi c\u1ee7a th\u1ebb div n\u00e0y --&gt;\n    &lt;!-- L\u1ea5y ra t\u00ean c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng session.user --&gt;\n    &lt;p&gt;Name: &lt;spanth:text=\"*{firstName}\"&gt;&lt;/span&gt;.&lt;/p&gt;&lt;!-- L\u1ea5y ra lastName c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng session.user --&gt;\n    &lt;p&gt;Surname: &lt;spanth:text=\"*{lastName}\"&gt;&lt;/span&gt;.&lt;/p&gt;\n&lt;/div&gt;\n</code></pre> <p>V\u1eady \u0111o\u1ea1n code \u1edf tr\u00ean t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi:</p> <pre><code>&lt;div&gt;&lt;p&gt;Name: &lt;spanth:text=\"${session.user.firstName}\"&gt;&lt;/span&gt;.&lt;/p&gt;&lt;p&gt;Surname: &lt;spanth:text=\"${session.user.lastName}\"&gt;&lt;/span&gt;.&lt;/p&gt;&lt;/div&gt;\n</code></pre> <p>C\u00f2n\u00a0<code>${...}</code>\u00a0s\u1ebd l\u1ea5y ra gi\u00e1 tr\u1ecb c\u1ee5c b\u1ed9 trong\u00a0<code>Context</code>\u00a0hay\u00a0<code>Model</code>.</p>"},{"location":"java/spring-boot/spring-boot/#-message-expression","title":"<code>#{...}</code> - Message Expression","text":"<p>V\u00ed d\u1ee5, trong file config\u00a0<code>.properties</code>\u00a0c\u1ee7a t\u00f4i c\u00f3 m\u1ed9t message ch\u00e0o ng\u01b0\u1eddi d\u00f9ng b\u1eb1ng nhi\u1ec1u ng\u00f4n ng\u1eef.</p> <pre><code>home.welcome=\u00a1Bienvenido a nuestra tienda de comestibles!\n</code></pre> <p>Th\u00ec c\u00e1ch l\u1ea5y n\u00f3 ra nhanh nh\u1ea5t l\u00e0:</p> <pre><code>&lt;p th:utext=\"#{home.welcome}\"&gt;Xin ch\u00e0o c\u00e1c b\u1ea1n!&lt;/p&gt;\n</code></pre> <p>\u0110o\u1ea1n text ti\u1ebfng vi\u1ec7t b\u00ean trong th\u1ebb\u00a0<code>p</code>\u00a0s\u1ebd b\u1ecb thay th\u1ebf b\u1edfi thymeleaf khi render\u00a0<code>#{home.welcome}</code>.</p>"},{"location":"java/spring-boot/spring-boot/#-url-expression","title":"<code>@{...}</code> - URL Expression","text":"<p><code>@{...}</code>\u00a0x\u1eed l\u00fd v\u00e0 tr\u1ea3 ra gi\u00e1 tr\u1ecb URL theo context c\u1ee7a m\u00e1y ch\u1ee7 cho ch\u00fang ta.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>// &lt;a th:href=\"@{/order/list}\"&gt;\n// If our app is installed at http://localhost:8080/myapp, this URL will output:\n// &lt;a href=\"/myapp/order/list\"&gt;\n&lt;a href=\"details.html\" th:href=\"@{/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;\n&lt;ahref=\"details.html\"th:href=\"@{/order/{orderId}/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;\n</code></pre> <p>N\u1ebfu b\u1eaft d\u1ea7u b\u1eb1ng d\u1ea5u\u00a0<code>/</code>\u00a0th\u00ec n\u00f3 s\u1ebd l\u00e0 Relative URL v\u00e0 s\u1ebd t\u01b0\u01a1ng \u1ee9ng theo context c\u1ee7a m\u00e1y ch\u1ee7 c\u1ee7a b\u1ea1n.# @RequestMapping + @PostMapping + @ModelAttribute + @RequestParam</p>"},{"location":"java/spring-boot/spring-boot/#postmapping","title":"@PostMapping","text":"<p><code>@PostMapping</code>\u00a0c\u00f3 nhi\u1ec7m v\u1ee5 \u0111\u00e1nh d\u1ea5u h\u00e0m x\u1eed l\u00fd POST request trong Controller.</p> <p>V\u00ed d\u1ee5:</p> <p>T\u00f4i c\u00f3 2 h\u00e0m x\u1eed l\u00fd, m\u1ed9t cho\u00a0<code>GET</code>\u00a0method v\u00e0 m\u1ed9t cho\u00a0<code>POST</code>.</p> <p>C\u1ea3 hai \u0111\u1ec1u chung \u0111\u01b0\u1eddng d\u1eabn nh\u01b0ng b\u1ea1n n\u00ean bi\u1ebft r\u1eb1ng c\u00f9ng m\u1ed9t\u00a0<code>path</code>\u00a0nh\u01b0ng kh\u00e1c\u00a0<code>method</code>\u00a0th\u00ec s\u1ebd x\u1eed l\u00fd kh\u00e1c nhau.</p> <pre><code>@Controller\npublic class WebController {\n    @GetMapping(\"/addTodo\")\n    public String addTodo(Model model) {\n        return \"addTodo\";\n    }\n\n    @PostMapping(\"/addTodo\")\n    public String addTodo(Model model) {\n        return \"success\";\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#requestmapping","title":"@RequestMapping","text":"<p>Trong tr\u01b0\u1eddng h\u1ee3p b\u1ea1n mu\u1ed1n t\u1ea5t c\u1ea3 c\u00e1c method \u0111\u1ec1u d\u00f9ng chung m\u1ed9t c\u00e1ch x\u1eed l\u00fd th\u00ec c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Annotation\u00a0<code>@RequestMapping</code>. @RequestMapping l\u00e0 m\u1ed9t annotation c\u00f3 \u00fd ngh\u0129a v\u00e0 m\u1ee5c \u0111\u00edch s\u1eed d\u1ee5ng r\u1ed9ng h\u01a1n c\u00e1c lo\u1ea1i @GetMapping, @PostMapping,v.v.. N\u1ebfu kh\u00f4ng ch\u1ec9 \u0111\u1ecbnh method cho\u00a0<code>@RequestMapping</code>\u00a0th\u00ec n\u00f3 s\u1ebd nh\u1eadn to\u00e0n b\u1ed9 c\u00e1c method.</p> <pre><code>@Controller\n@RequestMapping(\"api/v1\")\npublic class WebController {\n\n    // \u0110\u01b0\u1eddng d\u1eabn l\u00fac n\u00e0y l\u00e0: /api/v1/addTodo v\u00e0 method GET\n    @RequestMapping(value = \"/addTodo\", method = RequestMethod.GET)\n    public String addTodo(Model model) {\n        return \"addTodo\";\n    }\n\n    // \u0110\u01b0\u1eddng d\u1eabn l\u00fac n\u00e0y l\u00e0: /api/v1/addTodo v\u00e0 method POST\n    @RequestMapping(value = \"/addTodo\", method = RequestMethod.POST)\n    public String addTodo(@ModelAttribute Todo todo) {\n        return \"success\";\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#getmapping","title":"GetMapping","text":"<p>Khi t\u00f4i request l\u00ean server nh\u01b0 n\u00e0y <code>http://localhost:8080/listTodo?limit=2</code>.</p> <pre><code>@GetMapping(\"/listTodo\")\npublic String index(Model model, @RequestParam(value = \"limit\", required = false) Integer limit) {\n    // Tr\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng todoList.\n    // N\u1ebfu ng\u01b0\u1eddi d\u00f9ng g\u1eedi l\u00ean param limit th\u00ec tr\u1ea3 v\u1ec1 sublist c\u1ee7a todoList\n    model.addAttribute(\"todoList\", limit != null ? todoList.subList(0, limit) : todoList);\n\n    // Tr\u1ea3 v\u1ec1 template \"listTodo.html\"\n    return \"listTodo\";\n}\n```# Spring Boot JPA + MySQL\n\n### **Spring Boot JPA**\n\n**Spring Boot JPA**\u00a0l\u00e0 m\u1ed9t ph\u1ea7n trong h\u1ec7 sinh th\u00e1i Spring Data, n\u00f3 t\u1ea1o ra m\u1ed9t layer \u1edf gi\u1eefa t\u1ea7ng service v\u00e0 database, gi\u00fap ch\u00fang ta thao t\u00e1c v\u1edbi database m\u1ed9t c\u00e1ch d\u1ec5 d\u00e0ng h\u01a1n, t\u1ef1 \u0111\u1ed9ng config v\u00e0 gi\u1ea3m thi\u1ec3u code th\u1eeba th\u00e3i.\n\n**Spring Boot JPA**\u00a0\u0111\u00e3 wrapper Hibernate v\u00e0 t\u1ea1o ra m\u1ed9t interface m\u1ea1nh m\u1ebd. N\u1ebfu nh\u01b0 b\u1ea1n g\u1eb7p kh\u00f3 kh\u0103n khi l\u00e0m vi\u1ec7c v\u1edbi Hibernate th\u00ec \u0111\u1eebng lo, b\u1ea1n h\u00e3y \u0111\u1ec3\u00a0**Spring JPA**\u00a0l\u00e0m h\u1ed9.\n\n### **T\u1ea1o Table v\u00e0 d\u1eef li\u1ec7u**\n\nTr\u01b0\u1edbc khi b\u1eaft \u0111\u1ea7u, ch\u00fang ta c\u1ea7n t\u1ea1o ra d\u1eef li\u1ec7u trong Database. \u1ede \u0111\u00e2y t\u00f4i ch\u1ecdn\u00a0`MySQL`. D\u01b0\u1edbi \u0111\u00e2y l\u00e0 SQL Script \u0111\u1ec3 t\u1ea1o DATABASE\u00a0`micro_db`. Ch\u1ee9a m\u1ed9t TABLE duy nh\u1ea5t l\u00e0\u00a0`User`.\n\n### **T\u1ea1o Model User**\n\nKhi \u0111\u00e3 c\u00f3 d\u1eef li\u1ec7u trong Database. Ch\u00fang ta s\u1ebd t\u1ea1o m\u1ed9t Class trong Java \u0111\u1ec3 mapping th\u00f4ng tin. C\u1ea7n bi\u1ebft th\u00eam v\u1ec1 Hibernate. \u0110\u00e2y l\u00e0 _User.java_:\n\n```java\n@Entity\n@Table(name = \"user\")\n@Data\npublic class User implements Serializable {\n    private static final long serialVersionUID = -297553281792804396L;\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    // Mapping th\u00f4ng tin bi\u1ebfn v\u1edbi t\u00ean c\u1ed9t trong Database\n    @Column(name = \"hp\")\n    private int hp;\n    // N\u1ebfu kh\u00f4ng \u0111\u00e1nh d\u1ea5u @Column th\u00ec s\u1ebd mapping t\u1ef1 \u0111\u1ed9ng theo t\u00ean bi\u1ebfn\n    private int atk;\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#van-e-cua-hibernate-truyen-thong","title":"V\u1ea5n \u0111\u1ec1 c\u1ee7a Hibernate truy\u1ec1n th\u1ed1ng","text":"<p>Th\u00f4ng th\u01b0\u1eddng, khi b\u1ea1n \u0111\u00e3 \u0111\u1ecbnh ngh\u0129a\u00a0<code>Entity</code>\u00a0t\u01b0\u01a1ng \u1ee9ng v\u1edbi\u00a0<code>Table</code>\u00a0trong DB th\u00f4ng qua Hibernate. Th\u00ec nhi\u1ec7m v\u1ee5 ti\u1ebfp theo s\u1ebd l\u00e0 t\u1ea1o ra c\u00e1c class thao t\u00e1c v\u1edbi DB.</p> <p>V\u00ed d\u1ee5 mu\u1ed1n query l\u1ea5y t\u1ea5t c\u1ea3\u00a0<code>User</code>\u00a0b\u1eb1ng Hibernate truy\u1ec1n th\u1ed1ng s\u1ebd nh\u01b0 sau. N\u00f3 s\u1ebd r\u1ea5t d\u00e0i n\u00ean khi n\u1eafm \u0111\u01b0\u1ee3c v\u1ea5n \u0111\u1ec1 n\u00e0y, Spring Data \u0111\u00e3 wrapper l\u00ean Hibernate m\u1ed9t l\u1edbp n\u1eefa g\u1ecdi l\u00e0 Spring JPA.</p>"},{"location":"java/spring-boot/spring-boot/#jparepository","title":"JpaRepository","text":"<p>\u0110\u1ec3 s\u1eed d\u1ee5ng\u00a0Spring JPA, b\u1ea1n c\u1ea7n s\u1eed d\u1ee5ng interface\u00a0<code>JpaRepository</code>.</p> <p>Y\u00eau c\u1ea7u c\u1ee7a interface n\u00e0y \u0111\u00f3 l\u00e0 b\u1ea1n ph\u1ea3i cung c\u1ea5p 2 th\u00f4ng tin:</p> <ol> <li>Entity (\u0110\u1ed1i t\u01b0\u1ee3ng t\u01b0\u01a1ng \u1ee9ng v\u1edbi Table trong DB)</li> <li>Ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a kh\u00f3a ch\u00ednh (PrimaryKey)</li> </ol> <p>V\u00ed d\u1ee5: T\u00f4i mu\u1ed1n l\u1ea5y th\u00f4ng tin c\u1ee7a b\u1ea3ng\u00a0<code>User</code>\u00a0th\u00ec l\u00e0m nh\u01b0 sau:</p> <pre><code>import org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n\n}\n</code></pre> <p>V\u1eady th\u00f4i,\u00a0<code>@Repository</code>\u00a0\u0111\u00e1nh d\u1ea5u\u00a0<code>UserRepository</code>\u00a0l\u00e0 m\u1ed9t Bean v\u00e0 ch\u1ecbu tr\u00e1ch nhi\u1ec7m giao ti\u1ebfp v\u1edbi DB. Spring Boot\u00a0s\u1ebd t\u1ef1 t\u00ecm th\u1ea5y v\u00e0 kh\u1edfi t\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>UserRepository</code>\u00a0trong Context. Vi\u1ec7c t\u1ea1o ra\u00a0<code>UserRepository</code>\u00a0ho\u00e0n to\u00e0n t\u1ef1 \u0111\u1ed9ng v\u00e0 t\u1ef1 config, v\u00ec ch\u00fang ta \u0111\u00e3 k\u1ebf th\u1eeba\u00a0<code>JpaRepository</code>. B\u00e2y gi\u1edd, vi\u1ec7c l\u1ea5y ra to\u00e0n b\u1ed9\u00a0<code>User</code>\u00a0s\u1ebd nh\u01b0 sau:</p> <pre><code>@Autowired\nUserRepository userRepository;\n\nuserRepository.findAll().forEach(System.out::println);\n</code></pre> <p>N\u1ebfu b\u1ea1n t\u00ecm ki\u1ebfm th\u00ec s\u1ebd th\u1ea5y\u00a0<code>UserRepository</code>\u00a0c\u00f3 h\u00e0ng ch\u1ee5c method m\u00e0 ch\u00fang ta kh\u00f4ng c\u1ea7n vi\u1ebft l\u1ea1i n\u1eefa. V\u00ec n\u00f3 k\u1ebf th\u1eeba\u00a0<code>JpaRepository</code>\u00a0r\u1ed3i.</p>"},{"location":"java/spring-boot/spring-boot/#spring-jpa-method-query","title":"Spring JPA Method + @Query","text":""},{"location":"java/spring-boot/spring-boot/#query-creation","title":"Query Creation","text":"<p>Trong\u00a0Spring JPA, c\u00f3 m\u1ed9t c\u01a1 ch\u1ebf gi\u00fap ch\u00fang ta t\u1ea1o ra c\u00e1c c\u00e2u Query m\u00e0 kh\u00f4ng c\u1ea7n vi\u1ebft th\u00eam code. C\u01a1 ch\u1ebf n\u00e0y x\u00e2y d\u1ef1ng Query t\u1eeb t\u00ean c\u1ee7a method. V\u00ed d\u1ee5: Ch\u00fang ta c\u00f3 \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>User</code>.</p> <p>User.java</p> <pre><code>@Entity\n@Table(name = \"user\")\n@Data\npublic class User implements Serializable {\n    private static final long serialVersionUID = -297553281792804396L;\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    // Mapping th\u00f4ng tin bi\u1ebfn v\u1edbi t\u00ean c\u1ed9t trong Database\n    @Column(name = \"hp\")\n    private int hp;\n    @Column(name = \"stamina\")\n    private int stamina;\n\n    // N\u1ebfu kh\u00f4ng \u0111\u00e1nh d\u1ea5u @Column th\u00ec s\u1ebd mapping t\u1ef1 \u0111\u1ed9ng theo t\u00ean bi\u1ebfn\n    private int atk;\n    private int def;\n    private int agi;\n}\n</code></pre> <p>Khi ch\u00fang ta \u0111\u1eb7t t\u00ean method l\u00e0:\u00a0<code>findByAtk(int atk)</code>. Th\u00ec\u00a0Spring JPA\u00a0s\u1ebd t\u1ef1 \u0111\u1ecbnh ngh\u0129a c\u00e2u Query cho method n\u00e0y, b\u1eb1ng c\u00e1ch x\u1eed l\u00fd t\u00ean method. V\u1eady l\u00e0 ch\u00fang ta \u0111\u00e3 c\u00f3 th\u1ec3 truy v\u1ea5n d\u1eef li\u1ec7u m\u00e0 ch\u1ec9 m\u1ea5t th\u00eam 1 d\u00f2ng code.</p>"},{"location":"java/spring-boot/spring-boot/#quy-tac-at-ten-method-trong-spring-jpa","title":"Quy t\u1eafc \u0111\u1eb7t t\u00ean method trong Spring JPA","text":"<p>Trong\u00a0Spring JPA, c\u01a1 ch\u1ebf x\u00e2y d\u1ef1ng truy v\u1ea5n th\u00f4ng qua t\u00ean c\u1ee7a method \u0111\u01b0\u1ee3c quy \u0111\u1ecbnh b\u1edfi c\u00e1c ti\u1ec1n t\u1ed1 sau:</p> <p><code>find\u2026By</code>,\u00a0<code>read\u2026By</code>,\u00a0<code>query\u2026By</code>,\u00a0<code>count\u2026By</code>, v\u00e0\u00a0<code>get\u2026By</code>.</p> <p>ph\u1ea7n c\u00f2n l\u1ea1i s\u1ebd \u0111\u01b0\u1ee3c parse theo t\u00ean c\u1ee7a thu\u1ed9c t\u00ednh (vi\u1ebft hoa ch\u1eef c\u00e1i \u0111\u1ea7u). N\u1ebfu ch\u00fang ta c\u00f3 nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n, th\u00ec c\u00e1c thu\u1ed9c t\u00ednh c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p v\u1edbi nhau b\u1eb1ng ch\u1eef\u00a0<code>And</code>\u00a0ho\u1eb7c\u00a0<code>Or</code>. B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc th\u00eam trong Docs c\u1ee7a Spring: Query Creation</p> <p>V\u00ed d\u1ee5:</p> <pre><code>interface PersonRepository extends JpaRepository&lt;User, Long&gt; {\n    // D\u1ec5\n    // version r\u00fat g\u1ecdn\n    Person findByLastname(String lastname);\n    // verson \u0111\u1ea7y \u0111\u1ee7\n    Person findPersonByLastname(String lastname);\n    Person findAllByLastname(String lastname);\n    // Trung b\u00ecnh\n    List&lt;Person&gt; findByEmailAddressAndLastname(EmailAddress emailAddress, String lastname);\n    // findDistinct l\u00e0 t\u00ecm ki\u1ebfm v\u00e0 lo\u1ea1i b\u1ecf \u0111i c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng tr\u00f9ng nhau\n    List&lt;Person&gt; findDistinctPeopleByLastnameOrFirstname(String lastname, String firstname);\n    List&lt;Person&gt; findPeopleDistinctByLastnameOrFirstname(String lastname, String firstname);\n    // IgnoreCase l\u00e0 t\u00ecm ki\u1ebfm kh\u00f4ng ph\u00e2n bi\u1ec7t hoa th\u01b0\u1eddng, v\u00ed d\u1ee5 \u1edf \u0111\u00e2y t\u00ecm ki\u1ebfm lastname\n    // lastname s\u1ebd kh\u00f4ng ph\u00e2n bi\u1ec7t hoa th\u01b0\u1eddng\n    List&lt;Person&gt; findByLastnameIgnoreCase(String lastname);\n    // AllIgnoreCase l\u00e0 kh\u00f4ng ph\u00e2n bi\u1ec7t hoa th\u01b0\u1eddng cho t\u1ea5t c\u1ea3 thu\u1ed9c t\u00ednh\n    List&lt;Person&gt; findByLastnameAndFirstnameAllIgnoreCase(String lastname, String firstname);\n    // OrderBy l\u00e0 c\u00e1ch s\u1eafp x\u1ebfp th\u1ee9 t\u1ef1 tr\u1ea3 v\u1ec1\n    // S\u1eafp x\u1ebfp theo Firstname ASC\n    List&lt;Person&gt; findByLastnameOrderByFirstnameAsc(String lastname);\n    // S\u1eafp x\u1ebfp theo Firstname Desc\n    List&lt;Person&gt; findByLastnameOrderByFirstnameDesc(String lastname);\n}\n</code></pre> <p>C\u00e1c thu\u1ed9c t\u00ednh trong t\u00ean method ph\u1ea3i thu\u1ed9c v\u1ec1 Class \u0111\u00f3, n\u1ebfu kh\u00f4ng s\u1ebd g\u00e2y ra l\u1ed7i. Tuy nhi\u00ean, trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p b\u1ea1n c\u00f3 th\u1ec3 query b\u1eb1ng thu\u1ed9c t\u00ednh con. V\u00ed d\u1ee5: \u0110\u00f3i t\u01b0\u1ee3ng\u00a0<code>Person</code>\u00a0c\u00f3 thu\u1ed9c t\u00ednh l\u00e0\u00a0<code>Address</code>\u00a0v\u00e0 trong\u00a0<code>Address</code>\u00a0l\u1ea1i c\u00f3\u00a0<code>ZipCode</code></p> <pre><code>// person.address.zipCode\nList&lt;Person&gt; findByAddressZipCode(ZipCode zipCode);\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#query","title":"@Query","text":"<p>V\u1edbi c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>@Query</code>, b\u1ea1n s\u1ebd c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e2u truy v\u1ea5n JPQL (Hibernate) ho\u1eb7c SQL thu\u1ea7n (raw SQL). V\u00ed d\u1ee5:</p> <pre><code>public interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n    // Khi \u0111\u01b0\u1ee3c g\u1eafn @Query, th\u00ec t\u00ean c\u1ee7a method kh\u00f4ng c\u00f2n t\u00e1c d\u1ee5ng n\u1eefa\n    // \u0110\u00e2y l\u00e0 JPQL\n    @Query(\"select u from User u where u.emailAddress = ?1\")\n    User myCustomQuery(String emailAddress);\n    // \u0110\u00e2y l\u00e0 Native SQL\n    @Query(value = \"select * from User u where u.email_address = ?1\", nativeQuery = true)\n    User myCustomQuery2(String emailAddress);\n}\n</code></pre> <p>C\u00e1ch truy\u1ec1n tham s\u1ed1 l\u00e0 g\u1ecdi theo th\u1ee9 t\u1ef1 c\u00e1c tham s\u1ed1 c\u1ee7a method b\u00ean d\u01b0\u1edbi\u00a0<code>?1</code>,\u00a0<code>?2</code>. N\u1ebfu b\u1ea1n kh\u00f4ng th\u00edch s\u1eed d\u1ee5ng\u00a0<code>?{number}</code>\u00a0th\u00ec c\u00f3 th\u1ec3 \u0111\u1eb7t t\u00ean cho tham s\u1ed1.</p> <pre><code>public interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n    // JPQL\n    @Query(\"SELECT u FROM User u WHERE u.status = :status and u.name = :name\")\n    User findUserByNamedParams(@Param(\"status\") Integer status, @Param(\"name\") String name);\n    // Native SQL\n    @Query(value = \"SELECT * FROM Users u WHERE u.status = :status and u.name = :name\", nativeQuery = true)\n    User findUserByNamedParamsNative(@Param(\"status\") Integer status, @Param(\"name\") String name);\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#chi-tiet-spring-boot-thymeleaf-mysql-i18n","title":"Chi ti\u1ebft Spring Boot + Thymeleaf + MySQL + i18n","text":""},{"location":"java/spring-boot/spring-boot/#tao-database","title":"T\u1ea1o Database","text":"<p>script.sql</p> <pre><code>CREATE SCHEMA IF NOT EXISTS `todo_db` DEFAULT CHARACTER SET utf8mb4 ;\n\nCREATE TABLE IF NOT EXISTS `todo_db`.`todo` (\n  `id` INT(11) NOT NULL AUTO_INCREMENT,\n  `title` VARCHAR(255) NULL DEFAULT NULL,\n  `detail` VARCHAR(255) NULL DEFAULT NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB\nDEFAULT CHARACTER SET = utf8mb4;\n</code></pre> <p>Th\u00eam 1 record v\u00e0o DB</p> <pre><code>INSERT INTO `todo_db`.`todo` (`title`, `detail`) VALUES ('L\u00e0m b\u00e0i t\u1eadp', 'Ho\u00e0n thi\u1ec7n b\u00e0i vi\u1ebft Spring Boot #13');\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#cau-hinh-ung-dung","title":"C\u1ea5u h\u00ecnh \u1ee9ng d\u1ee5ng","text":"<p>C\u1ea5u h\u00ecnh l\u00e0 ph\u1ea7n c\u1ef1c k\u00ec quan tr\u1ecdng r\u1ed3i, ch\u00fang ta ph\u1ea3i cung c\u1ea5p cho\u00a0Spring Boot\u00a0c\u00e1c th\u00f4ng tin v\u1ec1 Database v\u00e0 Thymeleaf. Ngo\u00e0i ra, t\u00f9y ch\u1ec9nh m\u1ed9t s\u1ed1 th\u00f4ng tin \u0111\u1ec3 gi\u00fap ch\u00fang ta l\u1eadp tr\u00ecnh \u0111\u01a1n gi\u1ea3n h\u01a1n. (C\u00f3 th\u1ec3 \u0111\u1ecdc qua v\u00e0 tham kh\u1ea3o m\u1ed9t s\u1ed1 th\u00f4ng s\u1ed1 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng). \u0110\u00e2y l\u00e0 application.properties</p> <pre><code>#Ch\u1ea1y \u1ee9ng d\u1ee5ng tr\u00ean port 8085\nserver.port=8085\n\n## B\u1ecf t\u00ednh n\u0103ng cache c\u1ee7a thymeleaf \u0111\u1ec3 l\u1eadp tr\u00ecnh cho nhanh\nspring.thymeleaf.cache=false\n\n## C\u00e1c message t\u0129nh s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u t\u1ea1i th\u01b0 m\u1ee5c i18n\nspring.messages.basename=i18n/messages\n\n## B\u1ecf properties n\u00e0y \u0111i khi deploy\n\n## N\u00f3 c\u00f3 t\u00e1c d\u1ee5ng c\u1ed1 \u0111\u1ecbnh ng\u00f4n ng\u1eef hi\u1ec7n t\u1ea1i ch\u1ec9 l\u00e0 Ti\u1ebfng Vi\u1ec7t\nspring.mvc.locale-resolver=fixed\n\n## M\u1eb7c \u0111\u1ecbnh ng\u00f4n ng\u1eef l\u00e0 ti\u1ebfng vi\u1ec7t\nspring.mvc.locale=vi_VN\n\n## \u0110\u1ed5i th\u00e0nh ti\u1ebfng anh b\u1eb1ng c\u00e1ch b\u1ecf comment \u1edf d\u1ee9oi\n#spring.mvc.locale=en_US\nspring.datasource.url=jdbc:mysql://localhost:3306/todo_db?useSSL=false\nspring.datasource.username=root\nspring.datasource.password=root\n## Hibernate Properties\n\n## The SQL dialect makes Hibernate generate better SQL for the chosen database\nspring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect\n\n## Hibernate ddl auto (create, create-drop, validate, update)\nspring.jpa.hibernate.ddl-auto = update\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#tao-model","title":"T\u1ea1o Model","text":"<p>T\u1ea1o model\u00a0<code>Todo</code>\u00a0li\u00ean k\u1ebft t\u1edbi b\u1ea3ng\u00a0<code>todo</code>\u00a0trong Database.</p> <pre><code>import javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\n\nimport lombok.Data;\n\n@Entity\n@Data\npublic class Todo {\n\n}\n</code></pre> <p>Ngo\u00e0i ra, ch\u00fang ta t\u1ea1o th\u00eam m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng l\u00e0\u00a0<code>TodoValidator</code>, c\u00f3 tr\u00e1ch nhi\u1ec7m ki\u1ec3m tra xem m\u1ed9t object\u00a0<code>Todo</code>\u00a0l\u00e0 h\u1ee3p l\u1ec7 hay kh\u00f4ng.</p> <pre><code>import org.thymeleaf.util.StringUtils;\n\n/*\n\u0110\u1ed1i t\u01b0\u1ee3ng n\u00e0y d\u00f9ng \u0111\u1ec3 ki\u1ec3m tra xem m\u1ed9t Object Todo c\u00f3 h\u1ee3p l\u1ec7 kh\u00f4ng\n */\npublic class TodoValidator {\n\n    /\n     * Ki\u1ec3m tra m\u1ed9t object Todo c\u00f3 h\u1ee3p l\u1ec7 kh\u00f4ng\n     * @param todo\n     * @return\n     */\n    public boolean isValid(Todo todo) {\n        return Optional.ofNullable(todo)\n                       .filter(t -&gt; !StringUtils.isEmpty(t.getTitle())) // Ki\u1ec3m tra title kh\u00e1c r\u1ed7ng\n                       .filter(t -&gt; !StringUtils.isEmpty(t.getDetail())) // Ki\u1ec3m tra detail kh\u00e1c r\u1ed7ng\n                       .isPresent(); // Tr\u1ea3 v\u1ec1 true n\u1ebfu h\u1ee3p l\u1ec7, ng\u01b0\u1ee3c l\u1ea1i false\n    }\n}\n</code></pre> <p>V\u1eady l\u00e0 xong ph\u1ea7n chu\u1ea9n b\u1ecb\u00a0<code>Model</code>.</p>"},{"location":"java/spring-boot/spring-boot/#todoconfig","title":"TodoConfig","text":"<p>Trong \u1ee9ng d\u1ee5ng c\u1ee7a m\u00ecnh, t\u00f4i mu\u1ed1n t\u1ef1 t\u1ea1o ra Bean\u00a0<code>TodoValidator</code>. \u0110\u00e2y l\u00e0 l\u00fac s\u1eed d\u1ee5ng\u00a0<code>@Configuration</code>\u00a0v\u00e0\u00a0<code>@Bean</code>\u00a0\u0111\u00e3 h\u1ecdc t\u1ea1i b\u00e0i\u00a0Spring Boot #6</p> <p>config/TodoConfig.java</p> <pre><code>@Configuration\npublic class TodoConfig {\n    /\n     * T\u1ea1o ra Bean TodoValidator \u0111\u1ec3 s\u1eed d\u1ee5ng sau n\u00e0y\n     * @return\n     */\n    @Bean\n    public TodoValidator validator() {\n        return new TodoValidator();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#tang-repository","title":"T\u1ea7ng Repository","text":"<p>T\u1ea7ng Repository, ch\u1ecbu tr\u00e1ch nhi\u1ec7m giao ti\u1ebfp v\u1edbi Database. Ch\u00fang ta s\u1eed d\u1ee5ng\u00a0Spring JPA. repository/TodoRepository.java</p> <pre><code>@Repository\npublic interface TodoRepository extends JpaRepository&lt;Todo, Long&gt; {\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#tang-service","title":"T\u1ea7ng Service","text":"<p>T\u1ea7ng Service, ch\u1ecb tr\u00e1ch nhi\u1ec7m th\u1ef1c hi\u1ec7n c\u00e1c x\u1eed l\u00fd logic, business, h\u1ed7 tr\u1ee3 cho t\u1ea7ng Controller. service/TodoService.java</p> <pre><code>@Service\npublic class TodoService {\n    @Autowired\n    private TodoRepository todoRepository;\n\n    @Autowired\n    private TodoValidator validator;\n\n    /\n     * L\u1ea5y ra danh s\u00e1ch List&lt;Todo&gt;\n     *\n     * @param limit - Gi\u1edbi h\u1ea1n s\u1ed1 l\u01b0\u1ee3ng l\u1ea5y ra\n     *\n     * @return Tr\u1ea3 v\u1ec1 danh s\u00e1ch List&lt;Todo&gt; d\u1ef1a theo limit, n\u1ebfu limit == null th\u00ec tr\u1ea3 findAll()\n     */\n    public List&lt;Todo&gt; findAll(Integer limit) {\n        return Optional.ofNullable(limit)\n                       .map(value -&gt; todoRepository.findAll(PageRequest.of(0, value)).getContent())\n                       .orElseGet(() -&gt; todoRepository.findAll());\n    }\n\n    /\n     * Th\u00eam m\u1ed9t Todo m\u1edbi v\u00e0o danh s\u00e1ch c\u00f4ng vi\u1ec7c c\u1ea7n l\u00e0m\n     *\n     * @return Tr\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng Todo sau khi l\u01b0u v\u00e0o DB, tr\u1ea3 v\u1ec1 null n\u1ebfu kh\u00f4ng th\u00e0nh c\u00f4ng\n     */\n    public Todo add(Todo todo) {\n        if (validator.isValid(todo)) {\n            return todoRepository.save(todo);\n        }\n        return null;\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#tang-controller","title":"T\u1ea7ng Controller","text":"<p>T\u1ea7ng Controller, n\u01a1i \u0111\u00f3n nh\u1eadn c\u00e1c request t\u1eeb ph\u00eda ng\u01b0\u1eddi d\u00f9ng, v\u00e0 chuy\u1ec3n ti\u1ebfp x\u1eed l\u00fd xu\u1ed1ng t\u1ea7ng Service.</p> <p>controller/TodoController.java</p> <pre><code>@Controller\npublic class TodoController {\n\n    @Autowired\n    private TodoService todoService;\n\n    /*\n    @RequestParam d\u00f9ng \u0111\u1ec3 \u0111\u00e1nh d\u1ea5u m\u1ed9t bi\u1ebfn l\u00e0 request param trong request g\u1eedi l\u00ean server.\n    N\u00f3 s\u1ebd g\u00e1n d\u1eef li\u1ec7u c\u1ee7a param-name t\u01b0\u01a1ng \u1ee9ng v\u00e0o bi\u1ebfn\n     */\n    @GetMapping(\"/listTodo\")\n    public String index(Model model, @RequestParam(value = \"limit\", required = false) Integer limit) {\n        // Tr\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng todoList.\n        model.addAttribute(\"todoList\", todoService.findAll(limit));\n        // Tr\u1ea3 v\u1ec1 template \"listTodo.html\"\n        return \"listTodo\";\n    }\n\n    @GetMapping(\"/addTodo\")\n    public String addTodo(Model model) {\n        model.addAttribute(\"todo\", new Todo());\n        return \"addTodo\";\n    }\n\n    /*\n    @ModelAttribute \u0111\u00e1nh d\u1ea5u \u0111\u1ed1i t\u01b0\u1ee3ng Todo \u0111\u01b0\u1ee3c g\u1eedi l\u00ean b\u1edfi Form Request\n     */\n    @PostMapping(\"/addTodo\")\n    public String addTodo(@ModelAttribute Todo todo) {\n        return Optional.ofNullable(todoService.add(todo))\n                       .map(t -&gt; \"success\") // Tr\u1ea3 v\u1ec1 success n\u1ebfu save th\u00e0nh c\u00f4ng\n                       .orElse(\"failed\"); // Tr\u1ea3 v\u1ec1 failed n\u1ebfu kh\u00f4ng th\u00e0nh c\u00f4ng\n\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#templates","title":"Templates","text":"<p>T\u1ea7ng Controller \u0111\u00e3 tr\u1ea3 v\u1ec1 templates, nhi\u1ec7m v\u1ee5 ti\u1ebfp theo l\u00e0 s\u1eed d\u1ee5ng Template Engine \u0111\u1ec3 x\u1eed l\u00fd c\u00e1c templates n\u00e0y v\u00e0 tr\u1ea3 v\u1ec1 webpage cho ng\u01b0\u1eddi d\u00f9ng.</p>"},{"location":"java/spring-boot/spring-boot/#i18n","title":"i18n","text":"<p>Trong c\u00e1c template, t\u00f4i c\u00f3 s\u1eed d\u1ee5ng c\u00e1c message t\u0129nh, nh\u1eefng message n\u00e0y h\u1ed7 tr\u1ee3 \u0111a ng\u00f4n ng\u1eef. Ch\u00fang ta \u0111\u1ecbnh ngh\u0129a c\u00e1c message n\u00e0y t\u1ea1i th\u01b0 m\u1ee5c\u00a0<code>i18n</code>.</p> <p>i18n/messages_vi.properties</p> <pre><code>loda.message.hello=Welcome to TodoApp\nloda.message.success=Th\u00eam Todo th\u00e0nh c\u00f4ng!\nloda.message.failed=Th\u00eam Todo kh\u00f4ng th\u00e0nh c\u00f4ng!\n\nloda.value.addTodo=Th\u00eam c\u00f4ng vi\u1ec7c\nloda.value.viewListTodo=Xem danh s\u00e1ch c\u00f4ng vi\u1ec7c\nloda.value.listTodo=Danh s\u00e1ch c\u00f4ng vi\u1ec7c\n</code></pre> <p>i18n/messages_en.properties</p> <p><pre><code>loda.message.hello=Welcome to TodoApp\nloda.message.success=Add To-do Successfully!\nloda.message.failed=Add To-do Failed!\n\nloda.value.addTodo=Add To-do\nloda.value.viewListTodo=View To-do list\nloda.value.listTodo=To-do list\n```# Restful API + @RestController + @PathVariable + @RequestBody\n\n### Restful API\n\nB\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc [dwyl/learn-api-design](https://github.com/dwyl/learn-api-design)\n\n### @RestController\n\nKh\u00e1c v\u1edbi\u00a0`@Controller`\u00a0l\u00e0 s\u1ebd tr\u1ea3 v\u1ec1 m\u1ed9t template.\n\n`@RestController`\u00a0tr\u1ea3 v\u1ec1 d\u1eef li\u1ec7u d\u01b0\u1edbi d\u1ea1ng JSON.\n</code></pre> @RestController @RequestMapping(\"/api/v1\") public class RestApiController{</p> <pre><code>@GetMapping(\"/todo\")\npublic List&lt;Todo&gt; getTodoList() {\n    return todoList;\n}\n</code></pre> <p>} <code>``  C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng tr\u1ea3 v\u1ec1 d\u01b0\u1edbi d\u1ea1ng Object s\u1ebd \u0111\u01b0\u1ee3c\u00a0Spring Boot\u00a0chuy\u1ec3n th\u00e0nh JSON. C\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng tr\u1ea3 v\u1ec1 r\u1ea5t \u0111a d\u1ea1ng, b\u1ea1n c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1</code>List<code>,</code>Map<code>, v.v..\u00a0Spring Boot\u00a0s\u1ebd convert h\u1ebft ch\u00fang th\u00e0nh JSON, m\u1eb7c \u0111\u1ecbnh s\u1ebd d\u00f9ng Jackson converter \u0111\u1ec3 l\u00e0m \u0111i\u1ec1u \u0111\u00f3. N\u1ebfu b\u1ea1n mu\u1ed1n API t\u00f9y bi\u1ebfn \u0111\u01b0\u1ee3c ki\u1ec3u d\u1eef li\u1ec7u tr\u1ea3 v\u1ec1, b\u1ea1n c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng</code>ResponseEntity`\u00a0c\u1ee7a\u00a0Spring\u00a0cung c\u1ea5p. \u0110\u00e2y l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng cha c\u1ee7a m\u1ecdi response v\u00e0 s\u1ebd wrapper c\u00e1c object tr\u1ea3 v\u1ec1. C\u00e1i n\u00e0y b\u1ea1n xem ti\u1ebfp ph\u1ea7n d\u01b0\u1edbi s\u1ebd r\u00f5. </p>"},{"location":"java/spring-boot/spring-boot/#requestbody","title":"@RequestBody","text":"<p>V\u00ec b\u00e2y gi\u1edd ch\u00fang ta x\u00e2y d\u1ef1ng API, n\u00ean c\u00e1c th\u00f4ng tin t\u1eeb ph\u00eda\u00a0Client\u00a0g\u1eedi l\u00ean\u00a0Server\u00a0s\u1ebd n\u1eb1m trong\u00a0<code>Body</code>, v\u00e0 c\u0169ng d\u01b0\u1edbi d\u1ea1ng\u00a0<code>JSON</code>\u00a0lu\u00f4n.  <code>java @RestController @RequestMapping(\"/api/v1\") public class RestApiController {      List&lt;Todo&gt; todoList = new CopyOnWriteArrayList&lt;&gt;();      @PostMapping(\"/todo\")     public ResponseEntity addTodo(@RequestBody Todo todo) {         todoList.add(todo);         // Tr\u1ea3 v\u1ec1 response v\u1edbi STATUS CODE = 200 (OK)         // Body s\u1ebd ch\u1ee9a th\u00f4ng tin v\u1ec1 \u0111\u1ed1i t\u01b0\u1ee3ng todo v\u1eeba \u0111\u01b0\u1ee3c t\u1ea1o.         return ResponseEntity.ok().body(todo);     } }</code></p> <p>T\u1ea5t nhi\u00ean l\u00e0\u00a0Spring Boot\u00a0s\u1ebd l\u00e0m gi\u00fap ch\u00fang ta c\u00e1c ph\u1ea7n n\u1eb7ng nh\u1ecdc, n\u00f3 chuy\u1ec3n chu\u1ed7i JSON trong request th\u00e0nh m\u1ed9t Object Java. b\u1ea1n ch\u1ec9 c\u1ea7n cho n\u00f3 bi\u1ebft c\u1ea7n chuy\u1ec3n JSON th\u00e0nh Object n\u00e0o b\u1eb1ng Annotation\u00a0<code>@RequestBody</code></p>"},{"location":"java/spring-boot/spring-boot/#pathvariable","title":"@PathVariable","text":"<p><code>RESTful API</code>\u00a0l\u00e0 m\u1ed9t ti\u00eau chu\u1ea9n d\u00f9ng trong vi\u1ec7c th\u1ebft k\u1ebf c\u00e1c thi\u1ebft k\u1ebf API cho c\u00e1c \u1ee9ng d\u1ee5ng web \u0111\u1ec3 qu\u1ea3n l\u00fd c\u00e1c resource.</p> <p>V\u00e0 v\u1edbi c\u00e1ch th\u1ed1ng nh\u1ea5t n\u00e0y, th\u00ec s\u1ebd c\u00f3 m\u1ed9t ph\u1ea7n th\u00f4ng tin quan tr\u1ecdng s\u1ebd n\u1eb1m ngay trong ch\u00ednh URL c\u1ee7a api.</p> <p>V\u00ed d\u1ee5:</p> <ol> <li>URL t\u1ea1o To-do:\u00a0https://loda.me/todo. T\u01b0\u01a1ng \u1ee9ng v\u1edbi HTTP method l\u00e0 POST</li> <li>URL l\u1ea5y th\u00f4ng tin To-do s\u1ed1 12:\u00a0https://loda.me/todo/12. T\u01b0\u01a1ng \u1ee9ng v\u1edbi HTTP method l\u00e0 GET</li> <li>URL s\u1eeda th\u00f4ng tin To-do s\u1ed1 12:\u00a0https://loda.me/todo/12. T\u01b0\u01a1ng \u1ee9ng v\u1edbi HTTP method l\u00e0 PUT</li> <li>URL xo\u00e1 To-do s\u1ed1 12:\u00a0https://loda.me/todo/12. T\u01b0\u01a1ng \u1ee9ng v\u1edbi HTTP method l\u00e0 DELETE</li> </ol> <p>Ngo\u00e0i th\u00f4ng tin trong\u00a0<code>Body</code>\u00a0c\u1ee7a request, th\u00ec c\u00e1i ch\u00fang ta c\u1ea7n ch\u00ednh l\u00e0 c\u00e1i con s\u1ed1 12 n\u1eb1m trong URL. Ph\u1ea3i l\u1ea5y \u0111\u01b0\u1ee3c con s\u1ed1 \u0111\u00f3 th\u00ec m\u1edbi bi\u1ebft \u0111\u01b0\u1ee3c \u0111\u1ed1i t\u01b0\u1ee3ng To-do c\u1ea7n thao t\u00e1c l\u00e0 g\u00ec.</p> <p><code>@PathVariable</code>\u00a0tham chi\u1ebfn.</p> <pre><code>@RestController\n@RequestMapping(\"/api/v1\")\npublic class RestApiController {\n\n    /*\n    ph\u1ea7n path URL b\u1ea1n mu\u1ed1n l\u1ea5y th\u00f4ng tin s\u1ebd \u0111\u1ec3 trong ngo\u1eb7c k\u00e9p {}\n     */\n    @GetMapping(\"/todo/{todoId}\")\n    public Todo getTodo(@PathVariable(name = \"todoId\") Integer todoId){\n        // @PathVariable l\u1ea5y ra th\u00f4ng tin trong URL\n        // d\u1ef1a v\u00e0o t\u00ean c\u1ee7a thu\u1ed9c t\u00ednh \u0111\u00e3 \u0111\u1ecbnh ngh\u0129a trong ngo\u1eb7c k\u00e9p /todo/{todoId}\n        return todoList.get(todoId);\n    }\n}\n```# Exception Handling @ExceptionHandler + @RestControllerAdvice/@ControllerAdvice + @ResponseStatus\n\n### @RestControllerAdvice &amp; @ControllerAdvice + @ExceptionHandler\n\n`@RestControllerAdvice`\u00a0l\u00e0 m\u1ed9t Annotation g\u1eafn tr\u00ean Class. C\u00f3 t\u00e1c d\u1ee5ng xen v\u00e0o qu\u00e1 tr\u00ecnh x\u1eed l\u00fd c\u1ee7a c\u00e1c\u00a0`@RestController`. T\u01b0\u01a1ng t\u1ef1 v\u1edbi\u00a0`@ControllerAdvice`. `@RestControllerAdvice`\u00a0th\u01b0\u1eddng \u0111\u01b0\u1ee3c k\u1ebft h\u1ee3p v\u1edbi\u00a0`@ExceptionHandler`\u00a0\u0111\u1ec3 c\u1eaft ngang qu\u00e1 tr\u00ecnh x\u1eed l\u00fd c\u1ee7a Controller, v\u00e0 x\u1eed l\u00fd c\u00e1c ngo\u1ea1i l\u1ec7 x\u1ea3y ra.\n\n```java\n@RestControllerAdvice\npublic class ApiExceptionHandler {\n    @ExceptionHandler(IndexOutOfBoundsException.class)\n    @ResponseStatus(value = HttpStatus.BAD_REQUEST)\n    public ErrorMessage TodoException(Exception ex,  WebRequest request) {\n        return new ErrorMessage(10100, \"\u0110\u1ed1i t\u01b0\u1ee3ng kh\u00f4ng t\u1ed3n t\u1ea1i\");\n    }\n}\n</code></pre> <p>Hi\u1ec3u \u0111\u01a1n gi\u1ea3n l\u00e0 Controller \u0111ang ho\u1ea1t \u0111\u1ed9ng b\u00ecnh th\u01b0\u1eddng, ch\u1eb3ng may c\u00f3 m\u1ed9t Exception \u0111\u01b0\u1ee3c n\u00e9m ra, th\u00ec thay v\u00ec b\u00e1o l\u1ed7i h\u1ec7 th\u1ed1ng, th\u00ec n\u00f3 s\u1ebd \u0111\u01b0\u1ee3c th\u1eb1ng\u00a0<code>@RestControllerAdvice</code>\u00a0v\u00e0\u00a0<code>@ExceptionHandler</code>\u00a0\u0111\u00f3n l\u1ea5y v\u00e0 x\u1eed l\u00fd. Sau \u0111\u00f3 tr\u1ea3 v\u1ec1 cho ng\u01b0\u1eddi d\u00f9ng th\u00f4ng tin h\u1eefu \u00edch h\u01a1n.</p>"},{"location":"java/spring-boot/spring-boot/#responsestatus","title":"@ResponseStatus","text":"<p><code>@ResponseStatus</code>\u00a0l\u00e0 m\u1ed9t c\u00e1ch \u0111\u1ecbnh ngh\u0129a HttpStatus tr\u1ea3 v\u1ec1 cho ng\u01b0\u1eddi d\u00f9ng. N\u1ebfu b\u1ea1n kh\u00f4ng mu\u1ed1n s\u1eed d\u1ee5ng\u00a0<code>ResponseEntity</code>\u00a0th\u00ec c\u00f3 th\u1ec3 d\u00f9ng\u00a0<code>@ResponseStatus</code>\u00a0\u0111\u00e1nh d\u1ea5u tr\u00ean\u00a0<code>Object</code>\u00a0tr\u1ea3 v\u1ec1.</p>"},{"location":"java/spring-boot/spring-boot/#huong-dan-su-dung-configurationproperties","title":"H\u01b0\u1edbng d\u1eabn s\u1eed d\u1ee5ng @ConfigurationProperties","text":""},{"location":"java/spring-boot/spring-boot/#cau-hinh-on-gian","title":"C\u1ea5u h\u00ecnh \u0111\u01a1n gi\u1ea3n","text":"<p>Gi\u1ea3 s\u1eed, \u1ee9ng d\u1ee5ng c\u1ee7a t\u00f4i s\u1ebd y\u00eau c\u1ea7u c\u00f3 m\u1ed9t s\u1ed1 gi\u00e1 tr\u1ecb to\u00e0n c\u1ee5c, m\u00e0 thay v\u00ec c\u1ea5u h\u00ecnh \u1edf trong code, t\u00f4i mu\u1ed1n l\u01b0u n\u00f3 \u1edf b\u00ean ngo\u00e0i, \u0111\u1ec3 ti\u1ec7n thay \u0111\u1ed5i m\u1ed7i khi c\u1ea7n.</p> <p>Th\u00ec t\u00f4i s\u1ebd l\u00e0m nh\u01b0 sau, t\u1ea1o ra m\u1ed9t class ch\u1ee9a c\u00e1c th\u00f4ng tin:</p> <pre><code>@Data // Lombok (T\u1ea1o Getter, Setter c\u00e1c th\u1ee9)\n@Component // L\u00e0 1 Spring Bean\n// \u0110\u00e1nh d\u1ea5u \u0111\u1ec3 l\u1ea5y config t\u1eeb trong file loda.yml\n// @PropertySource(\"classpath:loda.yml\")\n@ConfigurationProperties(prefix = \"loda\") // Ch\u1ec9 l\u1ea5y c\u00e1c config c\u00f3 ti\u1ec1n t\u1ed1 l\u00e0 \"loda\"\npublic class LodaAppProperties {\n    private String email;\n    private String googleAnalyticsId;\n\n    // standard getters and setters\n}\n</code></pre> <p>S\u1eed d\u1ee5ng\u00a0<code>@PropertySource</code>\u00a0\u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a t\u00ean c\u1ee7a file config. N\u1ebfu kh\u00f4ng c\u00f3 annotation n\u00e0y, Spring s\u1ebd s\u1eed d\u1ee5ng file m\u1eb7c \u0111\u1ecbnh (classpath:application.yml\u00a0trong th\u01b0 m\u1ee5c\u00a0resources)</p> <p>Cu\u1ed1i c\u00f9ng l\u00e0\u00a0<code>@ConfigurationProperties</code>, Annotation n\u00e0y \u0111\u00e1nh d\u1ea5u class b\u00ean d\u01b0\u1edbi n\u00f3 l\u00e0 properties, c\u00e1c thu\u1ed9c t\u00ednh s\u1ebd \u0111\u01b0\u1ee3c t\u1ef1 \u0111\u1ed9ng n\u1ea1p v\u00e0o khi Spring kh\u1edfi t\u1ea1o. L\u01b0u \u00fd: c\u00e1c thu\u1ed9c t\u00ednh n\u00e0y \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh b\u1edfi\u00a0<code>prefix=loda</code>. C\u00e1i n\u00e0y b\u1ea1n xem file\u00a0application.yml\u00a0\u1edf d\u01b0\u1edbi s\u1ebd hi\u1ec3u.</p> <p>Spring s\u1ebd t\u1ef1 t\u00ecm c\u00e1c h\u00e0m setter \u0111\u1ec3 set gi\u00e1 tr\u1ecb cho c\u00e1c thu\u1ed9c t\u00ednh n\u00e0y, n\u00ean quan tr\u1ecdng l\u00e0 b\u1ea1n ph\u1ea3i t\u1ea1o ra c\u00e1c setter method. (\u1ede \u0111\u00e2y t\u00f4i nh\u01b0\u1eddng vi\u1ec7c \u0111\u00f3 cho\u00a0lombok).</p> <p>Ngo\u00e0i ra, \u0111\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c t\u00ednh n\u0103ng n\u00e0y, b\u1ea1n c\u1ea7n k\u00edch ho\u1ea1t n\u00f3 b\u1eb1ng c\u00e1ch g\u1eafn\u00a0<code>@EnableConfigurationProperties</code>\u00a0l\u00ean m\u1ed9t Configuration n\u00e0o \u0111\u00f3. \u1ede \u0111\u00e2y t\u00f4i g\u1eafn l\u00ean h\u00e0m main lu\u00f4n.</p> <pre><code>@SpringBootApplication\n@EnableConfigurationProperties\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n</code></pre> <p>B\u00e2y gi\u1edd, Spring s\u1ebd t\u1ef1 \u0111\u1ed9ng bind to\u00e0n b\u1ed9 gi\u00e1 tr\u1ecb t\u1eeb trong file application.yml v\u00e0o bean LodaAppProperties cho ch\u00fang ta. T\u1ea1o ra file\u00a0application.yml\u00a0t\u1ea1i th\u01b0 m\u1ee5c resources. Th\u00eam c\u00e1c th\u00f4ng tin ch\u00fang ta c\u1ea7n. Ch\u00fang ta ph\u1ea3i \u0111\u1eb7t c\u00e1c thu\u1ed9c t\u00ednh n\u00e0y sau prefix\u00a0loda:</p> <pre><code>loda:\n  email: loda.namnh@gmail.com\n  googleAnalyticsId: U-xxxxx\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#chay-thu","title":"Ch\u1ea1y th\u1eed","text":"<pre><code>@SpringBootApplication\n@EnableConfigurationProperties\npublic class App implements CommandLineRunner {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n\n    @Autowired LodaAppProperties lodaAppProperties;\n\n    @Override\n    public void run(String... args) throws Exception {\n        System.out.println(\"Global variable:\");\n        System.out.println(\"\\t Email: \"+lodaAppProperties.getEmail());\n        System.out.println(\"\\t GA ID: \"+lodaAppProperties.getGoogleAnalyticsId());\n    }\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>Global variable:\n     Email: loda.namnh@gmail.com\n     GA ID: U-xxxxx\n</code></pre> <p>B\u00e2y gi\u1edd, \u1edf b\u1ea5t k\u1ef3 \u0111\u00e2u trong ch\u01b0\u01a1ng tr\u00ecnh, khi c\u1ea7n l\u1ea5y c\u00e1c th\u00f4ng tin config, t\u00f4i ch\u1ec9 c\u1ea7n:</p> <pre><code>@Autowired LodaAppProperties lodaAppProperties;\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#nested-properties","title":"Nested Properties","text":"<p>Ch\u00fang ta c\u00f3 th\u1ec3 config c\u00e1c thu\u1ed9c t\u00ednh b\u00ean trong Class k\u1ec3 c\u1ea3 khi n\u00f3 l\u00e0\u00a0<code>Lists</code>,\u00a0<code>Maps</code>\u00a0hay m\u1ed9t class kh\u00e1c.</p> <p>B\u1ed5 sung th\u00eam thu\u1ed9c t\u00ednh:</p> <pre><code>...\n@ConfigurationProperties(prefix = \"loda\") // Ch\u1ec9 l\u1ea5y c\u00e1c config c\u00f3 ti\u1ec1n t\u1ed1 l\u00e0 \"loda\"\npublic class LodaAppProperties {\n    ...\n    private List&lt;String&gt; authors;\n    private Map&lt;String, String&gt; exampleMap;\n}\n</code></pre> <p>S\u1eeda file\u00a0application.yml:</p> <pre><code>loda:\n  email: loda.namnh@gmail.com\n  googleAnalyticsId: U-xxxxx\n  authors:\n    - loda\n    - atom\n  exampleMap:\n    key1: hello\n    key2: world\n</code></pre> <p>Ch\u1ea1y l\u1ea1i ch\u01b0\u01a1ng tr\u00ecnh:</p> <pre><code>@Override\npublic void run(String... args) throws Exception {\n    System.out.println(\"Global variable:\");\n    System.out.println(\"\\t Email: \" + lodaAppProperties.getEmail());\n    System.out.println(\"\\t GA ID: \" + lodaAppProperties.getGoogleAnalyticsId());\n    System.out.println(\"\\t Authors: \" + lodaAppProperties.getAuthors());\n    System.out.println(\"\\t Example Map: \" + lodaAppProperties.getExampleMap());\n}\n</code></pre> <p>K\u1ebft qu\u1ea3:</p> <pre><code>Global variable:\n     Email: loda.namnh@gmail.com\n     GA ID: U-xxxxx\n     Authors: [loda, atom]\n     Example Map: {key1=hello, key2=world}\n```# Ch\u1ea1y nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng v\u1edbi Spring Profile\n\n### 1. T\u1ea1o file config\n\n`Spring Profiles`\u00a0c\u00f3 s\u1eb5n trong Framework r\u1ed3i n\u00ean b\u1ea1n kh\u00f4ng c\u1ea7n th\u00eam b\u1ea5t k\u00ec th\u01b0 vi\u1ec7n n\u00e0o kh\u00e1c. \u0110\u1ec3 s\u1eed d\u1ee5ng, c\u00e1c b\u1ea1n t\u1ea1o file config t\u1ea1i th\u01b0 m\u1ee5c\u00a0`resources`\u00a0trong project. M\u1eb7c \u0111\u1ecbnh Spring s\u1ebd nh\u1eadn c\u00e1c file c\u00f3 t\u00ean nh\u01b0 sau:\n\n```yaml\napplication.properties\napplication.yml\napplication-{profile-name}.yml // .properties\n</code></pre> <p>v\u00ed d\u1ee5 m\u00ecnh c\u00f3 2 m\u00f4i tr\u01b0\u1eddng l\u00e0\u00a0<code>local</code>\u00a0v\u00e0\u00a0<code>aws</code>, th\u00ec m\u00ecnh s\u1ebd t\u1ea1o ra c\u00e1c file nh\u01b0 th\u1ebf n\u00e0y:</p> <pre><code>application.yml\napplication-local.yml\napplication-aws.yml\napplication-common.yml\n</code></pre> <ul> <li><code>application</code>\u00a0l\u00e0 file config ch\u00ednh khai b\u00e1o c\u00e1c enviroment.</li> <li><code>application-local</code>\u00a0ch\u1ec9 s\u1eed d\u1ee5ng khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh \u1edf local</li> <li><code>application-aws</code>\u00a0ch\u1ec9 s\u1eed d\u1ee5ng khi ch\u1ea1y \u1edf AWS</li> <li><code>application-common</code>\u00a0l\u00e0 nh\u1eefng config d\u00f9ng chung, m\u00f4i tr\u01b0\u1eddng n\u00e0o c\u0169ng c\u1ea7n.</li> </ul> <p>B\u00e2y gi\u1edd, m\u00ecnh s\u1ebd khai b\u00e1o trong t\u1eebng file nh\u01b0 sau (X\u00f3a b\u1edbt n\u1ed9i dung t\u1eebng t\u1ec7p r\u00f9i cho ng\u1eafn g\u1ecdn):</p> <p>application.yml</p> <pre><code>#application.yml\n---\nspring.profiles: local\nspring.profiles.include: common, local\n---\nspring.profiles: aws\nspring.profiles.include: common, aws\n---\n</code></pre> <p>application-aws.yml</p> <pre><code>spring:\n  datasource:\n    username: xxx\n    password: xxx\n</code></pre> <p>application-local.yml</p> <pre><code>spring:\n  datasource:\n    username: root\n    password:\n    url: jdbc:mysql://localhost:3306/news?useSSL=false&amp;characterEncoding=UTF-8\n</code></pre> <p>application-common.yml</p> <pre><code>spring:\n  jpa:\n    properties:\n</code></pre> <p>Tadaa, xong, m\u00ecnh gi\u1ea3i th\u00edch ch\u00fat. b\u1ea1n \u0111\u1ec3 \u00fd trong file\u00a0<code>application.yml</code>\u00a0m\u00ecnh c\u00f3 khai b\u00e1o 2 m\u00f4i tr\u01b0\u1eddng l\u00e0\u00a0<code>local</code>\u00a0v\u00e0\u00a0<code>aws</code>. T\u1ea1i m\u1ed7i m\u00f4i tr\u01b0\u1eddng s\u1ebd\u00a0<code>include</code>\u00a0(bao g\u1ed3m) c\u00e1c file config nh\u01b0 kia. Khi m\u00ecnh k\u00edch ho\u1ea1t\u00a0<code>aws</code>\u00a0ch\u1eb3ng h\u1ea1n,\u00a0Spring\u00a0s\u1ebd load t\u1ea5t c\u1ea3 config c\u00f3 trong\u00a0<code>application-common.yml</code>\u00a0v\u00e0\u00a0<code>application-aws.yml</code>.</p>"},{"location":"java/spring-boot/spring-boot/#2-kich-hoat-config","title":"2. K\u00edch ho\u1ea1t config","text":"<p>\u0110\u1ec3 s\u1eed d\u1ee5ng m\u1ed9t\u00a0<code>Profiles</code>\u00a0b\u1ea1n c\u00f3 c\u00e1c c\u00e1ch sau:</p>"},{"location":"java/spring-boot/spring-boot/#su-dung-springprofilesactive-trong-file-applicationproperties-hoac-applicationyml","title":"S\u1eed d\u1ee5ng <code>spring.profiles.active</code> trong file <code>application.properties</code> ho\u1eb7c <code>application.yml</code>","text":"<pre><code>spring.profiles.active=aws\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#3-su-dung-jvm-system-parameter-nen-dung","title":"3: S\u1eed d\u1ee5ng JVM System Parameter (n\u00ean d\u00f9ng)","text":"<pre><code>-Dspring.profiles.active=aws\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#4-environment-variable-unix-nen-dung","title":"4: Environment Variable (Unix) (n\u00ean d\u00f9ng)","text":"<pre><code>export SPRING_PROFILES_ACTIVE=aws\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#3-cach-su-dung-profile","title":"3. C\u00e1ch s\u1eed d\u1ee5ng @Profile","text":"<p>Khi \u0111\u00e3 c\u00f3\u00a0<code>Profile</code>\u00a0r\u1ed3i, ngo\u00e0i c\u00e1c bi\u1ebfn to\u00e0n c\u1ee5c \u0111\u01b0\u1ee3c thay \u0111\u1ed5i theo m\u00f4i tr\u01b0\u1eddng, b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 to\u00e0n quy\u1ec1n quy\u1ebft \u0111\u1ecbnh xem trong code r\u1eb1ng\u00a0<code>Bean</code>\u00a0hay\u00a0<code>Class</code>\u00a0n\u00e0o s\u1ebd \u0111\u01b0\u1ee3c quy\u1ec1n ch\u1ea1y \u1edf m\u00f4i tr\u01b0\u1eddng n\u00e0o. B\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng annotation\u00a0<code>@Profile</code></p> <p><pre><code>// Bean n\u00e0y Spring ch\u1ec9 kh\u1edfi t\u1ea1o v\u00e0 qu\u1ea3n l\u00fd khi m\u00f4i tr\u01b0\u1eddng l\u00e0 `local`\n@Component\n@Profile(\"local\")\npublic class LocalDatasourceConfig {}\n// Ngo\u00e0i ra b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng to\u00e0n t\u1eed logic \u1edf \u0111\u00e2y, v\u00ed d\u1ee5:\n@Component\n@Profile(\"!local\")\npublic class LocalDatasourceConfig {}\n```# H\u01b0\u1edbng d\u1eabn chi ti\u1ebft Test Spring Boot\n\nH\u00f4m nay ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u c\u00e1ch \u0111\u1ec3 vi\u1ebft TestCase trong\u00a0**Spring Boot**. Y\u00eau c\u1ea7u t\u1ed1i thi\u1ebfu \u0111\u1ec3 \u0111i ti\u1ebfp ph\u1ea7n n\u00e0y \u0111\u00f3 l\u00e0 b\u1ea1n ph\u1ea3i c\u00f3 n\u1ec1n t\u1ea3ng v\u1edbi\u00a0`JUnit`\u00a0v\u00e0\u00a0`Mockito`.\n\n### **V\u1ea5n \u0111\u1ec1 Test + Spring**\n\n**Spring Boot**\u00a0s\u1ebd ph\u1ea3i t\u1ea1o Context v\u00e0 t\u00ecm ki\u1ebfm c\u00e1c Bean v\u00e0 nh\u00e9t v\u00e0o \u0111\u00f3. Sau t\u1ea5t c\u1ea3 c\u00e1c b\u01b0\u1edbc config v\u00e0 kh\u1edfi t\u1ea1o th\u00ec ch\u00fang ta s\u1eed d\u1ee5ng\u00a0`@Autowired`\u00a0\u0111\u1ec3 l\u1ea5y \u0111\u1ed1i t\u01b0\u1ee3ng ra s\u1eed d\u1ee5ng. V\u1ea5n \u0111\u1ec1 \u0111\u1ea7u ti\u00ean b\u1ea1n ngh\u0129 t\u1edbi khi vi\u1ebft Test s\u1ebd l\u00e0 l\u00e0m sao\u00a0`@Autowired`\u00a0bean v\u00e0o class Test \u0111\u01b0\u1ee3c v\u00e0 l\u00e0m sao cho\u00a0`JUnit`\u00a0hi\u1ec3u\u00a0`@Autowired`\u00a0l\u00e0 g\u00ec. H\u01b0\u1edbng gi\u1ea3i quy\u1ebft l\u00e0 t\u00edch h\u1ee3p\u00a0`Spring`\u00a0v\u00e0o v\u1edbi\u00a0`JUnit`.\n\n### **@RunWith(SpringRunner.class)**\n\n**Spring Boot**\u00a0\u0111\u00e3 thi\u1ebft k\u1ebf ra l\u1edbp\u00a0`SpringRunner`, s\u1ebd gi\u00fap ch\u00fang ta t\u00edch h\u1ee3p\u00a0**Spring + JUnit**.\n\n\u0110\u1ec3 test trong Spring, trong m\u1ecdi class Test ch\u00fang ta s\u1ebd th\u00eam\u00a0`@RunWith(SpringRunner.class)`\u00a0l\u00ean \u0111\u1ea7u Class Test \u0111\u00f3.\n</code></pre> @RunWith(SpringRunner.class) public class TodoServiceTest {     ... } <pre><code>Khi b\u1ea1n ch\u1ea1y\u00a0`TodoServiceTest`\u00a0n\u00f3 s\u1ebd t\u1ea1o ra m\u1ed9t\u00a0`Context`\u00a0ri\u00eang \u0111\u1ec3 ch\u1ee9a\u00a0`bean`\u00a0trong \u0111\u00f3, v\u1eady l\u00e0 ch\u00fang ta c\u00f3 th\u1ec3\u00a0`@Autowired`\u00a0tho\u1ea3i m\u00e1i trong n\u1ed9i h\u00e0m Class n\u00e0y.\n\nV\u1ea5n \u0111\u1ec1 ti\u1ebfp theo l\u00e0 l\u00e0m sao \u0111\u01b0a\u00a0`Bean`\u00a0v\u00e0o trong\u00a0`Context`.\n\nC\u00f3 2 c\u00e1ch\n\n1. `@SpringBootTest`\n2. `@TestConfiguration`\n\n### **@SpringBootTest**\n\n`@SpringBootTest`\u00a0s\u1ebd \u0111i t\u00ecm ki\u1ebfm class c\u00f3 g\u1eafn\u00a0`@SpringBootApplication`\u00a0v\u00e0 t\u1eeb \u0111\u00f3 \u0111i t\u00ecm to\u00e0n b\u1ed9\u00a0`Bean`\u00a0v\u00e0 n\u1ea1p v\u00e0o\u00a0`Context`.\n\nC\u00e1i n\u00e0y ch\u1ec9 n\u00ean s\u1eed d\u1ee5ng trong tr\u01b0\u1eddng h\u1ee3p mu\u1ed1n Integration Tests, v\u00ec n\u00f3 s\u1ebd t\u1ea1o to\u00e0n b\u1ed9\u00a0`Bean`, kh\u00f4ng kh\u00e1c g\u00ec b\u1ea1n ch\u1ea1y c\u1ea3 c\u00e1i\u00a0`SpringApplication.run(App.class, args);`, r\u1ea5t t\u1ed1n th\u1eddi gian m\u00e0 r\u1ea5t nhi\u1ec1u\u00a0`Bean`\u00a0th\u1eeba th\u00e3i, kh\u00f4ng c\u1ea7n d\u00f9ng \u0111\u1ebfn c\u0169ng kh\u1edfi t\u1ea1o.\n</code></pre> @RunWith(SpringRunner.class) @SpringBootTest public class TodoServiceTest {</p> <pre><code>/**\n * C\u00e1ch n\u00e0y s\u1eed d\u1ee5ng @SpringBootTest\n * N\u00f3 s\u1ebd load to\u00e0n b\u1ed9 Bean trong app c\u1ee7a b\u1ea1n l\u00ean,\n * Gi\u1ed1ng v\u1edbi vi\u1ec7c ch\u1ea1y App.java v\u1eady\n */\n\n@Autowired\nprivate TodoService todoService;\n</code></pre> <p>} ``` </p>"},{"location":"java/spring-boot/spring-boot/#testconfiguration","title":"@TestConfiguration","text":"<p><code>@TestConfiguration</code>\u00a0gi\u1ed1ng v\u1edbi\u00a0<code>@Configuration</code>, ch\u00fang ta t\u1ef1 \u0111\u1ecbnh ngh\u0129a ra\u00a0<code>Bean</code>.  C\u00e1c Bean \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi\u00a0<code>@TestConfiguration</code>\u00a0ch\u1ec9 t\u1ed3n t\u1ea1i trong m\u00f4i tr\u01b0\u1eddng Test. R\u1ea5t ph\u1ee5 h\u1ee3p v\u1edbi vi\u1ec7c vi\u1ebft UnitTest.  Class Test n\u00e0o, c\u1ea7n Bean g\u00ec, th\u00ec t\u1ef1 t\u1ea1o ra trong\u00a0<code>@TestConfiguration</code>  ``` @RunWith(SpringRunner.class) public class TodoServiceTest2 {</p> <pre><code>/**\n * C\u00e1ch n\u00e0y s\u1eed d\u1ee5ng @TestConfiguration\n * N\u00f3 ch\u1ec9 t\u1ea1o ra Bean trong Context test n\u00e0y m\u00e0 th\u00f4i\n * Ti\u1ebft ki\u1ec7m th\u1eddi gian h\u01a1n khi s\u1eed d\u1ee5ng @SpringBootTest (v\u00ec ph\u1ea3i load h\u1ebft Bean l\u00ean m\u00e0 kh\u00f4ng d\u00f9ng \u0111\u1ebfn)\n */\n@TestConfiguration\npublic static class TodoServiceTest2Configuration{\n\n    /*\n    T\u1ea1o ra trong Context m\u1ed9t Bean TodoService\n     */\n    @Bean\n    TodoService todoService(){\n        return new TodoService();\n    }\n}\n\n@Autowired\nprivate TodoService todoService;\n</code></pre> <p>``` </p>"},{"location":"java/spring-boot/spring-boot/#mockbean","title":"@MockBean","text":"<p>Spring\u00a0h\u1ed7 tr\u1ee3 mock v\u1edbi annotation\u00a0<code>@MockBean</code>, ch\u00fang ta c\u00f3 th\u1ec3 mock l\u1ea5y ra m\u1ed9t\u00a0<code>Bean</code>\u00a0\"gi\u1ea3\" m\u00e0 kh\u00f4ng th\u00e8m \u0111\u1ec3 \u00fd t\u1edbi th\u1eb1ng\u00a0<code>Bean</code>\u00a0\"th\u1eadt\". (K\u1ec3 c\u1ea3 th\u1eb1ng \"th\u1eadt\" c\u00f3 \u1edf trong Context \u0111i n\u1eefa, c\u0169ng kh\u00f4ng quan t\u00e2m).  ``` @RunWith(SpringRunner.class) public class TodoServiceTest2 {</p> <pre><code>/**\n * \u0110\u1ed1i t\u01b0\u1ee3ng TodoRepository s\u1ebd \u0111\u01b0\u1ee3c mock, ch\u1ee9 kh\u00f4ng ph\u1ea3i bean trong context\n */\n@MockBean\nTodoRepository todoRepository;\n</code></pre> <p>``` </p>"},{"location":"java/spring-boot/spring-boot/#demo-1","title":"Demo 1","text":"<p>Ch\u00fang ta s\u1ebd h\u1ecdc c\u00e1ch s\u1eed d\u1ee5ng c\u00e1c Annotation \u1edf tr\u00ean. </p>"},{"location":"java/spring-boot/spring-boot/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>pom.xml  ```</p> <p> 4.0.0 pom org.springframework.boot spring-boot-starter-parent 2.0.5.RELEASE me.loda.spring spring-boot-learning 0.0.1-SNAPSHOT spring-boot-learning Everything about Spring Boot <pre><code>&lt;properties&gt;\n    &lt;java.version&gt;1.8&lt;/java.version&gt;\n&lt;/properties&gt;\n\n&lt;dependencies&gt;\n\n    &lt;!--spring mvc, rest--&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n    &lt;/dependency&gt;\n\n    &lt;!--for test--&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n        &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n\n&lt;build&gt;\n    &lt;plugins&gt;\n    &lt;plugin&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n    &lt;/plugin&gt;\n    &lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre> <p> <pre><code>C\u1ea5u tr\u00fac th\u01b0 m\u1ee5c:\n\n!image\n\n### **T\u1ea1o Model, Service, Repository**\n\nCh\u00fang ta s\u1eed d\u1ee5ng\u00a0Lombok\u00a0cho ti\u1ec7n nh\u00e9.\n\n_Todo.java_\n</code></pre> @Data @AllArgsConstructor public class Todo {     private int id;     private String title;     private String detail; } <pre><code>V\u00ec ph\u1ee5c v\u1ee5 m\u1ee5c \u0111\u00edch demo, ch\u00fang ta s\u1ebd kh\u00f4ng c\u1ea7n s\u1eed d\u1ee5ng t\u1edbi\u00a0**Spring JPA**\u00a0m\u00e0 s\u1ebd t\u1ef1 vi\u1ebft.\n\n_TodoRepository.java_\n</code></pre> public interface TodoRepository {     List findAll(); <pre><code>Todo findById(int id);\n</code></pre> <p>} <code>_TodoService.java_</code> @Service public class TodoService {     @Autowired     private TodoRepository todoRepository;</p> <pre><code>public int countTodo(){\n    return todoRepository.findAll().size();\n}\n\npublic Todo getTodo(int id){\n    return todoRepository.findById(id);\n}\n\npublic List&lt;Todo&gt; getAll(){\n    return todoRepository.findAll();\n}\n</code></pre> <p>} <code>_App.java_</code> @SpringBootApplication public class App {     public static void main(String[] args) {         SpringApplication.run(App.class, args);     } } ```  R\u1ea5t \u0111\u01a1n gi\u1ea3n. </p>"},{"location":"java/spring-boot/spring-boot/#test-bang-springboottest","title":"Test b\u1eb1ng @SpringBootTest","text":"<p>Ch\u00fang ta\u00a0<code>mock TodoRepository</code>\u00a0v\u00e0 gi\u1ea3 l\u1eadp cho n\u00f3 tr\u1ea3 ra m\u1ed9t\u00a0<code>List&lt;Todo&gt;</code>\u00a0g\u1ed3m 10 ph\u1ea7n t\u1eed.  ``` @RunWith(SpringRunner.class) @SpringBootTest public class TodoServiceTest {</p> <pre><code>/**\n * C\u00e1ch n\u00e0y s\u1eed d\u1ee5ng @SpringBootTest\n * N\u00f3 s\u1ebd load to\u00e0n b\u1ed9 Bean trong app c\u1ee7a b\u1ea1n l\u00ean,\n * Gi\u1ed1ng v\u1edbi vi\u1ec7c ch\u1ea1y App.java v\u1eady\n */\n\n/**\n * \u0110\u1ed1i t\u01b0\u1ee3ng TodoRepository s\u1ebd \u0111\u01b0\u1ee3c mock, ch\u1ee9 kh\u00f4ng ph\u1ea3i bean trong context\n */\n@MockBean\nTodoRepository todoRepository;\n\n@Autowired\nprivate TodoService todoService;\n\n@Before\npublic void setUp() {\n    Mockito.when(todoRepository.findAll())\n           .thenReturn(IntStream.range(0, 10)\n                                .mapToObj(i -&gt; new Todo(i, \"title-\" + i, \"detail-\" + i))\n                                .collect(Collectors.toList()));\n\n}\n\n@Test\npublic void testCount() {\n    Assert.assertEquals(10, todoService.countTodo());\n}\n</code></pre> <p>} <pre><code>B\u1ea1n s\u1ebd th\u1ea5y Test ch\u1ea1y th\u00e0nh c\u00f4ng, nh\u01b0ng s\u1ebd m\u1ea5t th\u1eddi gian v\u00ec kh\u1edfi t\u1ea1o\u00a0`Context`\u00a0qu\u00e1 l\u00e2u do\u00a0`@SpringBootTest`\u00a0ph\u1ea3i load h\u1ebft t\u1ea5t c\u1ea3 bean l\u00ean.\n\n### **Test b\u1eb1ng @TestConfiguration**\n</code></pre> <pre><code>package me.loda.spring.testinginspringboot;\n/*******************************************************\n * For Vietnamese readers:\n *    C\u00e1c b\u1ea1n th\u00e2n m\u1ebfn, m\u00ecnh r\u1ea5t vui n\u1ebfu project n\u00e0y gi\u00fap\n * \u00edch \u0111\u01b0\u1ee3c cho c\u00e1c b\u1ea1n trong vi\u1ec7c h\u1ecdc t\u1eadp v\u00e0 c\u00f4ng vi\u1ec7c. N\u1ebfu\n * b\u1ea1n s\u1eed d\u1ee5ng l\u1ea1i to\u00e0n b\u1ed9 ho\u1eb7c m\u1ed9t ph\u1ea7n source code xin \u0111\u1ec3\n * l\u1ea1i d\u01b0\u1eddng d\u1eabn t\u1edbi github ho\u1eb7c t\u00ean t\u00e1c gi\u00e1.\n *    Xin c\u1ea3m \u01a1n!\n *******************************************************/\n\nimport java.util.stream.Collectors;\nimport java.util.stream.IntStream;\n\nimport org.junit.Assert;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mockito;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.TestConfiguration;\nimport org.springframework.boot.test.mock.mockito.MockBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.test.context.junit4.SpringRunner;\n\n@RunWith(SpringRunner.class)\npublic class TodoServiceTest2 {\n\n    /**\n     * C\u00e1ch n\u00e0y s\u1eed d\u1ee5ng @TestConfiguration\n     * N\u00f3 ch\u1ec9 t\u1ea1o ra Bean trong Context test n\u00e0y m\u00e0 th\u00f4i\n     * Ti\u1ebft ki\u1ec7m th\u1eddi gian h\u01a1n khi s\u1eed d\u1ee5ng @SpringBootTest (v\u00ec ph\u1ea3i load h\u1ebft Bean l\u00ean m\u00e0 kh\u00f4ng d\u00f9ng \u0111\u1ebfn)\n     */\n    @TestConfiguration\n    public static class TodoServiceTest2Configuration{\n\n        /*\n        T\u1ea1o ra trong Context m\u1ed9t Bean TodoService\n         */\n        @Bean\n        TodoService todoService(){\n            return new TodoService();\n        }\n    }\n\n    @MockBean\n    TodoRepository todoRepository;\n\n    @Autowired\n    private TodoService todoService;\n\n    @Before\n    public void setUp() {\n        Mockito.when(todoRepository.findAll())\n               .thenReturn(IntStream.range(0, 10)\n                                    .mapToObj(i -&gt; new Todo(i, \"title-\" + i, \"detail-\" + i))\n                                    .collect(Collectors.toList()));\n\n    }\n\n    @Test\n    public void testCount() {\n        Assert.assertEquals(10, todoService.countTodo());\n    }\n\n}\n</code></pre></p>"},{"location":"java/spring-boot/spring-boot/#van-e-test-spring-boot-2","title":"V\u1ea5n \u0111\u1ec1 Test + Spring Boot 2","text":"<p>\u1ede tr\u00ean ch\u00fang ta \u0111\u00e3 x\u1eed l\u00fd xong v\u1ea5n \u0111\u1ec1 dependency injection c\u1ee7a\u00a0JUnit\u00a0+\u00a0Spring Boot\u00a0r\u1ed3i.</p> <p>V\u1ea5n \u0111\u1ec1 ti\u1ebfp theo l\u00e0 c\u00e1i\u00a0Controller. \u0110\u00fang v\u1eady, ch\u00fang ta t\u1ea1o ra h\u00e0ng ch\u1ee5c Rest API \u0111\u00f3n request ng\u01b0\u1eddi d\u00f9ng, v\u1eady l\u00e0m sao \u0111\u1ec3 test n\u00f3.</p> <p>N\u1ebfu\u00a0Controller\u00a0kh\u00f4ng \u0111\u01b0\u1ee3c test th\u00ec l\u00e0 m\u1ed9t l\u1ed7 h\u1ed5ng c\u1ef1c l\u1edbn, v\u00ec n\u00f3 l\u00e0 \u0111\u1ea7u ra ch\u00ednh c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh, n\u00f3 sai -&gt; ch\u01b0\u01a1ng tr\u00ecnh kh\u00f4ng c\u00f3 gi\u00e1 tr\u1ecb.</p> <p>Tuy nhi\u00ean, ch\u00fang ta kh\u00f4ng mu\u1ed1n kh\u1edfi \u0111\u1ed9ng c\u1ea3 Tomcat Server + Database \u0111\u1ec3 test 1 API. N\u00f3 r\u1ea5t t\u1ed1n t\u00e0i nguy\u00ean v\u00e0 th\u1eddi gian.</p>"},{"location":"java/spring-boot/spring-boot/#webmvctest","title":"@WebMvcTest","text":"<p>Spring Boot\u00a0h\u1ed7 tr\u1ee3 test\u00a0Controller\u00a0m\u00e0 kh\u00f4ng c\u1ea7n kh\u1edfi \u0111\u1ed9ng Tomcat Server b\u1eb1ng annotation\u00a0<code>@WebMvcTest</code>.</p> <p>T\u1ea5t nhi\u00ean l\u00e0 n\u1ebfu kh\u00f4ng kh\u1edfi \u0111\u1ed9ng Server, th\u00ec ph\u1ea3i c\u00f3 m\u1ed9t ph\u01b0\u01a1ng th\u1ee9c kh\u00e1c gi\u1ea3 l\u1eadp, v\u00e2ng, l\u1ea1i l\u00e0\u00a0Mock.</p> <p>B\u00e2y gi\u1edd, khi mu\u1ed1n test m\u1ed9t Controller n\u00e0o \u0111\u00f3, ch\u00fang ta l\u00e0m nh\u01b0 sau:</p> <pre><code>@RunWith(SpringRunner.class)\n// B\u1ea1n c\u1ea7n cung c\u1ea5p l\u1edbp Controller cho @WebMvcTest\n@WebMvcTest(TodoRestController.class)\npublic class TodoRestControllerTest {\n    /**\n     * \u0110\u1ed1i t\u01b0\u1ee3ng MockMvc do Spring cung c\u1ea5p\n     * C\u00f3 t\u00e1c d\u1ee5ng gi\u1ea3 l\u1eadp request, thay th\u1ebf vi\u1ec7c kh\u1edfi \u0111\u1ed9ng Server\n     */\n    @Autowired\n    private MockMvc mvc;\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#demo-2","title":"Demo 2","text":"<p>Ch\u00fang ta v\u1eabn s\u1eed d\u1ee5ng ti\u1ebfp Project \u0111\u00e3 t\u1ea1o \u1edf\u00a0# Demo 1</p>"},{"location":"java/spring-boot/spring-boot/#tao-controller","title":"T\u1ea1o Controller","text":"<p>TodoRestController.java</p> <pre><code>@RestController\n@RequestMapping(\"/api/v1\")\npublic class TodoRestController {\n    @Autowired\n    TodoService todoService;\n\n    @GetMapping(\"/todo\")\n    public List&lt;Todo&gt; findAll(){\n        return todoService.getAll();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#tao-test-controller","title":"T\u1ea1o Test Controller","text":"<pre><code>import static org.hamcrest.CoreMatchers.is;\nimport static org.hamcrest.Matchers.hasSize;\nimport static org.mockito.BDDMockito.given;\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport java.util.stream.IntStream;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;\nimport org.springframework.boot.test.mock.mockito.MockBean;\nimport org.springframework.http.MediaType;\nimport org.springframework.test.context.junit4.SpringRunner;\nimport org.springframework.test.web.servlet.MockMvc;\n\n@RunWith(SpringRunner.class)\n// B\u1ea1n c\u1ea7n cung c\u1ea5p l\u1edbp Controller cho @WebMvcTest\n@WebMvcTest(TodoRestController.class)\npublic class TodoRestControllerTest {\n    /**\n     * \u0110\u1ed1i t\u01b0\u1ee3ng MockMvc do Spring cung c\u1ea5p\n     * C\u00f3 t\u00e1c d\u1ee5ng gi\u1ea3 l\u1eadp request, thay th\u1ebf vi\u1ec7c kh\u1edfi \u0111\u1ed9ng Server\n     */\n    @Autowired\n    private MockMvc mvc;\n\n    @MockBean\n    private TodoService todoService;\n\n    @Test\n    public void testFindAll() throws Exception {\n        // T\u1ea1o ra m\u1ed9t List&lt;Todo&gt; 10 ph\u1ea7n t\u1eed\n        List&lt;Todo&gt; allTodos = IntStream.range(0, 10)\n                                       .mapToObj(i -&gt; new Todo(i, \"title-\" + i, \"detail-\" + i))\n                                       .collect(Collectors.toList());\n\n        // gi\u1ea3 l\u1eadp todoService tr\u1ea3 v\u1ec1 List mong mu\u1ed1n\n        given(todoService.getAll()).willReturn(allTodos);\n\n        mvc.perform(get(\"/api/v1/todo\").contentType(MediaType.APPLICATION_JSON)) // Th\u1ef1c hi\u1ec7n GET REQUEST\n           .andExpect(status().isOk()) // Mong mu\u1ed1n Server tr\u1ea3 v\u1ec1 status 200\n           .andExpect(jsonPath(\"$\", hasSize(10))) // Hi v\u1ecdng server tr\u1ea3 v\u1ec1 List \u0111\u1ed9 d\u00e0i 10\n           .andExpect(jsonPath(\"$[0].id\", is(0))) // Hi v\u1ecdng ph\u1ea7n t\u1eed tr\u1ea3 v\u1ec1 \u0111\u1ea7u ti\u00ean c\u00f3 id = 0\n           .andExpect(jsonPath(\"$[0].title\", is(\"title-0\"))) // Hi v\u1ecdng ph\u1ea7n t\u1eed tr\u1ea3 v\u1ec1 \u0111\u1ea7u ti\u00ean c\u00f3 title = \"title-0\"\n           .andExpect(jsonPath(\"$[0].detail\", is(\"detail-0\")));\n    }\n}\n</code></pre> <p>Ch\u1ea1y th\u1eed v\u00e0 tr\u1ea3i nghi\u1ec7m b\u1ea1n nh\u00e9 :3</p>"},{"location":"java/spring-boot/spring-boot/#ket","title":"K\u1ebft","text":"<p>Test l\u00e0 m\u1ed9t ph\u1ea7n quan tr\u1ecdng trong h\u1ec7 th\u1ed1ng, hi v\u1ecdng c\u00e1c \u0111\u1ecdc k\u0129 v\u00e0 th\u1ef1c h\u00e0nh \u0111\u1ec3 n\u1eafm ch\u1eafc.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/#huong-dan-chi-tiet-test-spring-boot-phan-2","title":"H\u01b0\u1edbng d\u1eabn chi ti\u1ebft Test Spring Boot (Ph\u1ea7n 2)","text":"<p>Trong b\u00e0i n\u00e0y, t\u00f4i s\u1ebd t\u1eadp trung v\u00e0o vi\u1ec7c gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c c\u00e1c b\u1ea1n c\u00e1ch chu\u1ea9n b\u1ecb d\u1eef li\u1ec7u test.</p> <p>B\u00e0i vi\u1ebft c\u00f3 s\u1eed d\u1ee5ng:</p> <ol> <li>Hibernate l\u00e0 g\u00ec?</li> <li>Spring JPA</li> <li>Lombok</li> <li>Spring Boot</li> </ol>"},{"location":"java/spring-boot/spring-boot/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;parent&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&lt;version&gt;2.0.5.RELEASE&lt;/version&gt;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;&lt;groupId&gt;me.loda.spring&lt;/groupId&gt;&lt;artifactId&gt;example-independent-maven-spring-project&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;name&gt;example-independent-maven-spring-project&lt;/name&gt;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&lt;properties&gt;&lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;&lt;!--spring jpa--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!--in memory database--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;com.h2database&lt;/groupId&gt;&lt;artifactId&gt;h2&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt;&lt;plugins&gt;&lt;plugin&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&lt;/plugin&gt;&lt;/plugins&gt;&lt;/build&gt;&lt;/project&gt;\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#prepare","title":"Prepare","text":"<p>Tr\u01b0\u1edbc h\u1ebft, gi\u1ea3 s\u1eed ch\u00fang ta c\u00f3 m\u1ed9t h\u1ec7 th\u1ed1ng qu\u1ea3n l\u00fd c\u00f4ng vi\u1ec7c</p> <p>Todo.java</p> <pre><code>@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@Entity\npublic class Todo {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private int id;\n    private String title;\n    private String detail;\n}\n</code></pre> <p>TodoRepository.java</p> <pre><code>public interface TodoRepository extends JpaRepository&lt;Todo, Long&gt; {\n    List&lt;Todo&gt; findAll();\n\n    Todo findById(int id);\n}\n</code></pre> <p>TodoController.java</p> <pre><code>@RestController\n@RequestMapping(\"/api/v1\")\n@RequiredArgsConstructor\npublic class TodoRestController {\n    private final TodoService todoService;\n\n    @GetMapping(\"/todo\")\n    public List&lt;Todo&gt; findAll() {\n        return todoService.getAll();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#datajpatest","title":"@DataJpaTest","text":"<p>V\u1ec1 c\u01a1 b\u1ea3n, ch\u00fang ta kh\u00f4ng th\u1ec3 mock hay l\u00e0m gi\u1ea3 d\u1eef li\u1ec7u c\u1ee7a Database m\u00e3i \u0111\u01b0\u1ee3c, n\u00f3 s\u1ebd l\u00e0 m\u1ed9t l\u1ed7 h\u1ed5ng l\u1edbn trong h\u1ec7 th\u1ed1ng. Ngo\u00e0i ra, b\u1ea1n c\u0169ng s\u1ebd kh\u00f4ng th\u1ec3 test \u0111\u01b0\u1ee3c qu\u00e1 tr\u00ecnh thao t\u00e1c v\u1edbi Database c\u1ee7a d\u1ef1 \u00e1n.</p> <p>V\u1eady n\u00ean sau c\u00f9ng, ch\u00fang ta c\u0169ng s\u1ebd ph\u1ea3i test c\u00e1c thao t\u00e1c v\u1eadn h\u00e0nh v\u1edbi Database,</p> <p>Nh\u01b0ng ch\u1edb lo, \u0111\u1ec3 t\u1eadp trung v\u00e0o vi\u1ec7c test c\u00e1c thao t\u00e1c v\u1edbi Database, Spring Boot \u0111\u00e3 h\u1ed7 tr\u1ee3 ch\u00fang ta b\u1eb1ng\u00a0<code>@DataJpaTest</code></p> <p>K\u1ebft h\u1ee3p gi\u1eefa\u00a0<code>@DataJpaTest</code>\u00a0v\u00e0\u00a0<code>h2-database</code>\u00a0(Memory database) l\u00e0 Combo ho\u00e0n h\u1ea3o.</p> <pre><code>@RunWith(SpringRunner.class)\n/**\n * Khi \u0111\u00e1nh d\u1ea5u m\u1ed9t class l\u00e0 @DataJpaTest.\n * Spring Boot s\u1ebd load l\u00ean t\u1ea5t c\u1ea3 c\u00e1c Bean c\u00f3 li\u00ean quan t\u1edbi t\u1ea7ng Repository\n * Thay v\u00ec load h\u1ebft t\u1ea5t c\u1ea3 Bean nh\u01b0 l\u00e0 @SpringBootTest\n */\n@DataJpaTest\npublic class DataJpaAnnotationTest {\n\n    @Autowired\n    private DataSource dataSource;\n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n    @Autowired\n    private EntityManager entityManager;\n    @Autowired\n    private TodoRepository todoRepository;\n\n    @Test\n    public void allComponentAreNotNull() {\n        Assertions.assertThat(dataSource).isNotNull();\n        Assertions.assertThat(jdbcTemplate).isNotNull();\n        Assertions.assertThat(entityManager).isNotNull();\n        Assertions.assertThat(todoRepository).isNotNull();\n    }\n\n}\n</code></pre> <p><code>@DataJpaTest</code>\u00a0c\u00f3 t\u00e1c d\u1ee5ng kh\u1edfi t\u1ea1o c\u00e1c Bean c\u1ea7n thi\u1ebft cho t\u1ea7ng Repository. Ngo\u00e0i ra, n\u00f3 kh\u00f4ng kh\u1edfi t\u1ea1o th\u00eam c\u00e1c Bean th\u1eeba th\u00e3i n\u00e0o kh\u00e1c. (Chuy\u00ean bi\u1ec7t h\u01a1n\u00a0<code>@SpringBootTest</code>)</p>"},{"location":"java/spring-boot/spring-boot/#tao-data","title":"T\u1ea1o Data","text":"<p>C\u00e1ch Fake d\u1eef li\u1ec7u \u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0 t\u1ef1 insert b\u1eb1ng repository</p> <pre><code>import org.assertj.core.api.Assertions;\nimport org.junit.After;\n\n    @Test\n    public void testTodoRepositoryByCode() {\n        todoRepository.save(new Todo(0, \"Todo-1\", \"Detail-1\"));\n        todoRepository.save(new Todo(0, \"Todo-2\", \"Detail-2\"));\n\n        Assertions.assertThat(todoRepository.findAll()).hasSize(2);\n        Assertions.assertThat(todoRepository.findById(1).getTitle()).isEqualTo(\"Todo-1\");\n    }\n\n    @After\n    public void clean() {\n        todoRepository.deleteAll();\n    }\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#sql","title":"@Sql","text":"<p>M\u1ed9t c\u00e1ch l\u00e0m hay h\u01a1n \u0111\u1ec3 chu\u1ea9n b\u1ecb d\u1eef li\u1ec7u cho Test \u0111\u00f3 l\u00e0 s\u1eed d\u1ee5ng annotation\u00a0<code>@Sql</code></p> <p><code>@Sql</code>\u00a0c\u00f3 t\u00e1c d\u1ee5ng load m\u1ed9t ho\u1eb7c nhi\u1ec1u file scripts sql l\u00ean v\u00e0 th\u1ef1c thi.</p> <p>v\u00ed d\u1ee5:</p> <p>createToDo.sql</p> <pre><code>INSERT INTO todo (title, detail) VALUES ('Todo-1', 'Do homework');\nINSERT INTO todo (title, detail) VALUES ('Todo-2', 'Walking');\n</code></pre> <p>\u0110\u1ec3 ch\u1ea1y scripts n\u00e0y trong class Test, b\u1ea1n l\u00e0m nh\u01b0 sau:</p> <pre><code>@RunWith(SpringRunner.class)\n@DataJpaTest\npublic class SqlAnnotationTest {\n    @Autowired\n    private TodoRepository todoRepository;\n\n    @Test\n    @Sql(\"/createTodo.sql\")\n    public void testTodoRepositoryBySqlSchema() {\n        Assertions.assertThat(todoRepository.findAll()).hasSize(2);\n        Assertions.assertThat(todoRepository.findById(1).getTitle()).isEqualTo(\"Todo-1\");\n    }\n\n}\n</code></pre> <p>\u0110\u1ec3 ch\u1ea1y nhi\u1ec1u file sql c\u00f9ng l\u00fac, b\u1ea1n s\u1eed d\u1ee5ng\u00a0<code>@SqlGroup</code></p>"},{"location":"java/spring-boot/spring-boot/#ket_1","title":"K\u1ebft","text":"<p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/#sb20-huong-dan-toan-tap-mockito","title":"[SB20] H\u01b0\u1edbng d\u1eabn to\u00e0n t\u1eadp Mockito","text":""},{"location":"java/spring-boot/spring-boot/#yeu-cau","title":"Y\u00eau c\u1ea7u","text":"<p>Tr\u01b0\u1edbc khi t\u00ecm hi\u1ec3u Mockito, b\u1ea1n c\u1ea7n bi\u1ebft JUnit.</p> <p>Trong b\u00e0i vi\u1ebft c\u00f3 s\u1eed d\u1ee5ng\u00a0Lombok</p>"},{"location":"java/spring-boot/spring-boot/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>V\u1ec1 c\u01a1 b\u1ea3n, Unit test l\u00e0 ph\u01b0\u01a1ng ph\u00e1p ti\u1ebfp c\u1eadn \u0111\u1ed9c l\u1eadp, t\u1ee9c l\u00e0 m\u1ed7i m\u1ed9t ch\u1ee9c ch\u0103ng n\u0103ng s\u1ebd \u0111\u01b0\u1ee3c \u0111i k\u00e8m v\u1edbi m\u1ed9t ho\u1eb7c nhi\u1ec1u b\u00e0i test \u0111\u1ec3 ch\u1eafc ch\u1eafn r\u00e0ng c\u00e1i ch\u1ee9c n\u0103ng \u0111\u00f3 ho\u1ea1t \u0111\u1ed9ng \u1ed5n. V\u1eady n\u00ean Unit Test th\u01b0\u1eddng l\u00e0 \u0111\u01a1n nh\u1ecf nh\u1ea5t v\u00e0 test case c\u0169ng d\u1ec5 d\u00e0ng kh\u1edfi t\u1ea1o</p> <pre><code>@Test\npublic void testSum(){\n    Assert.assertEquals(3, MathUtil.sum(1,2));\n}\n</code></pre> <p>B\u00e0i to\u00e1n m\u1edf r\u1ed9ng ra h\u01a1n, Khi ch\u00fang ta ph\u1ea3i test s\u1ef1 ho\u1ea1t \u0111\u1ed9ng ph\u1ed1i h\u1ee3p gi\u1eefa nhi\u1ec1u ch\u1ee9c n\u0103ng hay th\u00e0nh ph\u1ea7n v\u1edbi nhau ho\u1eb7c mu\u1ed1n test m\u1ed9t ch\u1ee9c n\u0103ng l\u1edbn th\u00ec s\u1ebd tr\u1edf n\u00ean ph\u1ee9c t\u1ea1p v\u00e0 kh\u00f3 x\u00e2y d\u1ef1ng h\u01a1n r\u1ea5t nhi\u1ec1u.</p> <p>C\u00e1c k\u1ecbch b\u1ea3n sau th\u01b0\u1eddng di\u1ec5n ra:</p> <ul> <li>Ch\u1ee9c n\u0103ng A g\u1ecdi t\u1edbi ch\u1ee9c n\u0103ng B. tuy nhi\u00ean, B ch\u01b0a vi\u1ebft xong</li> <li>Ch\u1ee9c n\u0103ng A g\u1ecdi t\u1edbi ch\u1ee9c n\u0103ng B. tuy nhi\u00ean, B kh\u1edfi t\u1ea1o r\u1ea5t ph\u1ee9c t\u1ea1p (truy xu\u1ea5t Database, y\u00eau c\u1ea7u nhi\u1ec1u params, v.v.)</li> <li>Mu\u1ed1n test ch\u1ee9c n\u0103ng A, tuy nhi\u00ean A y\u00eau c\u1ea7u n\u1ed7 l\u1ef1c l\u1edbn c\u1ee7a c\u1ea3 h\u1ec7 th\u1ed1ng (Y\u00eau c\u1ea7u c\u00f3 HTTP-server, authorize, v.v.)</li> </ul> <pre><code>// Gi\u1ea3 s\u1eed mu\u1ed1n test h\u00e0m n\u00e0y\npublic int getAllData(){\n\n    // Gi\u1ea3 s\u1eed nh\u01b0 th\u1eb1ng driver kh\u00f4ng \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o ho\u1eb7c b\u1ecb l\u1ed7i\n    // th\u00ec function n\u00e0y coi nh\u01b0 h\u1ecfng\n\n    MySQLdriver.connect() // K\u1ebft n\u1ed1i xu\u1ed1ng Database\n    var data = MySQLdriver.get()// L\u1ea5y d\u1eef li\u1ec7u\n\n    // Ch\u00fang ta mu\u1ed1n test logic x\u1eed l\u00fd d\u1eef li\u1ec7u \u1edf d\u01b0\u1edbi \u0111\u00e2y,\n    // m\u00e0 k c\u1ea7n k\u1ebft n\u1ed1i databse, ph\u1ea3i l\u00e0m sao?\n\n    // X\u1eed l\u00fd d\u1eef li\u1ec7u\n    ...\n    // tr\u1ea3 ra d\u1eef li\u1ec7u\n    return data\n}\n</code></pre> <p>R\u1ea5t nhi\u1ec1u k\u1ecbch b\u1ea3n ph\u1ee9c t\u1ea1p x\u1ea3y ra, m\u00e0 tr\u00ean th\u1ef1c t\u1ebf, ch\u00fang ta ch\u1ec9 mong mu\u1ed1n confirm r\u1eb1ng A \u1ed5n, ch\u1ee9 th\u1eb1ng B, C, D g\u00ec \u0111\u00f3 th\u00ec h\u00e3y c\u1ee9 t\u1ea1m coi l\u00e0 n\u00f3 \"\u0111\u00e3 \u1ed5n\" \u0111i.</p> <p>\u0110\u1ec3 \u0111\u01a1n gi\u1ea3n ho\u00e1 c\u00e1c k\u1ecbch b\u1ea3n test nh\u01b0 tr\u00ean, kh\u00e1i ni\u1ec7m\u00a0<code>Mock</code>\u00a0ra \u0111\u1eddi.</p> <p>T\u01b0 t\u01b0\u1edfng c\u1ee7a\u00a0<code>Mock</code>\u00a0\u0111\u01a1n gi\u1ea3n l\u00e0 khi mu\u1ed1n test (A g\u1ecdi B) th\u00ec thay v\u00ec t\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng B th\u1eadt s\u1ef1, b\u1ea1n t\u1ea1o ra m\u1ed9t th\u1eb1ng B' gi\u1ea3 m\u1ea1o, c\u00f3 \u0111\u1ea7y \u0111\u1ee7 ch\u1ee9c n\u0103ng nh\u01b0 B th\u1eadt (nh\u01b0ng kh\u00f4ng ph\u1ea3i th\u1eadt)</p> <p>B\u1ea1n s\u1ebd gi\u1ea3 l\u1eadp cho B' bi\u1ebft l\u00e0 khi th\u1eb1ng A g\u1ecdi t\u1edbi n\u00f3, n\u00f3 c\u1ea7n l\u00e0m g\u00ec, tr\u1ea3 l\u1ea1i c\u00e1i g\u00ec (hardcode). Mi\u1ec5n l\u00e0m sao cho n\u00f3 tr\u1ea3 ra \u0111\u00fang c\u00e1i th\u1eb1ng A c\u1ea7n \u0111\u1ec3 ch\u00fang ta c\u00f3 th\u1ec3 test A thu\u1eadn l\u1ee3i nh\u1ea5t.</p> <pre><code>// \u0110\u1ea1i lo\u1ea1i nh\u01b0 n\u00e0y\n// Khi driver.get() \u0111\u01b0\u1ee3c g\u1ecdi, h\u00e3y tr\u1ea3 ra m\u1ed9t List(1,2,3)\nMockito.when(driver.get())\n       .thenReturn(Arrays.asList(1, 2, 3));\n</code></pre> <p>\u1ede trong Java,\u00a0<code>Mockito</code>\u00a0ch\u00ednh l\u00e0 th\u01b0 vi\u1ec7n n\u1ed5i ti\u1ebfng nh\u1ea5t \u0111\u1ec3 c\u00e1c b\u1ea1n l\u00e0m vi\u1ec7c n\u00e0y.</p>"},{"location":"java/spring-boot/spring-boot/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>\u0110\u1ec3 s\u1eed d\u1ee5ng\u00a0<code>Mockito</code>\u00a0b\u1ea1n c\u1ea7n:</p> <pre><code>&lt;!--https://mvnrepository.com/artifact/org.mockito/mockito-core --&gt;\n&lt;dependency&gt;&lt;groupId&gt;org.mockito&lt;/groupId&gt;&lt;artifactId&gt;mockito-core&lt;/artifactId&gt;&lt;version&gt;3.2.4&lt;/version&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;\n</code></pre> <p>Ch\u00fang ta \u0111ang vi\u1ebft test, n\u00ean \u0111\u1eebng qu\u00ean\u00a0<code>JUnit</code>\u00a0n\u1eefa nh\u00e9:</p> <pre><code>&lt;!--https://mvnrepository.com/artifact/junit/junit --&gt;\n&lt;dependency&gt;&lt;groupId&gt;junit&lt;/groupId&gt;&lt;artifactId&gt;junit&lt;/artifactId&gt;&lt;version&gt;4.12&lt;/version&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#cach-mock","title":"C\u00e1ch Mock","text":"<p>Kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n \u0111\u1ea7u ti\u00ean, \u0111\u00f3 l\u00e0 l\u00e0m sao \u0111\u1ec3 t\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng b\u1ecb Mock.</p>"},{"location":"java/spring-boot/spring-boot/#cach-1-mockitomock","title":"C\u00e1ch 1: Mockito.mock()","text":"<p>S\u1eed d\u1ee5ng\u00a0<code>Mockito.mock()</code>\u00a0\u0111\u1ec3 t\u1ea1o ra m\u1ed9t object c\u1ee7a\u00a0<code>Class</code>\u00a0b\u1ea1n y\u00eau c\u1ea7u, n\u00f3 th\u1eadm ch\u00ed c\u00f2n kh\u00f4ng quan t\u00e2m h\u00e0m kh\u1edfi t\u1ea1o c\u1ee7a\u00a0<code>Class</code>\u00a0\u00fd nh\u01b0 n\u00e0o v\u00e0 ra sao, v\u00ec n\u00f3 \u0111\u00e2u c\u00f3 th\u1eadt :v</p> <pre><code>@Test\npublic void testUserMockFunction() {\n    List mockList = Mockito.mock(List.class);\n\n    Mockito.when(mockList.size()).thenReturn(2);\n\n    Assert.assertEquals(2, mockList.size());\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#cach-2-su-dung-mock","title":"C\u00e1ch 2: S\u1eed d\u1ee5ng @Mock","text":"<p>B\u1ea1n mu\u1ed1n mock c\u00e1i g\u00ec, th\u00ec \u0111\u00e1nh d\u1ea5u\u00a0<code>@Mock</code>\u00a0l\u00ean \u00fd, \u0111\u01a1n gi\u1ea3n v\u00e3i :v</p> <pre><code>@Mock\nList&lt;String&gt; mockedList;\n</code></pre> <p>Tuy nhi\u00ean, g\u1eafn\u00a0<code>@Mock</code>\u00a0l\u00e0 ch\u01b0a \u0111\u1ee7, b\u1ea1n c\u1ea7n k\u00edch ho\u1ea1t\u00a0<code>Mockito</code>\u00a0\u0111\u1ec3 n\u00f3 mock c\u00e1c object \u00fd cho b\u1ea1n.</p> <p>Sau khi k\u00edch ho\u1ea1t, th\u00ec t\u1ea5t c\u1ea3 c\u00e1c object \u0111\u01b0\u1ee3c g\u1eafn\u00a0<code>@Mock</code>\u00a0s\u1ebd tr\u1edf th\u00e0nh 1 object gi\u1ea3 m\u1ea1o, v\u00e0 \u0111\u00e3 \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o (t\u1ee9c l\u00e0\u00a0<code>!= null</code>)</p> <p>C\u00e1c c\u00e1ch k\u00edch ho\u1ea1t nh\u01b0 sau:</p> <ol> <li>G\u1eafn\u00a0<code>@RunWith(MockitoJUnitRunner.class)</code>\u00a0l\u00ean class test c\u1ee7a b\u1ea1n</li> </ol> <pre><code>// C\u00e1ch 1\n@RunWith(MockitoJUnitRunner.class)\npublic class MockitoAnnotationTest {\n    @Mock\n    List&lt;String&gt; mockedList;\n}\n</code></pre> <ol> <li>t\u1ea1o ra m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>MockitoRule</code>\u00a0b\u00ean trong class test c\u1ee7a b\u1ea1n</li> </ol> <pre><code>public class MockitoAnnotationTest {\n\n    // C\u00e1ch 2\n    @Rule\n    public MockitoRule initRule = MockitoJUnit.rule();\n\n    @Mock\n    List&lt;String&gt; mockedList;\n}\n</code></pre> <ol> <li>S\u1eed d\u1ee5ng\u00a0<code>Mockito.init()</code></li> </ol> <pre><code>public class MockitoAnnotationTest {\n\n    @Mock\n    List&lt;String&gt; mockedList;\n\n    @Before\n    public void setUp() throws Exception {\n        // C\u00e1ch 3\n        // N\u1ebfu b\u1ea1n kh\u00f4ng d\u00f9ng c\u00e1ch 1 ho\u1eb7c 2 th\u00ec ph\u1ea3i s\u1eed d\u1ee5ng\n        // d\u00f2ng code d\u01b0\u1edbi \u0111\u00e2y:\n        MockitoAnnotations.initMocks(this);\n    }\n}\n</code></pre> <p>V\u1eady l\u00e0 xong, b\u1ea1n \u0111\u00e3 t\u1ea1o ra \u0111\u01b0\u1ee3c m\u1ed9t Object b\u1ecb mock.</p>"},{"location":"java/spring-boot/spring-boot/#cach-su-dung","title":"C\u00e1ch s\u1eed d\u1ee5ng","text":"<p><code>Mockito</code>\u00a0cung c\u1ea5p r\u1ea5t nhi\u1ec1u methods kh\u00e1c nhau \u0111\u1ec3 gi\u00fap b\u1ea1n gi\u1ea3 l\u1eadp \u0111\u1ea7y \u0111\u1ee7 c\u00e1c th\u1ee9 b\u1ea1n c\u1ea7n.</p> <p>Hay s\u1eed d\u1ee5ng nh\u1ea5t l\u00e0 h\u00e0m\u00a0<code>when()</code>.</p> <pre><code>// Tr\u1ea3 l\u00e0 size 100 khi g\u1ecdi h\u00e0m size()\nMockito.when(mockedList.size()).thenReturn(100);\n// Throw exception khi g\u1ecdi h\u00e0m size()\nMockito.when(mockedList.size()).thenThrow(NullPointerException.class);\n// B\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ed5i ng\u01b0\u1ee3c c\u00e1ch vi\u1ebft, c\u00f2n logic v\u1eabn v\u1eady\n// N\u00e9m ra exception khi g\u1ecdi h\u00e0m .get() v\u1edbi tham s\u1ed1 truy\u1ec1n v\u00e0o b\u1ea5t k\u00ec\nMockito.doThrow(NullPointerException.class).when(mockedList.get(Mockito.any()));\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#spy","title":"Spy","text":"<p><code>Spy</code>\u00a0l\u00e0 vi\u1ec7c s\u1eeda m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng Th\u1eadt -&gt; Gi\u1ea3</p> <pre><code>@RunWith(MockitoJUnitRunner.class)\npublic class SpyTest {\n    @Spy\n    List&lt;String&gt; list = new ArrayList&lt;&gt;();\n\n    @Test\n    public void testSpy() {\n        list.add(\"one\");\n        list.add(\"two\");\n        // show the list items\n        System.out.println(list);\n\n        Mockito.verify(list).add(\"one\");\n        Mockito.verify(list).add(\"two\");\n\n        // @Spy th\u1ef1c s\u1ef1 g\u1ecdi h\u00e0m .add c\u1ee7a List n\u00ean n\u00f3 c\u00f3 size l\u00e0 2 m\u00e0 kh\u00f4ng c\u1ea7n gi\u1ea3 l\u1eadp\n        Assert.assertEquals(2, list.size());\n\n        // V\u1eabn c\u00f3 th\u1ec3 l\u00e0m gi\u1ea3 th\u00f4ng tin g\u1ecdi h\u00e0m v\u1edbi @Spy\n        Mockito.when(list.size()).thenReturn(100);\n\n        Assert.assertEquals(100, list.size());\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#captor","title":"Captor","text":"<p><code>Captor</code>\u00a0c\u00f3 nhi\u1ec7m v\u1ee5 ghi l\u1ea1i c\u00e1c tham s\u1ed1 c\u1ee7a \u0111\u1ed1i t\u01b0\u1ee3ng</p> <pre><code>@RunWith(MockitoJUnitRunner.class)\npublic class CaptorTest {\n    @Mock\n    List&lt;Object&gt; list;\n\n    @Captor\n    ArgumentCaptor&lt;Object&gt; captor;\n\n    @Test\n    public void testCaptor1() {\n        list.add(1);\n        // Capture l\u1ea7n g\u1ecdi add v\u1eeba r\u1ed3i c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 g\u00ec\n        Mockito.verify(list).add(captor.capture());\n\n        System.out.println(captor.getAllValues());\n\n        Assert.assertEquals(1, captor.getValue());\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#inject-mock","title":"Inject Mock","text":"<p>Quay l\u1ea1i v\u1edbi v\u00ed d\u1ee5 \u0111\u1ea7u b\u00e0i vi\u1ebft:</p> <p>T\u00f4i c\u00f3 m\u1ed9t l\u1edbp\u00a0<code>Service</code>\u00a0ch\u1ee9a l\u1edbp\u00a0<code>DatabaseDriver</code>\u00a0nh\u01b0 sau:</p> <pre><code>public interface DatabaseDriver {\n    List&lt;Object&gt; get() throws SQLException;\n}\n\n@Data\n@AllArgsConstructor\npublic static class SuperService {\n    DatabaseDriver driver;\n\n    public List&lt;Object&gt; getObjects() throws SQLException {\n        System.out.println(\"LOG: Getting objects\");\n        List&lt;Object&gt; list = driver.get();\n\n        System.out.println(\"LOG: Sorting\");\n        Collections.sort(list, Comparator.comparingInt(value -&gt; Integer.valueOf(value.toString())));\n\n        System.out.println(\"LOG: Done\");\n        return list;\n    }\n}\n</code></pre> <p>R\u00f5 r\u00e0ng th\u00ec\u00a0<code>driver</code>\u00a0ch\u00ednh l\u00e0 m\u1eaft x\u00edch trong trong vi\u1ec7c\u00a0<code>SuperService</code>\u00a0c\u00f3 ho\u1ea1t \u0111\u1ed9ng \u0111\u01b0\u1ee3c hay kh\u00f4ng. V\u00ec th\u1ebf, mu\u1ed1n test \u0111\u01b0\u1ee3c\u00a0<code>SuperService</code>, ch\u00fang ta ph\u1ea3i mock \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>driver</code>.</p> <p>k\u1ecbch b\u1ea3n b\u00e2y gi\u1edd s\u1ebd l\u00e0 t\u00f4i mock m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng c\u1ee7a\u00a0<code>DatabaseDriver</code>\u00a0r\u1ed3i truy\u1ec1n n\u00f3 v\u00e0o \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>SuperService</code>.</p> <p>\u0110\u1ec3 truy\u1ec1n m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng mock v\u00e0o m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c, ch\u00fang ta d\u00f9ng\u00a0<code>@InjectMocks</code>.</p> <pre><code>@RunWith(MockitoJUnitRunner.class)\npublic class InjectMockTest {\n    @Mock\n    DatabaseDriver driver;\n\n    /**\n     * Inject driver v\u00e0o superService.\n     * M\u1ecdi ng\u01b0\u1eddi c\u00f3 th\u1ec3 li\u00ean t\u01b0\u1edfng n\u00f3 gi\u1ed1ng v\u1edbi Spring Injection\n     */\n    @InjectMocks\n    SuperService superService;\n\n    @Test(expected = SQLException.class)\n    public void testInjectMock() throws SQLException {\n        // Gi\u1ea3 l\u1eadp cho driver lu\u00f4n tr\u1ea3 v\u1ec1 list (3,2,1) khi \u0111\u01b0\u1ee3c g\u1ecdi t\u1edbi\n        Mockito.doReturn(Arrays.asList(3, 2, 1)).when(driver).get();\n\n        Assert.assertEquals(driver, superService.getDriver());\n\n        // Test xem superService tr\u1ea3 ra ngo\u00e0i c\u00f3 \u0111\u00fang kh\u00f4ng?\n        Assert.assertEquals(Arrays.asList(1, 2, 3), superService.getObjects());\n\n        // Gi\u1ea3 l\u1eadp cho driver b\u1eafn exception\n        Mockito.when(driver.get()).thenThrow(SQLException.class);\n        superService.getObjects();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#ket_2","title":"K\u1ebft","text":"<p>T\u1edbi \u0111\u00e2y, b\u1ea1n \u0111\u00e3 c\u00f3 th\u1ec3 d\u00f9ng\u00a0<code>Mockito</code>\u00a0xo\u00e0nh xo\u1ea1ch r\u1ed3i.</p> <p>Ti\u1ebfp theo, c\u00f3 th\u1ec3 \u0111\u1ecdc c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>Mockito</code>\u00a0v\u1edbi\u00a0<code>Spring Boot</code>t\u1ea1i \u0111\u00e2y</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/#sb21-huong-dan-tao-bean-co-ieu-kien-voi-conditional","title":"[SB21] H\u01b0\u1edbng d\u1eabn t\u1ea1o Bean c\u00f3 \u0111i\u1ec1u ki\u1ec7n v\u1edbi @Conditional","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e1ch t\u1ea1o bean c\u00f3 \u0111i\u1ec1u ki\u1ec7n</li> <li>@ConditionalOnBean</li> <li>@ConditionalOnProperty</li> <li>@ConditionalOnExpression</li> <li>@ConditionalOnMissingBean</li> <li>@ConditionalOnResource</li> <li>@ConditionalOnClass</li> <li>@ConditionalOnMissingClass</li> <li>@ConditionalOnJava</li> <li>M\u1ed9t s\u1ed1 lo\u1ea1i kh\u00e1c</li> <li>Custom Conditional</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/spring-boot/#gioi-thieu_1","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Khi x\u00e2y d\u1ef1ng m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh v\u1edbi\u00a0Spring Boot\u00a0\u0111\u00f4i l\u00fac ch\u00fang ta m\u1ed9t\u00a0Bean\u00a0ch\u1ec9 \u0111\u01b0\u1ee3c load l\u00ean ho\u1eb7c kh\u1edfi t\u1ea1o theo m\u1ed9t \u0111i\u1ec1u ki\u1ec7n n\u00e0o \u0111\u00f3. V\u00ed d\u1ee5 nh\u01b0 t\u1ea1o m\u1ed9t\u00a0Bean\u00a0trong m\u00f4i tr\u01b0\u1eddng Test, c\u00f2n m\u00f4i tr\u01b0\u1eddng th\u1eadt s\u1ebd kh\u00f4ng c\u1ea7n n\u1eefa.</p> <p>Spring Boot\u00a0h\u1ed7 tr\u1ee3 ch\u00fang ta l\u00e0m \u0111i\u1ec1u n\u00e0y v\u1edbi Annotation\u00a0<code>@Conditional</code>.</p> <p>B\u00e0i n\u00e0y y\u00eau c\u1ea7u ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n:</p> <ol> <li>\u300cSpring Boot #0\u300d Series l\u00e0m ch\u1ee7 Spring Boot, Zero to Hero</li> </ol> <p>To\u00e0n b\u1ed9 v\u00ed d\u1ee5 trong b\u00e0i vi\u1ebft n\u00e0y\u00a0\u0111\u1ec1u c\u00f3 t\u1ea1i Github</p>"},{"location":"java/spring-boot/spring-boot/#cach-tao-bean-co-ieu-kien","title":"C\u00e1ch t\u1ea1o bean c\u00f3 \u0111i\u1ec1u ki\u1ec7n","text":"<p>Trong\u00a0Spring Boot, c\u00f3 r\u1ea5t nhi\u1ec1u c\u00e1ch \u0111\u1ec3 t\u1ea1o ra\u00a0<code>Bean</code>, b\u1ea1n bi\u1ebft c\u00e1ch n\u00e0o?</p> <p><code>@Component</code>,\u00a0<code>@Configuration</code>,\u00a0<code>@Bean</code>,\u00a0<code>@Service</code>, v.v...</p> <p>V\u1edbi t\u1ea5t c\u1ea3 c\u00e1c c\u00e1ch t\u1ea1o ra\u00a0<code>Bean</code>, b\u1ea1n \u0111\u1ec1u c\u00f3 th\u1ec3 th\u00eam\u00a0m\u1ed9t ho\u1eb7c nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n\u00a0\u0111\u1ec3 cho vi\u1ec7c t\u1ea1o ra\u00a0<code>Bean</code>\u00a0\u0111\u00f3 ch\u1ec9 x\u1ea3y ra n\u1ebfu n\u00f3 th\u1ecfa m\u00e3n m\u1ed9t \u0111i\u1ec1u ki\u1ec7n cho tr\u01b0\u1edbc.</p> <p>SpringBoot\u00a0h\u1ed7 tr\u1ee3 r\u1ea5t nhi\u1ec1u lo\u1ea1i \u0111i\u1ec1u ki\u1ec7n kh\u00e1c nhau, t\u1ea5t c\u1ea3 \u0111\u1ec1u s\u1ebd b\u1eaft \u0111\u1ea7u b\u1eb1ng ti\u1ec1n t\u1ed1\u00a0<code>@Conditional...</code>. C\u00f2n h\u1eadu t\u1ed1 th\u00ec ch\u00fang ta s\u1ebd \u0111\u1ec1 c\u1eadp sau.</p> <p>C\u00e1ch th\u1ee9c ho\u1ea1t \u0111\u1ed9ng c\u1ee7a t\u1ea5t c\u1ea3\u00a0<code>@Condition</code>\u00a0nh\u01b0 sau:</p> <pre><code>@Configuration\npublic class ConditionalOnBeanExample {\n    /*\n    ABeanWithCondition ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra khi @Condition th\u1ecfa m\u00e3n\n    */\n    @Bean\n    @Conditional...\n    ABeanWithCondition aBeanWithACondition() {\n        return new ABeanWithCondition();\n    }\n}\n</code></pre> <p>N\u1ebfu b\u1ea1n g\u1eafn n\u00f3 tr\u00ean m\u1ed9t\u00a0<code>@Configuration</code>\u00a0th\u00ec to\u00e0n b\u1ed9 c\u00e1c\u00a0<code>@Bean</code>\u00a0b\u00ean trong s\u1ebd b\u1ecb ch\u1ecbu t\u00e1c \u0111\u1ed9ng.</p> <pre><code>@Conditional...\n@Configuration\npublic class ConditionalOnBeanExample {\n    /*\n    SomeOtherBean ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra khi @Condition th\u1ecfa m\u00e3n\n    */\n    @Bean\n    SomeOtherBean someOtherBean() {\n        return new SomeOtherBean();\n    }\n       /*\n    SomeOtherBean2 ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra khi @Condition th\u1ecfa m\u00e3n\n    */\n    @Bean\n    SomeOtherBean2 someOtherBean2() {\n        return new SomeOtherBean2();\n    }\n}\n</code></pre> <p>T\u01b0\u01a1ng t\u1ef1 cho t\u1ea5t c\u1ea3 c\u00e1c annotation kh\u00e1c nh\u01b0\u00a0<code>@Component</code>,\u00a0<code>@Service</code>,\u00a0<code>@Repository</code></p> <pre><code>@Conditional...\n@Component\npublic class ConditionalOnBeanExample {\n}\n</code></pre> <p>B\u00e2y gi\u1edd ch\u00fang ta s\u1ebd \u0111i t\u00ecm hi\u1ec3u c\u00e1c lo\u1ea1i \u0111i\u1ec1u ki\u1ec7n trong\u00a0Spring Boot.</p>"},{"location":"java/spring-boot/spring-boot/#conditionalonbean","title":"@ConditionalOnBean","text":"<p><code>@ConditionalOnBean</code>\u00a0s\u1eed d\u1ee5ng khi ch\u00fang ta mu\u1ed1n t\u1ea1o ra m\u1ed9t Bean, ch\u1ec9 khi c\u00f3 m\u1ed9t Bean kh\u00e1c \u0111ang t\u1ed3n t\u1ea1i</p> <pre><code>@Configuration\npublic class ConditionalOnBeanExample {\n    /*\n    \u0110\u00e2y l\u00e0 m\u1ed9t Bean, b\u1ea1n h\u00e3y ch\u1ea1y \u1ee9ng d\u1ee5ng\n    khi comment v\u00e0 ch\u1ea1y l\u1ea1i l\u1ea7n n\u1eefa nh\u01b0ng b\u1ecf d\u1ea5u comment ph\u00eda\n    d\u01b0\u1edbi \u0111\u1ec3 xem k\u1ebft qu\u1ea3.\n     */\n    // @Bean\n    RandomBean randomBean() {\n        return new RandomBean();\n    }\n\n    /*\n    ABeanWithCondition ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra, khi RandomBean t\u1ed3n t\u1ea1i trong Context.\n     */\n    @Bean\n    @ConditionalOnBean(RandomBean.class)\n    ABeanWithCondition aBeanWithACondition() {\n        return new ABeanWithCondition();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#conditionalonproperty","title":"@ConditionalOnProperty","text":"<p>D\u00f9ng\u00a0<code>@ConditionalOnProperty</code>\u00a0khi b\u1ea1n mu\u1ed1n quy\u1ebft \u0111\u1ecbnh s\u1ef1 t\u1ed3n t\u1ea1i Bean th\u00f4ng qua c\u1ea5u h\u00ecnh property.</p> <pre><code>@Configuration\npublic class ConditionalOnPropertyExample {\n\n    /*\n    @ConditionalOnProperty gi\u00fap g\u1eafn \u0111i\u1ec1u ki\u1ec7n cho @Bean d\u1ef1a theo\n    property trong config\n     */\n    @Bean\n    @ConditionalOnProperty(\n            value=\"loda.bean2.enabled\",\n            havingValue = \"true\", // N\u1ebfu gi\u00e1 tr\u1ecb loda.bean2.enabled  = true th\u00ec Bean m\u1edbi \u0111\u01b0\u1ee3c kh\u1edfi t\u1ea1o\n            matchIfMissing = false) // matchIFMissing l\u00e0 gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh n\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y property loda.bean2.enabled\n    ABeanWithCondition2 aBeanWithCondition2(){\n        return new ABeanWithCondition2();\n    }\n}\n</code></pre> <p>application.properties</p> <pre><code>#Thay \u0111\u1ed5i th\u00e0nh true \u0111\u1ec3 t\u1ea1o bean2\nloda.bean2.enabled=true\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#conditionalonexpression","title":"@ConditionalOnExpression","text":"<p>Trong tr\u01b0\u1eddng h\u1ee3p b\u1ea1n mu\u1ed1n th\u1ecfa m\u00e3n nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n trong property, h\u00e3y s\u1eed d\u1ee5ng\u00a0<code>@ConditionalOnExpression</code></p> <pre><code>@Configuration\n@ConditionalOnExpression(\n        \"${loda.expression1.enabled:true} and ${loda.expression2.enabled:true}\"\n)\npublic class ConditionalOnExpressionExample {\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#conditionalonmissingbean","title":"@ConditionalOnMissingBean","text":"<p>N\u1ebfu trong\u00a0<code>Context</code>\u00a0ch\u01b0a t\u1ed3n t\u1ea1i b\u1ea5t k\u1ef3 Bean n\u00e0o t\u01b0\u01a1ng t\u1ef1, th\u00ec\u00a0<code>@ConditionalOnMissingBean</code>\u00a0s\u1ebd th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n v\u00e0 t\u1ea1o ra m\u1ed9t Bean nh\u01b0 th\u1ebf.</p> <pre><code>@Configuration\npublic class ConditionalOnMissingBeanExample {\n    /**\n     * N\u1ebfu trong Context ch\u01b0a t\u1ed3n t\u1ea1i m\u1ed9t SomeMissingBean n\u00e0o\n     * Th\u00ec Bean \u1edf d\u01b0\u1edbi \u0111\u00e2y m\u1edbi \u0111\u01b0\u1ee3c t\u1ea1o\n     * @return\n     */\n    @ConditionalOnMissingBean\n    DataSource someMissingBean(){\n        return new DataSource();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#conditionalonresource","title":"@ConditionalOnResource","text":"<p><code>@ConditionalOnResource</code>\u00a0th\u1ecfa m\u00e3n khi c\u00f3 m\u1ed9t resources n\u00e0o \u0111\u00f3 do b\u1ea1n ch\u1ec9 \u0111\u1ecbnh t\u1ed3n t\u1ea1i</p> <pre><code>/*\nN\u1ebfu Spring Boot kh\u00f4ng t\u00ecm th\u1ea5y file application.properties th\u00ec class n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c t\u1ea1o\n*/\n@Configuration\n@ConditionalOnResource(resources = \"/application.properties\")\npublic class ConditionalOnResourceExample {\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#conditionalonclass","title":"@ConditionalOnClass","text":"<p><code>@ConditionalOnClass</code>\u00a0th\u1ecfa m\u00e3n khi trong classpath c\u00f3 t\u1ed3n t\u1ea1i class m\u00e0 b\u1ea1n y\u00eau c\u1ea7u</p> <pre><code>@Configuration\n@ConditionalOnClass(name = \"loda.me.spring.LodaHandsome\")\nclass ConditionalOnClassExample {\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#conditionalonmissingclass","title":"@ConditionalOnMissingClass","text":"<p><code>@ConditionalOnMissingClass</code>\u00a0ng\u01b0\u1ee3c l\u1ea1i v\u1edbi\u00a0<code>@ConditionalOnClass</code>. th\u1ecfa m\u00e3n khi trong classpath\u00a0kh\u00f4ng\u00a0t\u1ed3n t\u1ea1i class m\u00e0 b\u1ea1n y\u00eau c\u1ea7u</p> <pre><code>@Configuration\n@ConditionalOnMissingClass(name = \"loda.me.spring.LodaHandsome\")\nclass ConditionalOnMissingClassExample {\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#conditionalonjava","title":"@ConditionalOnJava","text":"<p><code>@ConditionalOnJava</code>\u00a0th\u1ecfa m\u00e3n n\u1ebfu m\u00f4i tr\u01b0\u1eddng ch\u1ea1y version Java \u0111\u00fang v\u1edbi \u0111i\u1ec1u ki\u1ec7n</p> <pre><code>@Configuration\n@ConditionalOnJava(JavaVersion.EIGHT)\nclass ConditionalOnJavaExample {\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#mot-so-loai-khac","title":"M\u1ed9t s\u1ed1 lo\u1ea1i kh\u00e1c","text":"<p>V\u1eabn c\u00f2n c\u00e1c b\u1ea1n \u1ea1, nh\u1eefng m\u00ecnh th\u1ea5y n\u00f3 \u00edt khi \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng, n\u00ean s\u1ebd kh\u00f4ng \u0111\u1ec1 c\u1eadp, tr\u00e1nh lo\u1ea1n th\u00f4ng tin.</p>"},{"location":"java/spring-boot/spring-boot/#custom-conditional","title":"Custom Conditional","text":"<p>T\u1ea5t nhi\u00ean l\u00e0 b\u1ea1n ho\u00e0n to\u00e0n c\u00f3 th\u1ec3 t\u1ef1 t\u1ea1o ra cho m\u00ecnh m\u1ed9t \u0111i\u1ec1u ki\u1ec7n. M\u00ecnh s\u1ebd \u0111\u1ec1 c\u1eadp c\u00e1ch l\u00e0m \u1edf b\u00e0i sau.</p>"},{"location":"java/spring-boot/spring-boot/#ket_3","title":"K\u1ebft","text":"<p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/#sb22-huong-dan-tu-tao-custom-conditional","title":"[SB22] H\u01b0\u1edbng d\u1eabn t\u1ef1 t\u1ea1o custom @Conditional","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>T\u1ef1 t\u1ea1o @Conditional</li> <li>T\u1ef1 t\u1ea1o Annotation @Conditional</li> <li>Ch\u1ea1y th\u1eed</li> <li>K\u1ebft h\u1ee3p nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n v\u1edbi OR</li> <li>K\u1ebft h\u1ee3p nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n v\u1edbi AND</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/spring-boot/#gioi-thieu_2","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Y\u00eau c\u1ea7u b\u1ea1n ph\u1ea3i \u0111\u1ecdc b\u00e0i vi\u1ebft v\u1ec1\u00a0<code>@Conditional</code>\u00a0tr\u01b0\u1edbc:</p> <ol> <li>[Spring Boot] H\u01b0\u1edbng d\u1eabn t\u1ea1o Bean c\u00f3 \u0111i\u1ec1u ki\u1ec7n v\u1edbi @Conditional</li> </ol> <p>T\u00f4i \u0111\u00e3 gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c b\u1ea1n c\u00e1c s\u1eed d\u1ee5ng c\u00e1c lo\u1ea1i\u00a0<code>@Conditional</code>\u00a0c\u00f3 s\u1eb5n trong Spring Boot. Tuy nhi\u00ean, tr\u00ean th\u1ef1c t\u1ebf, s\u1ebd c\u00f3 nh\u1eefng l\u00fac y\u00eau c\u1ea7u c\u00e1c lo\u1ea1i \u0111i\u1ec1u ki\u1ec7n n\u1eb1m ngo\u00e0i ph\u1ea1m vi c\u1ee7a Spring Boot cung c\u1ea5p.</p> <p>Khi \u0111\u00f3, ch\u00fang ta ph\u1ea3i t\u1ef1 t\u1ea1o\u00a0<code>@Condinal</code>\u00a0cho m\u00ecnh.</p>"},{"location":"java/spring-boot/spring-boot/#tu-tao-conditional","title":"T\u1ef1 t\u1ea1o @Conditional","text":"<p>\u0110\u1ec3 t\u1ea1o ra m\u1ed9t \u0111i\u1ec1u ki\u1ec7n cho m\u00ecnh, b\u1ea1n c\u1ea7n k\u1ebf th\u1eeba l\u1edbp\u00a0<code>Condition</code>, v\u00e0 implement l\u1ea1i function\u00a0<code>matches</code></p> <p><code>matches</code>\u00a0l\u00e0 n\u01a1i b\u1ea1n ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n xem c\u00f3 tho\u1ea3 m\u00e3n kh\u00f4ng.</p> <pre><code>/*\nM\u1ed9t \u0111i\u1ec1u ki\u1ec7n, ph\u1ea3i k\u1ebf th\u1eeba l\u1edbp Condition c\u1ee7a Spring Boot cung c\u1ea5p\n */\npublic class WindowRequired implements Condition{\n\n    @Override\n    public boolean matches(ConditionContext conditionContext, AnnotatedTypeMetadata annotatedTypeMetadata) {\n        // N\u1ebfu OS ra window tr\u1ea3 ra true.\n        return System.getProperty(\"os.name\").toLowerCase().contains(\"win\");\n    }\n}\n</code></pre> <p>V\u00e0 khi \u0111\u00e3 \u0111\u1ecbnh ngh\u0129a \u0111\u01b0\u1ee3c cho m\u00ecnh m\u1ed9t \u0111i\u1ec1u ki\u1ec7n ri\u00eang, b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng nh\u01b0 sau:</p> <pre><code>@Configuration\npublic class AppConfiguration {\n    public static class SomeBean{\n    }\n\n    /*\n    SomeBean ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra khi\n    th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n\n     */\n    @Conditional(WindowRequired.class)\n    @Bean\n    SomeBean someBean(){\n        return new SomeBean();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#tu-tao-annotation-conditional","title":"T\u1ef1 t\u1ea1o Annotation @Conditional","text":"<p>N\u1ebfu vi\u1ec7c vi\u1ebft\u00a0<code>@Conditional(WindowRequired.class)</code>\u00a0ch\u01b0a l\u00e0m b\u1ea1n h\u00e0i l\u00f2ng, b\u1ea1n c\u00f3 th\u1ec3 t\u1ef1 t\u1ea1o ra m\u1ed9t\u00a0<code>Annotation</code>\u00a0gi\u1ed1ng v\u1edbi Spring Boot.</p> <p>V\u00ed d\u1ee5 nh\u01b0\u00a0<code>@ConditionalOnClass</code>\u00a0trong\u00a0b\u00e0i vi\u1ebft tr\u01b0\u1edbc</p> <p>Th\u00ec h\u00e3y l\u00e0m nh\u01b0 sau:</p> <pre><code>@Target({ ElementType.TYPE, ElementType.METHOD })\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n// \u0110\u00e1nh d\u1ea5u annotation n\u00e0y b\u1edfi @Conditional(WindowRequired.class)\n@Conditional(WindowRequired.class)\npublic @interface ConditionalOnWindow {\n    /*\n    Trong tr\u01b0\u1eddng h\u1ee3p b\u1ea1n mu\u1ed1n vi\u1ebft ng\u1eafn g\u1ecdn,\n    hay t\u1ea1o ra 1 Annotation m\u1edbi v\u00e0 g\u1eafn @Conditional(WindowRequired.class)\n    tr\u00ean n\u00f3\n\n    Nh\u01b0 v\u1eady khi c\u1ea7n s\u1eed d\u1ee5ng ch\u1ec9 c\u1ea7n g\u1ecdi @ConditionalOnWindow l\u00e0 \u0111\u01b0\u1ee3c\n     */\n}\n</code></pre> <p>Khi s\u1eed d\u1ee5ng:</p> <pre><code>@Configuration\npublic class AppConfiguration {\n    public static class SomeBean{\n    }\n\n    /*\n    SomeBean ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra khi\n    th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n\n     */\n    @ConditionalOnWindow\n    @Bean\n    SomeBean someBean(){\n        return new SomeBean();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#chay-thu_1","title":"Ch\u1ea1y th\u1eed","text":"<pre><code>@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        ApplicationContext context = SpringApplication.run(App.class, args);\n        try {\n            SomeBean someBean = context.getBean(SomeBean.class);\n            System.out.println(\"SomeBean t\u1ed3n t\u1ea1i!\");\n        }catch (Exception e){\n            System.out.println(\"SomeBean ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o n\u1ebfu ch\u1ea1y tr\u00ean Window\");\n        }\n\n    }\n}\n</code></pre> <p>H\u00e3y b\u1ecf Annotation\u00a0<code>@ConditionalOnWindow</code>\u00a0\u0111i v\u00e0 ch\u1ea1y th\u1eed, sau \u0111\u00f3 th\u00eam l\u1ea1i, xem k\u1ebft qu\u1ea3 c\u1ee7a 2 l\u1ea7n ch\u1ea1y.</p>"},{"location":"java/spring-boot/spring-boot/#ket-hop-nhieu-ieu-kien-voi-or","title":"K\u1ebft h\u1ee3p nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n v\u1edbi OR","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n v\u1edbi nhau b\u1edfi ph\u00e9p OR.</p> <p>Spring Boot h\u1ed7 tr\u1ee3 \u0111i\u1ec1u n\u00e0y b\u1eb1ng c\u00e1ch k\u1ebf th\u1eeba l\u1edbp\u00a0<code>AnyNestedCondition</code></p> <pre><code>/**\n * Class k\u1ebf th\u1eeba AnyNestedCondition s\u1ebd ch\u1ea5p nh\u1eadn m\u1ecdi\n * \u0111i\u1ec1u ki\u1ec7n @Conditional b\u00ean trong n\u00f3\n */\npublic class WindowOrMacRequired extends AnyNestedCondition{\n\n    public WindowOrMacRequired(){\n        super(ConfigurationPhase.REGISTER_BEAN);\n    }\n\n    /*\n    B\u1ea1n ph\u1ea3i \u0111\u1ecbnh ngh\u0129a c\u00e1c \u0110i\u1ec1u ki\u1ec7n b\u00ean trong class\n    k\u1ebf th\u1eeba AnyNestedCondition\n     */\n    @Conditional(WindowRequired.class)\n    public class RunOnWindow{}\n\n    /*\n    L\u00fac n\u00e0y, c\u1ea3 2 \u0111i\u1ec1u ki\u1ec7n Window v\u00e0 Mac s\u1ebd \u0111\u01b0\u1ee3c k\u1ebft h\u1ee3p vs\n    nhau khi ki\u1ec3m tra, n\u1ebfu tho\u1ea3 m\u00e3n 1 trong 2 l\u00e0 \u0111c\n     */\n    @Conditional(MacRequired.class)\n    public class RunOnMac{}\n}\n</code></pre> <p>S\u1eed d\u1ee5ng</p> <pre><code>@Configuration\npublic class AppConfiguration {\n    public static class SomeBean{\n    }\n\n    /*\n    SomeBean ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o ra khi\n    th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n\n     */\n    @Conditional(WindowOrMacRequired.class)\n    @Bean\n    SomeBean someBean(){\n        return new SomeBean();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#ket-hop-nhieu-ieu-kien-voi-and","title":"K\u1ebft h\u1ee3p nhi\u1ec1u \u0111i\u1ec1u ki\u1ec7n v\u1edbi AND","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 k\u1ebft h\u1ee3p c\u00e1c \u0111i\u1ec1u ki\u1ec7n b\u1eb1ng ph\u00e9p AND b\u1eb1ng c\u00e1ch k\u1ebf th\u1eeba l\u1edbp\u00a0<code>AllNestedConditions</code>.</p> <p>C\u00e1ch k\u1ebf th\u1eeba c\u1ee7a n\u00f3 gi\u1ed1ng v\u1edbi\u00a0<code>AnyNestedCondition</code>\u00a0n\u00ean t\u00f4i s\u1ebd kh\u00f4ng c\u1ea7n \u0111\u1ec1 c\u1eadp th\u00eam.</p> <p>Ngo\u00e0i ra, c\u00f3 m\u1ed9t c\u00e1ch kh\u00e1c l\u00e0 s\u1eed d\u1ee5ng nhi\u1ec1u custom\u00a0<code>@Conditional</code>\u00a0c\u00f9ng m\u1ed9t l\u00fac.</p> <pre><code>@Bean\n@ConditionalOnWindow\n@Conditional(MacRequired.class)\nSomeBean someBean() {\n  return new SomeBean();\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#ket_4","title":"K\u1ebft","text":"<p>T\u1edbi \u0111\u00e2y, b\u1ea1n c\u00f3 th\u1ec3 n\u1eafm v\u1eefng \u0111\u01b0\u1ee3c c\u00e1ch t\u1ea1o \u0111i\u1ec1u ki\u1ec7n cho c\u1ea5u h\u00ecnh \u1ee9ng d\u1ee5ng c\u1ee7a m\u00ecnh, n\u00f3 s\u1ebd r\u1ea5t c\u00f3 \u00edch khi b\u1ea1n l\u00e0m vi\u1ec7c v\u00e0 t\u00e1ch bi\u1ec7t \u0111\u01b0\u1ee3c hai m\u00f4i tr\u01b0\u1eddng dev v\u00e0 production.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/#sb23-xu-ly-su-kien-voi-eventlistener-async","title":"[SB23] X\u1eed l\u00fd s\u1ef1 ki\u1ec7n v\u1edbi @EventListener + @Async","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u01a1 b\u1ea3n v\u1ec1 Event &amp; Listener</li> <li>\u00c1p v\u00e0o th\u1ef1c t\u1ebf</li> <li>Event</li> <li>Event Publisher</li> <li>Event Listener</li> <li>Ch\u1ea1y th\u1eed 1</li> <li>@Async</li> <li>@Async</li> <li>Ch\u1ea1y th\u1eed l\u1ea7n 2</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/spring-boot/#gioi-thieu_3","title":"Gi\u1edbi thi\u1ec7u","text":"<p>H\u1eb3n trong\u00a0Java\u00a0kh\u00f4ng \u00edt th\u00ec nhi\u1ec1u c\u00e1c b\u1ea1n \u0111\u00e3 t\u1eebng s\u1eed d\u1ee5ng qua\u00a0<code>Listener Pattern</code>\u00a0r\u1ed3i, n\u00ean t\u00f4i ngh\u0129 s\u1ebd kh\u00f4ng gi\u1edbi thi\u1ec7u v\u1ec1 n\u00f3 n\u1eefa.</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y, ch\u00fang ta t\u1eadp trung v\u00e0o c\u00e1ch l\u00e0m sao \u0111\u1ec3 th\u1ef1c hi\u1ec7n vi\u1ec7c t\u1ea1o ra\u00a0<code>Event</code>\u00a0v\u00e0 x\u1eed l\u00fd\u00a0<code>Event</code>\u00a0\u0111\u00f3 m\u1ed9t c\u00e1ch g\u1ecdn g\u00e0ng v\u1edbi\u00a0Spring Boot.</p> <p>B\u00e0i n\u00e0y y\u00eau c\u1ea7u ki\u1ebfn th\u1ee9c c\u01a1 b\u1ea3n:</p> <ol> <li>\u300cSpring Boot #0\u300d Series l\u00e0m ch\u1ee7 Spring Boot, Zero to Hero</li> </ol>"},{"location":"java/spring-boot/spring-boot/#co-ban-ve-event-listener","title":"C\u01a1 b\u1ea3n v\u1ec1 Event &amp; Listener","text":"<p>!image</p> <p>C\u01a1 b\u1ea3n l\u00e0 khi ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n \u0111ang v\u1eadn h\u00e0nh, v\u00e0 c\u00f3 m\u1ed9t c\u00f4ng vi\u1ec7c g\u00ec \u0111\u00f3, b\u1ea1n kh\u00f4ng mu\u1ed1n x\u1eed l\u00fd tr\u1ef1c ti\u1ebfp t\u1ea1i Class hi\u1ec7n h\u00e0nh ho\u1eb7c mu\u1ed1n th\u00f4ng b\u00e1o cho c\u00e1c \u0110\u1ed1i t\u01b0\u1ee3ng kh\u00e1c bi\u1ebft b\u1ea1n v\u1eeba l\u00e0m g\u00ec.</p> <p>Th\u00ec b\u1ea1n s\u1ebd b\u1eafn ra m\u1ed9t object g\u1ecdi l\u00e0\u00a0<code>Event</code>\u00a0(s\u1ef1 ki\u1ec7n), c\u00f3 ho\u1eb7c kh\u00f4ng th\u00f4ng tin \u0111i k\u00e8m, v\u00e0 nhi\u1ec7m v\u1ee5 c\u1ee7a c\u00e1c th\u1eb1ng kh\u00e1c l\u00e0 \u0111\u00f3n l\u1ea5y hay l\u1eafng nghe s\u1ef1 ki\u1ec7n \u0111\u00f3 \u0111\u1ec3 x\u1eed l\u00fd nghi\u1ec7p v\u1ee5 c\u1ee7a ri\u00eang n\u00f3, th\u1eb1ng x\u1eed l\u00fd g\u1ecdi l\u00e0\u00a0<code>Listener</code>.</p> <p>Th\u1eb1ng g\u00e2y ra s\u1ef1 ki\u1ec7n g\u1ecdi l\u00e0\u00a0<code>Source</code>.</p> <p>C\u00f2n th\u1eb1ng c\u1ea7m s\u1ef1 ki\u1ec7n \u0111\u00f3 n\u00e9m cho\u00a0<code>Listener</code>\u00a0g\u1ecdi l\u00e0\u00a0<code>Pushlisher</code></p>"},{"location":"java/spring-boot/spring-boot/#ap-vao-thuc-te","title":"\u00c1p v\u00e0o th\u1ef1c t\u1ebf","text":"<p>Gi\u1ea3 s\u1eed b\u1ea1n c\u00f3 m\u1ed9t c\u00e1i chu\u00f4ng c\u1eeda, khi c\u00f3 ng\u01b0\u1eddi t\u1edbi b\u1ea5m c\u00e1i chu\u00f4ng n\u00e0y. Chu\u00f4ng s\u1ebd ph\u00e1t ra ti\u1ebfng k\u00eau.</p> <p>\u1ede trong nh\u00e0 c\u00f3 ch\u00f3, n\u00f3 nghe th\u1ea5y ti\u1ebfng k\u00eau, n\u00f3 s\u1ebd s\u1ee7a l\u00ean.</p> <p>Th\u00ec:</p> <ul> <li><code>Source</code>: Ng\u01b0\u1eddi b\u1ea5m chu\u00f4ng c\u1eeda, l\u00e0 ng\u01b0\u1eddi g\u00e2y ra s\u1ef1 ki\u1ec7n.</li> <li><code>Event</code>: s\u1ef1 ki\u1ec7n b\u1ea5m chu\u00f4ng c\u1eeda</li> <li><code>Pushlisher</code>: C\u00e1i chu\u00f4ng ph\u00e1t ra \u00e2m thanh (s\u1ef1 ki\u1ec7n) \u0111\u1ec3 th\u00f4ng b\u00e1o.</li> <li><code>Listener</code>: Con ch\u00f3 l\u1eafng nghe v\u00e0 x\u1eed l\u00fd s\u1ef1 ki\u1ec7n</li> </ul>"},{"location":"java/spring-boot/spring-boot/#event","title":"Event","text":"<p>M\u1ed9t\u00a0<code>Event</code>\u00a0(s\u1ef1 ki\u1ec7n) mu\u1ed1n \u0111\u01b0\u1ee3c\u00a0Spring Boot\u00a0h\u1ed7 tr\u1ee3 th\u00ec s\u1ebd ph\u1ea3i k\u1ebf th\u1eeba l\u1edbp\u00a0<code>ApplicationEvent</code>.</p> <pre><code>/*\nDoorBellEvent ph\u1ea3i k\u1ebf th\u1eeba l\u1edbp ApplicationEvent c\u1ee7a Spring\nNh\u01b0 v\u1eady n\u00f3 m\u1edbi \u0111\u01b0\u1ee3c coi l\u00e0 m\u1ed9t s\u1ef1 ki\u1ec7n h\u1ee3p l\u1ec7.\n */\npublic class DoorBellEvent extends ApplicationEvent {\n    /*\n        M\u1ecdi Class k\u1ebf th\u1eeba ApplicationEvent s\u1ebd\n        ph\u1ea3i g\u1ecdi Constructor t\u1edbi l\u1edbp cha.\n     */\n    public DoorBellEvent(Object source, String guestName) {\n        // Object source l\u00e0 object tham chi\u1ebfu t\u1edbi\n        // n\u01a1i \u0111\u00e3 ph\u00e1t ra event n\u00e0y!\n        super(source);\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#event-publisher","title":"Event Publisher","text":"<p>Trong\u00a0Spring Boot, \u0111\u1ec3 b\u1eafn ra m\u1ed9t s\u1ef1 ki\u1ec7n ch\u00fang ta s\u1eed d\u1ee5ng \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>ApplicationEventPublisher</code>. \u0110\u00e2y l\u00e0 m\u1ed9t\u00a0<code>Bean</code>\u00a0c\u00f3 s\u1eb5n trong\u00a0<code>Context</code>\u00a0do Spring cung c\u1ea5p, b\u1ea1n ch\u1ec9 c\u1ea7n l\u00f4i ra s\u1eed d\u1ee5ng th\u00f4i.</p> <pre><code>@Component\npublic class MyHouse {\n    @Autowired\n    ApplicationEventPublisher applicationEventPublisher;\n\n    /**\n     * H\u00e0nh \u0111\u1ed9ng b\u1ea5m chu\u00f4ng c\u1eeda\n     */\n    public void rangDoorbellBy(String guestName) {\n        // Ph\u00e1t ra m\u1ed9t s\u1ef1 ki\u1ec7n DoorBellEvent\n        // source (Ngu\u1ed3n ph\u00e1t ra) ch\u00ednh l\u00e0 class n\u00e0y\n        applicationEventPublisher.publishEvent(new DoorBellEvent(this, guestName));\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#event-listener","title":"Event Listener","text":"<p>\u0110\u1ec3 l\u1eafng nghe c\u00e1c s\u1ef1 ki\u1ec7n do\u00a0<code>ApplicationEventPublisher</code>\u00a0b\u1eafn ra, ch\u00fang ta s\u1eed d\u1ee5ng\u00a0<code>@EventListener</code></p> <pre><code>// T\u1ea1o ra Bean\n@Component\npublic class MyDog {\n\n    /*\n        @EventListener s\u1ebd l\u1eafng nghe m\u1ecdi s\u1ef1 ki\u1ec7n x\u1ea3y ra\n        N\u1ebfu c\u00f3 m\u1ed9t s\u1ef1 ki\u1ec7n DoorBellEvent \u0111\u01b0\u1ee3c b\u1eafn ra, n\u00f3 s\u1ebd \u0111\u00f3n l\u1ea5y\n        v\u00e0 \u0111\u01b0a v\u00e0o h\u00e0m \u0111\u1ec3 x\u1eed l\u00fd\n     */\n    @EventListener\n    public void doorBellEventListener(DoorBellEvent doorBellEvent) throws InterruptedException {\n        // Gi\u1ea3 s\u1eed con ch\u00f3 \u0111ang ng\u1ee7, 1 gi\u00e2y sau m\u1edbi d\u1eady\n        Thread.sleep(1000);\n        // S\u1ef1 ki\u1ec7n DoorBellEvent \u0111\u01b0\u1ee3c l\u1eafng nghe v\u00e0 x\u1eed l\u00fd t\u1ea1i \u0111\u00e2y\n        System.out.println(Thread.currentThread().getName() + \": Ch\u00f3 ng\u1ee7 d\u1eady!!!\");\n        System.out.println(String.format(\"%s: Go go!! C\u00f3 ng\u01b0\u1eddi t\u00ean l\u00e0 %s g\u00f5 c\u1eeda!!!\", Thread.currentThread().getName(), doorBellEvent.getGuestName()));\n    }\n}\n</code></pre> <p><code>@EventListener</code>\u00a0g\u1eafn tr\u00ean m\u1ed9t method, v\u1edbi tham s\u1ed1 \u0111\u1ea7u v\u00e0o ch\u00ednh l\u00e0 s\u1ef1 ki\u1ec7n m\u00e0 b\u1ea1n mu\u1ed1n l\u1eafng nghe.</p> <p>L\u01b0u \u00fd: Class ch\u1ecbu tr\u00e1ch nhi\u1ec7m x\u1eed l\u00fd, c\u00f3 ch\u1ee9a method\u00a0<code>@EventListener</code>\u00a0c\u0169ng ph\u1ea3i l\u00e0 Bean nh\u00e9.</p>"},{"location":"java/spring-boot/spring-boot/#chay-thu-1","title":"Ch\u1ea1y th\u1eed 1","text":"<pre><code>@SpringBootApplication\npublic class App {\n    @Autowired\n    MyHouse myHouse;\n\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n\n    @Bean\n    CommandLineRunner run() {\n        return args -&gt; {\n            System.out.println(Thread.currentThread().getName() + \": Loda \u0111i t\u1edbi c\u1eeda nh\u00e0 !!!\");\n            System.out.println(Thread.currentThread().getName() + \": =&gt; Loda b\u1ea5m chu\u00f4ng v\u00e0 khai b\u00e1o h\u1ecd t\u00ean!\");\n            // g\u00f5 c\u1eeda\n            myHouse.rangDoorbellBy(\"Loda\");\n            System.out.println(Thread.currentThread().getName() +\": Loda quay l\u01b0ng b\u1ecf \u0111i\");\n        };\n    }\n\n}\n</code></pre> <p>OUTPUT:</p> <pre><code>restartedMain: Loda \u0111i t\u1edbi c\u1eeda nh\u00e0 !!!\nrestartedMain: =&gt; Loda b\u1ea5m chu\u00f4ng v\u00e0 khai b\u00e1o h\u1ecd t\u00ean!\nrestartedMain: Ch\u00f3 ng\u1ee7 d\u1eady!!!\nrestartedMain: Go go!! C\u00f3 ng\u01b0\u1eddi t\u00ean l\u00e0 Loda g\u00f5 c\u1eeda!!!\nrestartedMain: Loda quay l\u01b0ng b\u1ecf \u0111i\n</code></pre> <p>B\u1ea1n s\u1ebd th\u1ea5y qu\u00e1 tr\u00ecnh x\u1eed l\u00fd \u1edf \u0111\u00e2y x\u1ea3y ra m\u1ed9t c\u00e1ch\u00a0tu\u1ea7n t\u1ef1\u00a0v\u00e0 \u0111\u1ed3ng b\u1ed9 (Synchronous).</p> <p>V\u1eady l\u00e0 ch\u00fang ta c\u00f3 th\u1ec3 hi\u1ec3u:</p> <p>n\u1ebfu kh\u00f4ng c\u1ea5u h\u00ecnh g\u00ec th\u00eam,\u00a0ApplicationEvent\u00a0v\u00e0\u00a0@EventListener\u00a0l\u00e0\u00a0Synchronous.</p> <p>Ch\u01b0\u01a1ng tr\u00ecnh s\u1ebd ph\u1ea3i ch\u1edd s\u1ef1 ki\u1ec7n x\u1eed l\u00fd xong th\u00ec m\u1edbi \u0111\u01b0\u1ee3c ch\u1ea1y ti\u1ebfp.</p>"},{"location":"java/spring-boot/spring-boot/#async","title":"@Async","text":"<p>\u0110a ph\u1ea7n, x\u1eed l\u00fd Synchronous kh\u00f4ng ph\u1ea3i \u0111i\u1ec1u m\u00e0 ch\u00fang ta mong \u0111\u1ee3i, ch\u00fang ta mu\u1ed1n vi\u1ec7c x\u1eed l\u00fd s\u1ef1 ki\u1ec7n c\u00f3 th\u1ec3 ho\u1ea1t \u0111\u1ed9ng ri\u00eang v\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng t\u1edbi lu\u1ed3ng l\u00e0m vi\u1ec7c ch\u00ednh.</p> <p>N\u00f3i c\u00e1ch kh\u00e1c, ch\u00fang ta mu\u1ed1n s\u1ef1 ki\u1ec7n \u0111\u01b0\u1ee3c x\u1eed l\u00fd \u1edf m\u1ed9t Thread kh\u00e1c, \u0111\u00e2y g\u1ecdi l\u00e0\u00a0b\u1ea5t \u0111\u1ed3ng b\u1ed9 (Asynchronous)</p> <p>\u0110\u1ec3 l\u00e0m \u0111\u01b0\u1ee3c \u0111i\u1ec1u n\u00e0y, ch\u00fang ta c\u1ea7n k\u00edch ho\u1ea1t ch\u1ee9c n\u0103ng x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 c\u1ee7a\u00a0Spring Boot, b\u1eb1ng c\u00e1ch b\u1ed5 sung annotation\u00a0<code>@EnableAsync</code>.</p> <pre><code>@Configuration\n@EnableAsync\npublic class ListenerConfiguration {\n    /**\n     * T\u1ea1o ra Executor cho Async\n     * @return\n     */\n    @Bean\n    TaskExecutor taskExecutor() {\n        return new SimpleAsyncTaskExecutor();\n    }\n}\n</code></pre> <p>Spring Boot\u00a0khi th\u1ea5y Annotation n\u00e0y, s\u1ebd k\u00edch ho\u1ea1t cho ph\u00e9p x\u1eed l\u00fd s\u1ef1 ki\u1ec7n d\u01b0\u1edbi d\u1ea1ng Async</p> <p>c\u00e1c\u00a0<code>Event</code>\u00a0s\u1ebd \u0111\u01b0\u1ee3c g\u1eedi v\u00e0o m\u1ed9t\u00a0<code>Executor</code>\u00a0(\u0111\u01a1n gi\u1ea3n nh\u1ea5t l\u00e0\u00a0<code>SimpleAsyncTaskExecutor</code>) v\u00e0 ch\u1edd \u0111\u01b0\u1ee3c x\u1eed l\u00fd.</p> <p>N\u1ebfu ch\u01b0a bi\u1ebft\u00a0<code>Executor</code>\u00a0l\u00e0 g\u00ec, b\u1ea1n c\u00f3 th\u1ec3 \u0111\u1ecdc 2 b\u00e0i vi\u1ebft sau:</p> <ol> <li>Kh\u00e1i ni\u1ec7m ThreadPool v\u00e0 Executor trong Java</li> <li>ThreadPoolExecutor v\u00e0 nguy\u00ean t\u1eafc qu\u1ea3n l\u00fd pool size</li> </ol>"},{"location":"java/spring-boot/spring-boot/#async_1","title":"@Async","text":"<p>Sau khi k\u00edch ho\u1ea1t t\u00ednh n\u0103ng\u00a0<code>Async</code>, b\u1ea5t k\u1ef3 s\u1ef1 ki\u1ec7n n\u00e0o b\u1ea1n mu\u1ed1n n\u00f3 x\u1eed l\u00fd Async th\u00ec h\u00e3y \u0111\u00e1nh d\u1ea5u n\u00f3 b\u1edfi\u00a0<code>@Async</code>.</p> <pre><code>@Component\npublic class MyDog {\n\n    /*\n        @EventListener s\u1ebd l\u1eafng nghe m\u1ecdi s\u1ef1 ki\u1ec7n x\u1ea3y ra\n        N\u1ebfu c\u00f3 m\u1ed9t s\u1ef1 ki\u1ec7n DoorBellEvent \u0111\u01b0\u1ee3c b\u1eafn ra, n\u00f3 s\u1ebd \u0111\u00f3n l\u1ea5y\n        v\u00e0 \u0111\u01b0a v\u00e0o h\u00e0m \u0111\u1ec3 x\u1eed l\u00fd\n     */\n    /*\n        @Async l\u00e0 c\u00e1ch l\u1eafng nghe s\u1ef1 ki\u1ec7n \u1edf m\u1ed9t Thread kh\u00e1c, kh\u00f4ng \u1ea3nh h\u01b0\u1edfng t\u1edbi\n        lu\u1ed3ng ch\u00ednh\n     */\n    @Async\n    @EventListener\n    public void doorBellEventListener(DoorBellEvent doorBellEvent) throws InterruptedException {\n        // Gi\u1ea3 s\u1eed con ch\u00f3 \u0111ang ng\u1ee7, 1 gi\u00e2y sau m\u1edbi d\u1eady\n        Thread.sleep(1000);\n        // S\u1ef1 ki\u1ec7n DoorBellEvent \u0111\u01b0\u1ee3c l\u1eafng nghe v\u00e0 x\u1eed l\u00fd t\u1ea1i \u0111\u00e2y\n        System.out.println(\"Ch\u00f3 ng\u1ee7 d\u1eady!!!\");\n        System.out.println(String.format(\"Go go!! C\u00f3 ng\u01b0\u1eddi t\u00ean l\u00e0 %s g\u00f5 c\u1eeda!!!\", doorBellEvent.getGuestName()));\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/spring-boot/#chay-thu-lan-2","title":"Ch\u1ea1y th\u1eed l\u1ea7n 2","text":"<p>OUTPUT:</p> <pre><code>restartedMain: Loda \u0111i t\u1edbi c\u1eeda nh\u00e0 !!!\nrestartedMain: =&gt; Loda b\u1ea5m chu\u00f4ng v\u00e0 khai b\u00e1o h\u1ecd t\u00ean!\nrestartedMain: Loda quay l\u01b0ng b\u1ecf \u0111i\nSimpleAsyncTaskExecutor-1: Ch\u00f3 ng\u1ee7 d\u1eady!!!\nSimpleAsyncTaskExecutor-1: Go go!! C\u00f3 ng\u01b0\u1eddi t\u00ean l\u00e0 Loda g\u00f5 c\u1eeda!!!\n</code></pre> <p>L\u1ea7n n\u00e0y qu\u00e1 tr\u00ecnh x\u1eed l\u00fd \u0111\u00e3 di\u1ec5n ra \u0111\u00fang nh\u01b0 ch\u00fang ta mong \u0111\u1ee3i, ng\u01b0\u1eddi b\u1ea5m c\u1ee9 b\u1ea5m, m\u00e0 ch\u00f3 k\u00eau c\u1ee9 k\u00eau, m\u1ed7i ng\u01b0\u1eddi m\u1ed9t vi\u1ec7c, ch\u1ea3 ai \u1ea3nh h\u01b0\u1edfng t\u1edbi ai, ch\u1ec9 c\u1ea7n bi\u1ebft c\u00f3 s\u1ef1 ki\u1ec7n x\u1ea3y ra th\u00ec ph\u1ea3n \u1ee9ng l\u00e0 \u0111\u01b0\u1ee3c.</p>"},{"location":"java/spring-boot/spring-boot/#ket_5","title":"K\u1ebft","text":"<p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/#sb24-restful-api-document-tao-voi-spring-boot-swagger","title":"[SB24] RESTful API Document T\u1ea1o v\u1edbi Spring Boot + Swagger","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>c\u00e0i \u0111\u1eb7t</li> <li>T\u1ed5ng quan Swagger</li> <li>Prepare</li> <li>Config Swagger</li> <li>G\u00f3c custom</li> </ul>"},{"location":"java/spring-boot/spring-boot/#gioi-thieu_4","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Spring Boot\u00a0h\u1ed7 tr\u1ee3 ch\u00fang ta t\u1ea1o ra RESTful API m\u1ed9t c\u00e1ch nhanh ch\u00f3ng v\u00e0 ti\u1ec7n l\u1ee3i, gi\u00fap s\u1ea3n ph\u1ea9m \u0111\u01b0\u1ee3c v\u1eadn h\u00e0nh nhanh nh\u1ea5t c\u00f3 th\u1ec3.</p> <p>Tuy nhi\u00ean, Vi\u1ec7c deploy nhanh ch\u00f3ng m\u1ed9t services kh\u00f4ng \u0111\u1ed3ng ngh\u0129a v\u1edbi vi\u1ec7c n\u00f3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c. Th\u00f4ng th\u01b0\u1eddng, t\u1ea5t c\u1ea3 c\u00e1c API sau khi \u0111\u01b0\u1ee3c \u0111\u01b0a l\u00ean s\u1ebd ph\u1ea3i \u0111i k\u00e8m v\u1edbi document m\u00f4 t\u1ea3, \u0111\u1ec3 b\u1ea5t k\u00ec ai s\u1eed d\u1ee5ng \u0111\u1ebfn th\u00ec c\u00f3 th\u1ec3 tra c\u1ee9u.</p> <p>Th\u1eadt kh\u00f4ng may l\u00e0 vi\u1ec7c l\u00e0m document ch\u01b0a bao gi\u1edd l\u00e0 d\u1ec5 d\u00e0ng c\u1ea3 :(( t\u1eeb l\u00ed do n\u00e0y,\u00a0<code>Swagger</code>\u00a0ra \u0111\u1eddi \u0111\u1ec3 gi\u00fap ch\u00fang ta m\u00f4 t\u1ea3 t\u00e0i li\u1ec7u d\u1ef1 \u00e1n m\u1ed9t c\u00e1ch nhanh ch\u00f3ng b\u1eb1ng annotation.</p> <p>Trong b\u00e0i c\u00f3 \u0111\u1ec1 c\u1eadp c\u00e1c ki\u1ebfn th\u1ee9c:</p> <ol> <li>Spring Boot</li> <li>jpa</li> <li>lombok</li> </ol>"},{"location":"java/spring-boot/spring-boot/#cai-at_3","title":"c\u00e0i \u0111\u1eb7t","text":"<p>Trong b\u00e0i n\u00e0y, t\u00f4i s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1c b\u1ea1n s\u1eed d\u1ee5ng\u00a0<code>Swagger2</code>\u00a0v\u00e0 tu\u00e2n theo c\u00e1c quy t\u1eafc c\u1ea3u\u00a0Swagger Specification 2.0\u00a0nh\u00e9.</p> <p>T\u1ea1i th\u1eddi \u0111i\u1ec3m vi\u1ebft b\u00e0i n\u00e0y, hi\u1ec7n phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t l\u00e0 3, tuy nhi\u00ean, n\u00f3 s\u1ebd l\u00e0\u00a0OpenAPI 3.0.</p> <p>pom.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;parent&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&lt;version&gt;2.0.5.RELEASE&lt;/version&gt;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;&lt;groupId&gt;me.loda.spring&lt;/groupId&gt;&lt;artifactId&gt;example-independent-maven-spring-project&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;name&gt;example-independent-maven-spring-project&lt;/name&gt;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&lt;properties&gt;&lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;\n\n        &lt;dependency&gt;&lt;groupId&gt;io.springfox&lt;/groupId&gt;&lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;&lt;version&gt;2.9.2&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;io.springfox&lt;/groupId&gt;&lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;&lt;version&gt;2.9.2&lt;/version&gt;&lt;/dependency&gt;&lt;!--spring jpa--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!--in memory database--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;com.h2database&lt;/groupId&gt;&lt;artifactId&gt;h2&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt;&lt;plugins&gt;&lt;plugin&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&lt;/plugin&gt;&lt;/plugins&gt;&lt;/build&gt;&lt;/project&gt;\n</code></pre> <p><code>springfox</code>\u00a0l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n java implementation c\u1ee7a Swagger Specification.</p> <p><code>springfox-swagger2</code>\u00a0ch\u1ee9a core c\u1ee7a swagger, gi\u00fap ch\u00fang ta khai b\u00e1o document cho api.</p> <p><code>springfox-swagger-ui</code>\u00a0gi\u00fap ch\u00fang ta bi\u1ec3u di\u1ec5n t\u00e0i li\u1ec7u d\u01b0\u1edbi d\u1ea1ng web view, d\u1ec5 nh\u00ecn v\u00e0 test.</p>"},{"location":"java/spring-boot/spring-boot/#tong-quan-swagger","title":"T\u1ed5ng quan Swagger","text":"<p>\u0110\u1ec3 s\u1eed d\u1ee5ng c\u01a1 b\u1ea3n th\u00ec\u00a0<code>Swagger</code>\u00a0cung c\u1ea5p m\u1ed9t s\u1ed1 c\u00e1c Annotations h\u1eefu \u00edch sau:</p> <p>Ch\u00fang ta \u0111i v\u00e0o th\u1ef1c h\u00e0nh th\u1eed nh\u00e9.</p> <p>\u0110\u1ea1i lo\u1ea1i sau khi l\u00e0m xong, ch\u00fang ta s\u1ebd c\u00f3 1 web view document nh\u01b0 th\u1ebf n\u00e0y:</p> <p>!image</p>"},{"location":"java/spring-boot/spring-boot/#prepare_1","title":"Prepare","text":"<p>T\u1ea1o ra class Model</p> <p>User.java</p> <pre><code>@Data\n@Entity\n@Table\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String firstName;\n    private String lastName;\n    private String email;\n}\n</code></pre> <p>UserRepository.java</p> <pre><code>@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n\n}\n</code></pre> <p>Khi \u0111\u00e3 c\u00f3 \u0111\u01b0\u1ee3c Model v\u00e0 Repository, ch\u00fang ta s\u1ebd t\u1ea1o Controller \u0111\u1ec3 thao t\u00e1c li\u00ean quan t\u1edbi\u00a0<code>User</code>\u00a0nh\u00e9.</p> <pre><code>@RestController\n@RequestMapping(\"/api/v1\")\n@RequiredArgsConstructor\npublic class UserController {\n    private final UserRepository userRepository;\n\n    @GetMapping(\"/users\")\n    public List&lt;User&gt; getAllUsers() {\n        return userRepository.findAll();\n    }\n\n    @GetMapping(\"/users/{id}\")\n    public User getUser(@PathVariable(\"id\") Long id) {\n        return userRepository.findById(id).orElse(new User());\n    }\n\n    @PostMapping(\"/users\")\n    public User createUser(@Valid @RequestBody User user) {\n        return userRepository.save(user);\n    }\n\n    @PutMapping(\"/users/{id}\")\n    public User updateUser(@PathVariable(\"id\") Long id, @Valid @RequestBody User user) {\n        user.setId(id);\n        return userRepository.save(user);\n    }\n\n    @DeleteMapping(\"/users/{id}\")\n    public void deleteUser(@PathVariable(\"id\") Long id) {\n        userRepository.deleteById(id);\n    }\n}\n</code></pre> <p>\u00c2u kh\u00ea, t\u1ea1m th\u1eddi nh\u01b0 th\u1ebf \u0111\u00e3 \ud83d\ude02</p> <p>B\u00e2y gi\u1edd v\u00e0o ph\u1ea7n ch\u00ednh, config\u00a0<code>Swagger</code>\u00a0cho d\u1ef1 \u00e1n c\u1ee7a ch\u00fang ta.</p>"},{"location":"java/spring-boot/spring-boot/#config-swagger","title":"Config Swagger","text":"<p>Th\u1eadt may m\u1eafn, tr\u01b0\u1edbc khi \u0111i v\u00e0o c\u00e1c custom ph\u1ee9c t\u1ea1p th\u00ec Swagger h\u1ed7 tr\u1ee3 ch\u00fang ta t\u1ef1 \u0111\u1ed9ng sinh ra t\u00e0i li\u1ec7u m\u1ed9t c\u00e1ch m\u1eb7c \u0111\u1ecbnh m\u00e0 ch\u01b0a c\u1ea7n ph\u1ea3i khai b\u00e1o b\u1ea5t k\u00ec annotation n\u00e0o \u0111\u00e3 gi\u1edbi thi\u1ec7u \u1edf tr\u00ean.</p> <p>Ch\u1ec9 c\u1ea7n t\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>Docket</code>\u00a0c\u1ee7a\u00a0<code>Swagger</code>\u00a0v\u00e0 n\u00f3 s\u1ebd qu\u00e9t h\u1ebft c\u00e1c \u0111\u1ecba ch\u1ec9 API m\u00e0 b\u1ea1n ch\u1ec9 \u0111\u1ecbnh, r\u1ed3i t\u1ef1 \u0111\u1ed9ng sinh ra t\u00e0i li\u1ec7u c\u01a1 b\u1ea3n cho ch\u00fang ta.</p> <pre><code>@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n    @Bean\n    public Docket api() {\n        return new Docket(DocumentationType.SWAGGER_2).select()\n                                                      .apis(RequestHandlerSelectors.basePackage(\"me.loda.spring.swagger.controller\"))\n                                                      .paths(PathSelectors.regex(\"/.*\"))\n                                                      .build()\n                                                      .apiInfo(apiEndPointsInfo());\n    }\n\n    private ApiInfo apiEndPointsInfo() {\n        return new ApiInfoBuilder().title(\"Spring Boot REST API\")\n                                   .description(\"Employee Management REST API\")\n                                   .contact(new Contact(\"loda\", \"https://loda.me/\", \"loda.namnh@gmail.com\"))\n                                   .license(\"Apache 2.0\")\n                                   .licenseUrl(\"http://www.apache.org/licenses/LICENSE-2.0.html\")\n                                   .version(\"1.0.0\")\n                                   .build();\n    }\n}\n</code></pre> <p>C\u00e1c th\u1ee9 c\u1ea7n l\u01b0u \u00fd bao g\u1ed3m:</p> <ol> <li>\u0110\u1ec3\u00a0<code>Swagger</code>\u00a0ho\u1ea1t \u0111\u1ed9ng, b\u1ea1n nh\u1edb k\u00edch ho\u1ea1t n\u00f3 b\u1eb1ng\u00a0<code>@EnableSwagger2</code>.</li> <li>B\u1ea1n c\u00f3 th\u1ec3 ch\u1ecdn n\u01a1i ch\u1ee9a c\u00e1c API b\u1eb1ng\u00a0<code>RequestHandlerSelectors</code>. N\u1ebfu mu\u1ed1n qu\u00e9t h\u1ebft c\u1ea3 project, c\u00f3 th\u1ec3 x\u00e0i\u00a0<code>RequestHandlerSelectors.any()</code></li> <li>B\u1ea1n c\u00f3 th\u1ec3 ch\u1ec9 \u0111\u1ecbnh b\u1ed9 l\u1ecdc cho c\u00e1c api b\u1eb1ng\u00a0<code>PathSelectors</code>. N\u1ebfu mu\u1ed1n qu\u00e9t t\u1ea5t c\u1ea3, ch\u1ecdn\u00a0<code>PathSelectors.any()</code>.</li> </ol> <pre><code>@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n</code></pre> <p>B\u00e2y gi\u1edd, ch\u1ea1y th\u1eed v\u00e0 v\u00e0o \u0111\u1ecba ch\u1ec9\u00a0<code>http://localhost:8080/swagger-ui.html</code>\u00a0\u0111\u1ec3 xem th\u00e0nh qu\u1ea3 nh\u00e9.</p>"},{"location":"java/spring-boot/spring-boot/#goc-custom","title":"G\u00f3c custom","text":"<p>B\u1ea1n c\u00f3 th\u1ec3 ch\u1ec9 \u0111\u1ecbnh r\u00f5 h\u01a1n c\u00e1c m\u00f4 t\u1ea3 c\u1ee7a t\u00e0i li\u1ec7u b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng c\u00e1c Annotation m\u00e0\u00a0<code>Swagger</code>\u00a0cung c\u1ea5p.</p> <p>User.java</p> <pre><code>@Data\n@Entity\n@Table\n@NoArgsConstructor\n@AllArgsConstructor\n@ApiModel(value = \"User model\")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @ApiModelProperty(notes = \"The database generated User ID\")\n    private Long id;\n\n    private String firstName;\n    private String lastName;\n    private String email;\n}\n</code></pre> <p>UserController.java</p> <pre><code>@RestController\n@RequestMapping(\"/api/v1\")\n@RequiredArgsConstructor\n@Api(value = \"User APIs\")\npublic class UserController {\n    private final UserRepository userRepository;\n\n    @ApiOperation(value = \"Xem danh s\u00e1ch User\", response = List.class)\n    @ApiResponses(value = {\n            @ApiResponse(code = 200, message = \"Th\u00e0nh c\u00f4ng\"),\n            @ApiResponse(code = 401, message = \"Ch\u01b0a x\u00e1c th\u1ef1c\"),\n            @ApiResponse(code = 403, message = \"Truy c\u1eadp b\u1ecb c\u1ea5m\"),\n            @ApiResponse(code = 404, message = \"Kh\u00f4ng t\u00ecm th\u1ea5y\")\n    })\n    @GetMapping(\"/users\")\n    public List&lt;User&gt; getAllUsers() {\n        return userRepository.findAll();\n    }\n\n    @GetMapping(\"/users/{id}\")\n    public User getUser(@PathVariable(\"id\") Long id) {\n        return userRepository.findById(id).orElse(new User());\n    }\n\n    @PostMapping(\"/users\")\n    public User createUser(\n            @ApiParam(value = \"\u0110\u1ed1i t\u01b0\u1ee3ng User c\u1ea7n t\u1ea1o m\u1edbi\", required = true) @Valid @RequestBody User user\n    ) {\n        return userRepository.save(user);\n    }\n\n    @PutMapping(\"/users/{id}\")\n    public User updateUser(@PathVariable(\"id\") Long id, @Valid @RequestBody User user) {\n        user.setId(id);\n        return userRepository.save(user);\n    }\n\n    @DeleteMapping(\"/users/{id}\")\n    public void deleteUser(@PathVariable(\"id\") Long id) {\n        userRepository.deleteById(id);\n    }\n}\n</code></pre> <p>T\u1edbi \u0111\u00e2y b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng Swagger tho\u1ea3i m\u00e1i r\u1ed3i, t\u00f4i s\u1ebd l\u00e0m m\u1ed9t b\u00e0i kh\u00e1c v\u1ec1\u00a0OpenAPI 3.0.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/spring-boot/#sb25-restful-api-document-voi-spring-boot-openapi-30","title":"[SB25] RESTful API Document v\u1edbi Spring Boot + OpenApi 3.0","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>c\u00e0i \u0111\u1eb7t</li> <li>T\u1ed5ng quan OpenApi 3.0</li> <li>Prepare</li> <li>Config OpenApi 3.0</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/spring-boot/#gioi-thieu_5","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft tr\u01b0\u1edbc:</p> <ol> <li>RESTful API Document T\u1ea1o v\u1edbi Spring Boot + Swagger</li> </ol> <p>T\u00f4i \u0111\u00e3 gi\u1edbi thi\u1ec7u l\u00ed do v\u00ec sao c\u1ea7n Document, v\u00e0 c\u00e1ch t\u1ea1o ra n\u00f3 nhanh ch\u00f3ng v\u1edbi\u00a0<code>Swagger 2</code>.</p> <p>Trong b\u00e0i n\u00e0y, t\u00f4i s\u1ebd gi\u1edbi thi\u1ec7u th\u00eam phi\u00ean b\u1ea3n ti\u1ebfp theo, m\u1ed9t ti\u00eau chu\u1ea9n m\u1edbi nh\u1ea5t v\u1ec1 RESTful document \u0111\u00f3 l\u00e0 OpenApi 3.0.</p> <p>T\u1ea1i sao k \u0111\u1eb7t t\u00ean l\u00e0\u00a0<code>Swagger 3</code>? c\u00e2u chuy\u1ec7n \u0111\u1eb1ng sau n\u00f3 l\u00e0 vi\u1ec7c SmartBear mua l\u1ea1i Swagger, v\u00e0 \u0111\u1ed5i t\u00ean Swagger Specification th\u00e0nh OpenApi Specification, b\u1eaft \u0111\u1ea7u t\u1ea1o ra c\u00e1c ti\u00eau chu\u1ea9n m\u1edbi cho x\u00e2y d\u1ef1ng Document, tuy nhi\u00ean v\u1eabn x\u00e2y d\u1ef1ng tr\u00ean Swagger core.</p> <p><code>OpenApi 3.0</code>\u00a0l\u00e0 b\u1ea3n m\u1edbi nh\u1ea5t \u0111\u01b0\u1ee3c ra m\u1eaft t\u1ea1i th\u1eddi \u0111i\u1ec3m vi\u1ebft b\u00e0i n\u00e0y.</p> <p>Trong b\u00e0i c\u00f3 \u0111\u1ec1 c\u1eadp c\u00e1c ki\u1ebfn th\u1ee9c:</p> <ol> <li>Spring Boot</li> <li>jpa</li> <li>lombok</li> </ol>"},{"location":"java/spring-boot/spring-boot/#cai-at_4","title":"c\u00e0i \u0111\u1eb7t","text":"<p>pom.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&lt;parent&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&lt;version&gt;2.0.5.RELEASE&lt;/version&gt;&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;&lt;groupId&gt;me.loda.spring&lt;/groupId&gt;&lt;artifactId&gt;example-independent-maven-spring-project&lt;/artifactId&gt;&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;&lt;name&gt;example-independent-maven-spring-project&lt;/name&gt;&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;&lt;properties&gt;&lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;dependencies&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;&lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt;&lt;!--https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-core --&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.springdoc&lt;/groupId&gt;&lt;artifactId&gt;springdoc-openapi-core&lt;/artifactId&gt;&lt;version&gt;1.1.49&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;&lt;groupId&gt;org.springdoc&lt;/groupId&gt;&lt;artifactId&gt;springdoc-openapi-ui&lt;/artifactId&gt;&lt;version&gt;1.1.49&lt;/version&gt;&lt;/dependency&gt;&lt;!--spring jpa--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!--in memory database--&gt;\n        &lt;dependency&gt;&lt;groupId&gt;com.h2database&lt;/groupId&gt;&lt;artifactId&gt;h2&lt;/artifactId&gt;&lt;scope&gt;runtime&lt;/scope&gt;&lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt;&lt;plugins&gt;&lt;plugin&gt;&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;&lt;/plugin&gt;&lt;/plugins&gt;&lt;/build&gt;&lt;/project&gt;\n</code></pre> <p><code>springdoc</code>\u00a0l\u00e0 m\u1ed9t th\u01b0 vi\u1ec7n java implementation c\u1ee7a OpenApi Specification 3.0.</p> <p><code>springdoc-openapi-core</code>\u00a0ch\u1ee9a core c\u1ee7a swagger, gi\u00fap ch\u00fang ta khai b\u00e1o document cho api.</p> <p><code>springdoc-openapi-ui</code>\u00a0gi\u00fap ch\u00fang ta bi\u1ec3u di\u1ec5n t\u00e0i li\u1ec7u d\u01b0\u1edbi d\u1ea1ng web view, d\u1ec5 nh\u00ecn v\u00e0 test.</p>"},{"location":"java/spring-boot/spring-boot/#tong-quan-openapi-30","title":"T\u1ed5ng quan OpenApi 3.0","text":"<p><code>OpenApi 3.0</code>\u00a0k\u1ebf th\u1eeba v\u00e0 \u0111\u1ed5i m\u1edbi kh\u00e1 nhi\u1ec1u c\u00e1c th\u00e0nh ph\u1ea7n c\u1ee7a\u00a0<code>Swagger2</code>, khi\u1ebfn n\u00f3 t\u01b0\u1eddng minh v\u00e0 d\u1ec5 \u0111\u1ecdc h\u01a1n.</p> <p>SWAGGER2OPENAPI 3.0DESCRIPTION@Api</p> <p>@Tag</p> <p>\u0110\u00e1nh d\u1ea5u 1 class l\u00e0 n\u01a1i ch\u1ee9a c\u00e1c API</p> <p>@ApiModel</p> <p>kh\u00f4ng c\u00f2n</p> <p>\u0110\u00e1nh d\u1ea5u 1 class l\u00e0 Swagger Model</p> <p>@ApiModelProperty</p> <p>@Schema</p> <p>B\u1ed5 sung c\u00e1c th\u00f4ng tin cho</p> <p>@ApiOperation</p> <p>@Operation</p> <p>M\u00f4 t\u1ea3 cho m\u1ed9t API v\u00e0 response c\u1ee7a n\u00f3</p> <p>@ApiParam</p> <p>@Parameter</p> <p>M\u00f4 t\u1ea3 c\u00e1c parameter</p> <p>@ApiResponse</p> <p>@ApiResponse</p> <p>M\u00f4 t\u1ea3 status code c\u1ee7a response</p> <p>@ApiResponses</p> <p>@ApiResponses</p> <p>M\u00f4 t\u1ea3 danh s\u00e1ch c\u00e1c status code c\u1ee7a response</p> <p>Ch\u00fang ta \u0111i v\u00e0o th\u1ef1c h\u00e0nh th\u1eed nh\u00e9.</p> <p>\u0110\u1ea1i lo\u1ea1i sau khi l\u00e0m xong, ch\u00fang ta s\u1ebd c\u00f3 1 web view document nh\u01b0 th\u1ebf n\u00e0y:</p> <p>!image</p> <p>Ngo\u00e0i \u0111\u1eb9p h\u01a1n, m\u00f4 t\u1ea3 chi ti\u1ebft v\u00e0 d\u1ec5 s\u1eed d\u1ee5ng h\u01a1n, th\u00ec c\u00f3 1 ph\u1ea7n r\u1ea5t hay, \u0111\u00f3 l\u00e0 ch\u00fang ta c\u00f3 th\u1ec3 ch\u1ecdn Server Url khi test API</p> <p>!image</p>"},{"location":"java/spring-boot/spring-boot/#prepare_2","title":"Prepare","text":"<p>T\u1ea1o ra class Model</p> <p>User.java</p> <pre><code>@Data\n@Entity\n@Table\n@NoArgsConstructor\n@AllArgsConstructor\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    @Schema(description = \"User UUID in  the database\")\n    @JsonProperty(\"id\")\n    private Long id;\n\n    private @NotBlank @Size(min = 0, max = 20) String firstName;\n    private String lastName;\n\n    private @NotBlank @Size(min = 0, max = 50) String email;\n}\n</code></pre> <p>UserRepository.java</p> <pre><code>@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n\n}\n</code></pre> <p>Khi \u0111\u00e3 c\u00f3 \u0111\u01b0\u1ee3c Model v\u00e0 Repository, ch\u00fang ta s\u1ebd t\u1ea1o Controller \u0111\u1ec3 thao t\u00e1c li\u00ean quan t\u1edbi\u00a0<code>User</code>\u00a0nh\u00e9.</p> <p>\u0110i\u1ec3m kh\u00e1c bi\u1ec7t l\u1edbn nh\u1ea5t c\u1ee7a\u00a0<code>OpenApi3</code>\u00a0so v\u1edbi\u00a0<code>Swagger2</code>\u00a0l\u00e0 h\u1ec7 th\u1ed1ng Annotation r\u1ea5t l\u00e0 d\u00e0y \u0111\u1eb7c, \u0111a ph\u1ea7n c\u00e1c gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n v\u00e0 \u0103n kh\u1edbp v\u1edbi nhau b\u1eb1ng Annotation v\u00e0 Class.</p> <pre><code>@RestController\n@RequestMapping(\"/api/v1\")\n@RequiredArgsConstructor\n@Tag(name = \"user\")\npublic class UserController {\n    private final UserRepository userRepository;\n\n    @Operation(description = \"Xem danh s\u00e1ch User\", responses = {\n            @ApiResponse(content = @Content(array = @ArraySchema(schema = @Schema(implementation = User.class))), responseCode = \"200\") })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode  = \"200\", description = \"Th\u00e0nh c\u00f4ng\"),\n            @ApiResponse(responseCode  = \"401\", description = \"Ch\u01b0a x\u00e1c th\u1ef1c\"),\n            @ApiResponse(responseCode  = \"403\", description = \"Truy c\u1eadp b\u1ecb c\u1ea5m\"),\n            @ApiResponse(responseCode  = \"404\", description = \"Kh\u00f4ng t\u00ecm th\u1ea5y\")\n    })\n    @GetMapping(\"/users\")\n    public List&lt;User&gt; getAllUsers() {\n        return userRepository.findAll();\n    }\n\n    @GetMapping(\"/users/{id}\")\n    public User getUser(@PathVariable(\"id\") Long id) {\n        return userRepository.findById(id).orElse(new User());\n    }\n\n    @PostMapping(\"/users\")\n    public User createUser(\n            @Valid\n            @Parameter(description = \"User model to create.\", required = true, schema = @Schema(implementation = User.class))\n            @RequestBody User user) {\n        return userRepository.save(user);\n    }\n\n    @PutMapping(\"/users/{id}\")\n    public User updateUser(@PathVariable(\"id\") Long id, @Valid @RequestBody User user) {\n        user.setId(id);\n        return userRepository.save(user);\n    }\n\n    @DeleteMapping(\"/users/{id}\")\n    public void deleteUser(@PathVariable(\"id\") Long id) {\n        userRepository.deleteById(id);\n    }\n}\n</code></pre> <p>\u00c2u kh\u00ea, Ch\u1ec9 c\u1ea7n nh\u01b0 v\u1eady l\u00e0 ch\u1ea1y \u0111\u01b0\u1ee3c r\u1ed3i.</p> <p>N\u1ebfu \u0111\u1ea7y \u0111\u1ee7 h\u01a1n, th\u00ec b\u1ea1n n\u00ean config\u00a0<code>OpenApi</code>\u00a0cho d\u1ef1 \u00e1n c\u1ee7a ch\u00fang ta \u0111\u1ec3 b\u1ed5 sung c\u00e1c th\u00f4ng tin t\u1ed5ng quan.</p>"},{"location":"java/spring-boot/spring-boot/#config-openapi-30","title":"Config OpenApi 3.0","text":"<p>Ch\u1ec9 c\u1ea7n t\u1ea1o ra \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>OpenAPI</code>\u00a0v\u00e0 cung c\u1ea5p c\u00e1c th\u00f4ng tin c\u1ea7n thi\u1ebft.</p> <pre><code>@Configuration\npublic class OpenApiConfig {\n    @Bean\n    public OpenAPI customOpenAPI() {\n        return new OpenAPI()\n                // Thi\u1ebft l\u1eadp c\u00e1c server d\u00f9ng \u0111\u1ec3 test api\n                .servers(Lists.newArrayList(\n                        new Server().url(\"http://localhost:8080\"),\n                        new Server().url(\"https://user.loda.me\")\n                ))\n                // info\n                .info(new Info().title(\"Loda Application API\")\n                                .description(\"Sample OpenAPI 3.0\")\n                                .contact(new Contact()\n                                                 .email(\"loda.namnh@gmail.com\")\n                                                 .name(\"loda\")\n                                                 .url(\"https://loda.me/\"))\n                                .license(new License()\n                                                 .name(\"Apache 2.0\")\n                                                 .url(\"http://www.apache.org/licenses/LICENSE-2.0.html\"))\n                                .version(\"1.0.0\"));\n    }\n}\n</code></pre> <p><code>OpenApi3.0</code>\u00a0th\u00ec b\u1ea1n kh\u00f4ng c\u1ea7n\u00a0<code>@Enable</code>\u00a0m\u00e0 ch\u1ec9 c\u1ea7n add\u00a0<code>springdoc-openapi-core</code>\u00a0v\u00e0o dependencies th\u00f4i l\u00e0 n\u00f3 t\u1ef1 \u0111\u1ed9ng gen ra t\u00e0i li\u1ec7u r\u1ed3i.</p> <pre><code>@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n</code></pre> <p>B\u00e2y gi\u1edd, ch\u1ea1y th\u1eed v\u00e0 v\u00e0o \u0111\u1ecba ch\u1ec9\u00a0<code>http://localhost:8080/swagger-ui.html</code>\u00a0\u0111\u1ec3 xem th\u00e0nh qu\u1ea3 nh\u00e9.</p>"},{"location":"java/spring-boot/spring-boot/#ket_6","title":"K\u1ebft","text":"<p>T\u1edbi \u0111\u00e2y b\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng\u00a0OpenAPI 3.0\u00a0tho\u1ea3i m\u00e1i r\u1ed3i.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/ss/","title":"[SS] H\u01b0\u1edbng d\u1eabn Spring Security c\u01a1 b\u1ea3n, d\u1ec5 hi\u1ec3u","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e0i \u0111\u1eb7t</li> <li>Implement</li> <li>K\u00edch ho\u1ea1t t\u00ednh n\u0103ng WebSecurity</li> <li>T\u1ea1o t\u00e0i kho\u1ea3n user</li> <li>Ph\u00e2n quy\u1ec1n truy c\u1eadp</li> <li>Th\u00eam controller.</li> <li>Ch\u1ea1y th\u1eed</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/ss/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Spring Security\u00a0l\u00e0 m\u1ed9t trong nh\u1eefng core feature quan tr\u1ecdng c\u1ee7a Spring Framework, n\u00f3 gi\u00fap ch\u00fang ta ph\u00e2n quy\u1ec1n v\u00e0 x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng tr\u01b0\u1edbc khi cho ph\u00e9p h\u1ecd truy c\u1eadp v\u00e0o c\u00e1c t\u00e0i nguy\u00ean c\u1ee7a ch\u00fang ta.</p> <p>Trong b\u00e0i h\u01b0\u1edbng d\u1eabn n\u00e0y, t\u00f4i s\u1ebd h\u01b0\u1edbng d\u1eabn c\u00e1c b\u1ea1n c\u00e1ch implement\u00a0Spring Security\u00a0m\u1ed9t c\u00e1ch c\u01a1 b\u1ea3n nh\u1ea5t, \u0111\u01a1n gi\u1ea3n nh\u1ea5t, ch\u00fang ta s\u1ebd n\u00e2ng cao d\u1ea7n \u1edf c\u00e1c b\u00e0i sau.</p>"},{"location":"java/spring-boot/ss/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ch\u00fang ta c\u00e0i th\u01b0 vi\u1ec7n qua maven, c\u00e1c dependencies bao g\u1ed3m:</p> <p>pom.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-security-example&lt;/artifactId&gt;\n    &lt;version&gt;0.1.0&lt;/version&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.0.5.RELEASE&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre> <p>Th\u01b0 m\u1ee5c code g\u1ed3m c\u00f3:</p> <p>!image</p>"},{"location":"java/spring-boot/ss/#implement","title":"Implement","text":""},{"location":"java/spring-boot/ss/#kich-hoat-tinh-nang-websecurity","title":"K\u00edch ho\u1ea1t t\u00ednh n\u0103ng WebSecurity","text":"<p>Tr\u01b0\u1edbc ti\u00ean, \u0111\u1ec3 k\u00edch ho\u1ea1t t\u00ednh n\u0103ng Spring Security tr\u00ean \u1ee9ng d\u1ee5ng Web c\u1ee7a m\u00ecnh, c\u00e1c b\u1ea1n c\u1ea7n g\u1eafn annotation\u00a0<code>@EnableWebSecurity</code>\u00a0tr\u00ean m\u1ed9t bean b\u1ea5t k\u1ef3 c\u1ee7a m\u00ecnh.</p> <p>\u1ede \u0111\u00e2y, t\u00f4i t\u1ea1o ra m\u1ed9t class\u00a0<code>WebSecurityConfig</code>\u00a0\u0111\u1ec3 l\u00e0 n\u01a1i t\u1eadp trung c\u00e1c x\u1eed l\u00fd c\u00e1c th\u00f4ng tin li\u00ean quan t\u1edbi security.</p> <pre><code>@EnableWebSecurity\npublic class WebSecurityConfig {\n    // ...\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#tao-tai-khoan-user","title":"T\u1ea1o t\u00e0i kho\u1ea3n user","text":"<p>Th\u00f4ng th\u01b0\u1eddng, t\u00e0i kho\u1ea3n user c\u1ee7a ng\u01b0\u1eddi d\u00f9ng s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u trong csdl v\u00e0 m\u00e3 h\u00f3a. Tuy nhi\u00ean, trong v\u00ed d\u1ee5 c\u1ef1c k\u00ec basic n\u00e0y, t\u00f4i s\u1ebd l\u01b0u m\u1ed9t t\u00e0i kho\u1ea3n ng\u01b0\u1eddi d\u00f9ng trong ch\u00ednh b\u1ed9 nh\u1edb ch\u01b0\u01a1ng tr\u00ecnh.</p> <p>C\u00e1ch n\u00e0y ch\u1ec9 \u0111\u1ec3 demo th\u00f4i nh\u00e9, v\u00ec n\u00f3 d\u1eef li\u1ec7u s\u1ebd b\u1ecb m\u1ea5t khi t\u1eaft \u1ee9ng d\u1ee5ng, ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u c\u00e1ch x\u00e1c th\u1ef1c b\u1eb1ng csdl \u1edf b\u00e0i sau.</p> <pre><code>@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    @Override\n    public UserDetailsService userDetailsService() {\n        // T\u1ea1o ra user trong b\u1ed9 nh\u1edb\n        // l\u01b0u \u00fd, ch\u1ec9 s\u1eed d\u1ee5ng c\u00e1ch n\u00e0y \u0111\u1ec3 minh h\u1ecda\n        // C\u00f2n th\u1ef1c t\u1ebf ch\u00fang ta s\u1ebd ki\u1ec3m tra user trong csdl\n        InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();\n        manager.createUser(\n                User.withDefaultPasswordEncoder() // S\u1eed d\u1ee5ng m\u00e3 h\u00f3a password \u0111\u01a1n gi\u1ea3n\n                    .username(\"loda\")\n                    .password(\"loda\")\n                    .roles(\"USER\") // ph\u00e2n quy\u1ec1n l\u00e0 ng\u01b0\u1eddi d\u00f9ng.\n                    .build()\n        );\n        return manager;\n    }\n}\n</code></pre> <p><code>WebSecurityConfigurerAdapter</code>\u00a0l\u00e0 m\u1ed9t interface ti\u1ec7n \u00edch c\u1ee7a Spring Security gi\u00fap ch\u00fang ta c\u00e0i \u0111\u1eb7t c\u00e1c th\u00f4ng tin d\u1ec5 d\u00e0ng h\u01a1n.</p> <p>Method<code>userDetailsService()</code>\u00a0c\u00f3 t\u00e1c d\u1ee5ng cung c\u1ea5p th\u00f4ng tin user cho Spring Security, ch\u00fang ta\u00a0Override\u00a0l\u1ea1i method n\u00e0y v\u00e0 cung c\u1ea5p cho n\u00f3 m\u1ed9t\u00a0<code>User</code>\u00a0l\u00e0\u00a0<code>loda</code>.</p>"},{"location":"java/spring-boot/ss/#phan-quyen-truy-cap","title":"Ph\u00e2n quy\u1ec1n truy c\u1eadp","text":"<p>Khi \u0111\u00e3 c\u00f3\u00a0<code>User</code>, ch\u00fang ta s\u1ebd c\u1ea7n ph\u00e2n quy\u1ec1n xem m\u1ed9t\u00a0<code>User</code>\u00a0s\u1ebd \u0111\u01b0\u1ee3c ph\u00e9p truy c\u1eadp v\u00e0o nh\u1eefng t\u00e0i nguy\u00ean n\u00e0o.</p> <p>L\u00fac n\u00e0y, v\u1eabn \u1edf trong\u00a0<code>WebSecurityConfigurerAdapter</code>, ch\u00fang ta override l\u1ea1i method\u00a0<code>protected void configure(HttpSecurity http)</code>\u00a0\u0111\u1ec3 th\u1ef1c hi\u1ec7n vi\u1ec7c ph\u00e2n quy\u1ec1n.</p> <pre><code>import org.springframework.context.annotation.Bean;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.userdetails.User;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.provisioning.InMemoryUserDetailsManager;\n\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Bean\n    @Override\n    public UserDetailsService userDetailsService() {\n        // T\u1ea1o ra user trong b\u1ed9 nh\u1edb\n        // l\u01b0u \u00fd, ch\u1ec9 s\u1eed d\u1ee5ng c\u00e1ch n\u00e0y \u0111\u1ec3 minh h\u1ecda\n        // C\u00f2n th\u1ef1c t\u1ebf ch\u00fang ta s\u1ebd ki\u1ec3m tra user trong csdl\n        InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();\n        manager.createUser(\n                User.withDefaultPasswordEncoder() // S\u1eed d\u1ee5ng m\u00e3 h\u00f3a password \u0111\u01a1n gi\u1ea3n\n                    .username(\"loda\")\n                    .password(\"loda\")\n                    .roles(\"USER\") // ph\u00e2n quy\u1ec1n l\u00e0 ng\u01b0\u1eddi d\u00f9ng.\n                    .build()\n        );\n        return manager;\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .authorizeRequests()\n                    .antMatchers(\"/\", \"/home\").permitAll() // Cho ph\u00e9p t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi truy c\u1eadp v\u00e0o 2 \u0111\u1ecba ch\u1ec9 n\u00e0y\n                    .anyRequest().authenticated() // T\u1ea5t c\u1ea3 c\u00e1c request kh\u00e1c \u0111\u1ec1u c\u1ea7n ph\u1ea3i x\u00e1c th\u1ef1c m\u1edbi \u0111\u01b0\u1ee3c truy c\u1eadp\n                    .and()\n                .formLogin() // Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng x\u00e1c th\u1ef1c b\u1eb1ng form login\n                    .defaultSuccessUrl(\"/hello\")\n                    .permitAll() // T\u1ea5t c\u1ea3 \u0111\u1ec1u \u0111\u01b0\u1ee3c truy c\u1eadp v\u00e0o \u0111\u1ecba ch\u1ec9 n\u00e0y\n                    .and()\n                .logout() // Cho ph\u00e9p logout\n                    .permitAll();\n    }\n}\n</code></pre> <p><code>HttpSecurity</code>\u00a0l\u00e0 \u0111\u1ed1i t\u01b0\u1ee3ng ch\u00ednh c\u1ee7a Spring Security, cho ph\u00e9p ch\u00fang ta c\u1ea5u h\u00ecnh m\u1ecdi th\u1ee9 c\u1ea7n b\u1ea3o m\u1eadt, v\u00e0 n\u00f3 \u0111\u01b0\u1ee3c x\u00e2y d\u1ef1ng d\u01b0\u1edbi design pattern gi\u1ed1ng v\u1edbi\u00a0<code>Builder Pattern</code>, n\u00ean m\u1ecdi c\u00e0i \u0111\u1eb7t c\u00f3 th\u1ec3 vi\u1ebft li\u00ean t\u1ee5c th\u00f4ng qua to\u00e1n t\u1eed\u00a0<code>.</code></p> <p>\u1ede v\u00ed d\u1ee5 tr\u00ean, nh\u1eefng g\u00ec ch\u00fang ta mu\u1ed1n cho ph\u00e9p, ch\u00fang ta s\u1ebd x\u00e0i method\u00a0<code>.permit()</code>, c\u00f2n nh\u1eefng g\u00ec c\u1ea5m ho\u1eb7c y\u00eau c\u1ea7u x\u00e1c th\u1ef1c s\u1ebd d\u00f9ng\u00a0<code>.authenticated()</code></p> <p>Khi g\u1ecdi\u00a0<code>.formLogin()</code>\u00a0th\u00ec ch\u00fang ta c\u1ea5u h\u00ecnh cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng \u0111\u0103ng nh\u1eadp, th\u00f4ng qua \u0111\u1ecba ch\u1ec9 m\u1eb7c \u0111\u1ecbnh\u00a0<code>/login</code>\u00a0do Spring Security t\u1ef1 t\u1ea1o ra (C\u00e1i n\u00e0y c\u00f3 th\u1ec3 custom theo \u00fd m\u00ecnh \u0111\u01b0\u1ee3c, nh\u01b0ng ch\u00fang ta s\u1ebd ti\u1ebfp c\u1eadn \u1edf b\u00e0i sau).</p> <p>T\u01b0\u01a1ng t\u1ef1\u00a0<code>.logout()</code>\u00a0cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng logout, N\u1ebfu kh\u00f4ng n\u00f3i g\u00ec th\u00eam, Spring Security s\u1ebd m\u1eb7c \u0111\u1ecbnh t\u1ef1 t\u1ea1o ra m\u1ed9t trang logout v\u1edbi \u0111\u1ecba ch\u1ec9\u00a0<code>/logout</code>.</p>"},{"location":"java/spring-boot/ss/#them-controller","title":"Th\u00eam controller.","text":"<p>Ch\u00fang ta t\u1ea1o ra trang web c\u1ee7a m\u00ecnh g\u1ed3m c\u00f3 trang\u00a0<code>homepage</code>\u00a0v\u00e0 trang\u00a0<code>hello</code>.</p> <ul> <li>Trang\u00a0<code>homepage</code>\u00a0th\u00ec ai c\u0169ng truy c\u1eadp \u0111\u01b0\u1ee3c.</li> <li>Trang\u00a0<code>hello</code>\u00a0th\u00ec ph\u1ea3i x\u00e1c th\u1ef1c m\u1edbi \u0111\u01b0\u1ee3c truy c\u1eadp.</li> </ul> <p>C\u00e1c \u0111\u1ecba ch\u1ec9\u00a0<code>/login</code>\u00a0v\u00e0\u00a0<code>/logout</code>\u00a0th\u00ec kh\u00f4ng c\u1ea7n t\u1ea1o, Spring Security \u0111\u00e3 t\u1ea1o s\u1eb5n r\u1ed3i, ch\u00fang ta d\u00f9ng l\u1ea1i lu\u00f4n.</p> <pre><code>import org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\n\n@Controller\npublic class WebController {\n\n    @GetMapping(value = {\"/\", \"/home\"})\n    public String homepage() {\n        return \"home\"; // Tr\u1ea3 v\u1ec1 home.html\n    }\n\n    @GetMapping(\"/hello\")\n    public String hello() {\n        return \"hello\"; // Tr\u1ea3 v\u1ec1 hello.html\n    }\n\n}\n</code></pre> <p>Ukie, \u0111\u01a1n gi\u1ea3n v\u1eady th\u00f4i, b\u00e2y gi\u1edd c\u1ea7n t\u1ea1o ra c\u00e1c trang\u00a0<code>home.html</code>\u00a0v\u00e0\u00a0<code>hello.html</code>.</p> <p>V\u00ec \u1edf trong file\u00a0pom.xml\u00a0ch\u00fang ta \u0111\u00e3 c\u00e0i th\u01b0 vi\u1ec7n\u00a0<code>thymeleaf</code>. N\u00ean n\u00f3 s\u1ebd t\u1ef1 \u0111\u1ed9ng mapping t\u00ean t\u01b0\u01a1ng \u1ee9ng trong\u00a0<code>Controller</code>\u00a0tr\u1ea3 v\u1ec1 v\u1edbi c\u00e1c file \u1edf b\u00ean trong th\u01b0 m\u1ee5c\u00a0<code>resources/templates/</code></p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n&lt;/dependency&gt;\n</code></pre> <p>hello.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Hello&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Ch\u1ec9 nh\u1eefng ai \u0111\u0103ng nh\u1eadp m\u1edbi truy c\u1eadp \u0111\u01b0\u1ee3c trang n\u00e0y!&lt;/h1&gt;\n\n&lt;form th:action=\"@{/logout}\" method=\"post\"&gt;\n  &lt;input type=\"submit\" value=\"Sign Out\"/&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>C\u00fa ph\u00e1p\u00a0<code>th:action=\"@{/logout}\"</code>\u00a0l\u00e0 c\u1ee7a thymeleaf, c\u00f3 t\u00e1c d\u1ee5ng request t\u1edbi \u0111\u1ecba ch\u1ec9\u00a0<code>/logout</code></p> <p>home.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Spring Security Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome!&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"/login\"&gt;login&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Click &lt;a href=\"https://loda.me\"&gt;here&lt;/a&gt; to see a loda homepage.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"java/spring-boot/ss/#chay-thu","title":"Ch\u1ea1y th\u1eed","text":"<p>Ch\u1ea1y \u1ee9ng d\u1ee5ng b\u1eb1ng c\u00e1ch implement\u00a0<code>@SpringBootApplication</code></p> <pre><code>import org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class App {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n}\n</code></pre> <p>Khi ch\u1ea1y xong, truy c\u1eadp v\u00e0o \u0111\u01b0\u1eddng d\u1eabn\u00a0<code>http://localhost:8080/home</code>\u00a0\u0111\u1ec3 v\u00e0o trang ch\u1ee7.</p> <p>!image</p> <p>Khi ch\u01b0a \u0111\u0103ng nh\u1eadp, ch\u00fang ta truy c\u1eadp v\u00e0o \u0111\u01b0\u1eddng d\u1eabn\u00a0<code>/hello</code>. Th\u00ec n\u00f3 s\u1ebd t\u1ef1 redirect sang trang\u00a0<code>/login</code>.</p> <p>!image</p> <p>Khi \u0111\u00e3 \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng, ch\u00fang ta s\u1ebd c\u00f3 th\u1ec3 v\u00e0o trang\u00a0<code>/hello</code>\u00a0nh\u01b0 b\u00ecnh th\u01b0\u1eddng.</p> <p>!image</p> <p>Khi click v\u00e0o\u00a0<code>Sign Out</code>\u00a0th\u00ec s\u1ebd \u0111\u0103ng xu\u1ea5t.</p> <p>!image</p>"},{"location":"java/spring-boot/ss/#ket","title":"K\u1ebft","text":"<p>Trong b\u00e0i n\u00e0y, t\u00f4i \u0111\u00e3 gi\u1edbi thi\u1ec7u v\u1edbi c\u00e1c b\u1ea1n v\u1ec1\u00a0Spring Security\u00a0\u0111\u1ed3ng th\u1eddi gi\u1edbi thi\u1ec7u c\u00e1c kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 User v\u00e0 ph\u00e2n quy\u1ec1n. \u1ede c\u00e1c b\u00e0i n\u00e2ng cao sau, t\u00f4i s\u1ebd gi\u1edbi thi\u1ec7u th\u00eam v\u1edbi c\u00e1c b\u1ea1n v\u1ec1 c\u00e1ch x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng trong csdl v\u00e0 x\u00e1c th\u1ef1c b\u1eb1ng\u00a0<code>OAuth 2.0</code></p> <p>B\u00e0i vi\u1ebft li\u00ean quan:</p> <ol> <li>[\u26f3SS] H\u01b0\u1edbng d\u1eabn Spring Security + Jpa Hibernate</li> </ol> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/ss/#ss-huong-dan-spring-security-jpa-hibernate","title":"[SS] H\u01b0\u1edbng d\u1eabn Spring Security + Jpa Hibernate","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e0i \u0111\u1eb7t</li> <li>Implement</li> <li>T\u1ea1o User</li> <li>Tham chi\u1ebfu User v\u1edbi UserDetails</li> <li>C\u1ea5u h\u00ecnh v\u00e0 ph\u00e2n quy\u1ec1n</li> <li>T\u1ea1o Controller v\u00e0 webpage</li> <li>T\u1ea1o th\u00f4ng tin User trong database</li> <li> </li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/ss/#chay-thu_1","title":"Ch\u1ea1y th\u1eed","text":""},{"location":"java/spring-boot/ss/#gioi-thieu_1","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Trong\u00a0b\u00e0i tr\u01b0\u1edbc, t\u00f4i \u0111\u00e3 h\u01b0\u1edbng d\u1eabn v\u1edbi c\u00e1c b\u1ea1n v\u1ec1 c\u00e1ch \u0111\u1ec3 s\u1eed d\u1ee5ng\u00a0Spring Security\u00a0c\u01a1 b\u1ea3n, c\u00e1ch k\u00edch ho\u1ea1t, t\u1ea1o user v\u00e0 ph\u00e2n quy\u1ec1n.</p> <p>Trong b\u00e0i n\u00e0y, ch\u00fang s\u1ebd t\u00ecm hi\u1ec3u c\u00e1ch \u0111\u1ec3 ki\u1ec3m tra m\u1ed9t\u00a0<code>User</code>\u00a0\u1edf b\u00ean trong csdl.</p> <p>Trong b\u00e0i vi\u1ebft gi\u1ea3 \u0111\u1ecbnh b\u1ea1n \u0111\u00e3 c\u00f3 c\u00e1c ki\u1ebfn th\u1ee9c sau:</p> <ol> <li>Hibernate</li> <li>Lombok</li> <li>Spring Security C\u01a1 b\u1ea3n</li> </ol>"},{"location":"java/spring-boot/ss/#cai-at_1","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ch\u00fang ta s\u1eed d\u1ee5ng\u00a0Maven, C\u00e0i \u0111\u1eb7t file\u00a0pom.xml\u00a0c\u1ee7a b\u1ea1n nh\u01b0 sau.</p> <p>Kh\u00e1c v\u1edbi project tr\u01b0\u1edbc \u0111\u00f3, l\u1ea7n n\u00e0y ch\u00fang ta s\u1eed d\u1ee5ng th\u00eam database\u00a0<code>com.h2database</code>. \u0110\u00e2y l\u00e0 m\u1ed9t\u00a0in memory database. \u0110\u1ea1i kh\u00e1i l\u00e0 m\u1ecdi th\u1ee9 b\u1ea1n l\u01b0u tr\u00ean database ch\u1ec9 t\u1ed3n t\u1ea1i trong b\u1ed9 nh\u1edb, khi t\u1eaft \u1ee9ng d\u1ee5ng, database s\u1ebd m\u1ea5t s\u1ea1ch, th\u00edch h\u1ee3p cho vi\u1ec7c demo.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-security-hibernate&lt;/artifactId&gt;\n    &lt;version&gt;0.1.0&lt;/version&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.0.5.RELEASE&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.h2database&lt;/groupId&gt;\n            &lt;artifactId&gt;h2&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre> <p>Th\u01b0 m\u1ee5c code g\u1ed3m c\u00f3:</p> <p>!image</p>"},{"location":"java/spring-boot/ss/#implement_1","title":"Implement","text":""},{"location":"java/spring-boot/ss/#tao-user","title":"T\u1ea1o User","text":"<p>T\u1ea1o ra class\u00a0<code>User</code>\u00a0tham chi\u1ebfu v\u1edbi database.</p> <pre><code>import javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\nimport lombok.Data;\n\n@Entity\n@Table(name = \"user\")\n@Data // lombok\npublic class User {\n    @Id\n    @GeneratedValue\n    private Long id;\n\n    @Column(nullable = false, unique = true)\n    private String username;\n    private String password;\n}\n</code></pre> <p>T\u1ea1o\u00a0<code>UserRepository</code>\u00a0k\u1ebf th\u1eeba\u00a0<code>JpaRepository</code>\u00a0\u0111\u1ec3 truy xu\u1ea5t th\u00f4ng tin t\u1eeb database.</p> <pre><code>import org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n    User findByUsername(String username);\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#tham-chieu-user-voi-userdetails","title":"Tham chi\u1ebfu User v\u1edbi UserDetails","text":"<p>M\u1eb7c \u0111\u1ecbnh\u00a0Spring Security\u00a0s\u1eed d\u1ee5ng m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>UserDetails</code>\u00a0\u0111\u1ec3 ch\u1ee9a to\u00e0n b\u1ed9 th\u00f4ng tin v\u1ec1 ng\u01b0\u1eddi d\u00f9ng. V\u00ec v\u1eady, ch\u00fang ta c\u1ea7n t\u1ea1o ra m\u1ed9t class m\u1edbi gi\u00fap chuy\u1ec3n c\u00e1c th\u00f4ng tin c\u1ee7a\u00a0<code>User</code>\u00a0th\u00e0nh\u00a0<code>UserDetails</code></p> <p>CustomUserDetails.java</p> <pre><code>import org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\n\n@Data\n@AllArgsConstructor\npublic class CustomUserDetails implements UserDetails {\n    User user;\n\n    @Override\n    public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() {\n        // M\u1eb7c \u0111\u1ecbnh m\u00ecnh s\u1ebd \u0111\u1ec3 t\u1ea5t c\u1ea3 l\u00e0 ROLE_USER. \u0110\u1ec3 demo cho \u0111\u01a1n gi\u1ea3n.\n        return Collections.singleton(new SimpleGrantedAuthority(\"ROLE_USER\"));\n    }\n\n    @Override\n    public String getPassword() {\n        return user.getPassword();\n    }\n\n    @Override\n    public String getUsername() {\n        return user.getUsername();\n    }\n\n    @Override\n    public boolean isAccountNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isAccountNonLocked() {\n        return true;\n    }\n\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isEnabled() {\n        return true;\n    }\n}\n</code></pre> <p>Khi ng\u01b0\u1eddi d\u00f9ng \u0111\u0103ng nh\u1eadp th\u00ec\u00a0Spring Security\u00a0s\u1ebd c\u1ea7n l\u1ea5y c\u00e1c th\u00f4ng tin\u00a0<code>UserDetails</code>\u00a0hi\u1ec7n c\u00f3 \u0111\u1ec3 ki\u1ec3m tra. V\u00ec v\u1eady, b\u1ea1n c\u1ea7n t\u1ea1o ra m\u1ed9t class k\u1ebf th\u1eeba l\u1edbp\u00a0<code>UserDetailsService</code>\u00a0m\u00e0\u00a0Spring Security\u00a0cung c\u1ea5p \u0111\u1ec3 l\u00e0m nhi\u1ec7m v\u1ee5 n\u00e0y.</p> <p>UserService.java</p> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class UserService implements UserDetailsService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) {\n        // Ki\u1ec3m tra xem user c\u00f3 t\u1ed3n t\u1ea1i trong database kh\u00f4ng?\n        User user = userRepository.findByUsername(username);\n        if (user == null) {\n            throw new UsernameNotFoundException(username);\n        }\n        return new CustomUserDetails(user);\n    }\n\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#cau-hinh-va-phan-quyen","title":"C\u1ea5u h\u00ecnh v\u00e0 ph\u00e2n quy\u1ec1n","text":"<p>Gi\u1ed1ng v\u1edbi\u00a0b\u00e0i tr\u01b0\u1edbc, ch\u00fang ta c\u1ea7n k\u00edch ho\u1ea1t\u00a0Spring Security\u00a0v\u00e0 ph\u00e2n quy\u1ec1n ng\u01b0\u1eddi d\u00f9ng.</p> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\nimport me.loda.spring.springsecurityhibernate.user.UserService;\n\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    UserService userService;\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        // Password encoder, \u0111\u1ec3 Spring Security s\u1eed d\u1ee5ng m\u00e3 h\u00f3a m\u1eadt kh\u1ea9u ng\u01b0\u1eddi d\u00f9ng\n        return new BCryptPasswordEncoder();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth)\n            throws Exception {\n        auth.userDetailsService(userService) // Cung c\u00e1p userservice cho spring security\n            .passwordEncoder(passwordEncoder()); // cung c\u1ea5p password encoder\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .authorizeRequests()\n                .antMatchers(\"/\", \"/home\").permitAll() // Cho ph\u00e9p t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi truy c\u1eadp v\u00e0o 2 \u0111\u1ecba ch\u1ec9 n\u00e0y\n                .anyRequest().authenticated() // T\u1ea5t c\u1ea3 c\u00e1c request kh\u00e1c \u0111\u1ec1u c\u1ea7n ph\u1ea3i x\u00e1c th\u1ef1c m\u1edbi \u0111\u01b0\u1ee3c truy c\u1eadp\n                .and()\n                .formLogin() // Cho ph\u00e9p ng\u01b0\u1eddi d\u00f9ng x\u00e1c th\u1ef1c b\u1eb1ng form login\n                .defaultSuccessUrl(\"/hello\")\n                .permitAll() // T\u1ea5t c\u1ea3 \u0111\u1ec1u \u0111\u01b0\u1ee3c truy c\u1eadp v\u00e0o \u0111\u1ecba ch\u1ec9 n\u00e0y\n                .and()\n                .logout() // Cho ph\u00e9p logout\n                .permitAll();\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#tao-controller-va-webpage","title":"T\u1ea1o Controller v\u00e0 webpage","text":"<p>Ch\u00fang ta t\u1ea1o ra trang web c\u1ee7a m\u00ecnh g\u1ed3m c\u00f3 trang\u00a0<code>homepage</code>\u00a0v\u00e0 trang\u00a0<code>hello</code>.</p> <ul> <li>Trang\u00a0<code>homepage</code>\u00a0th\u00ec ai c\u0169ng truy c\u1eadp \u0111\u01b0\u1ee3c.</li> <li>Trang\u00a0<code>hello</code>\u00a0th\u00ec ph\u1ea3i x\u00e1c th\u1ef1c m\u1edbi \u0111\u01b0\u1ee3c truy c\u1eadp.</li> </ul> <p>M\u1eb7c \u0111\u1ecbnh\u00a0<code>/login</code>\u00a0v\u00e0\u00a0<code>/logout</code>Spring Security\u00a0\u0111\u00e3 t\u1ea1o cho ch\u00fang ta r\u1ed3i.</p> <pre><code>@Controller\npublic class WebController {\n\n    @GetMapping(value = {\"/\", \"/home\"})\n    public String homepage() {\n        return \"home\";\n    }\n\n    @GetMapping(\"/hello\")\n    public String hello() {\n        return \"hello\";\n    }\n\n}\n</code></pre> <p>hello.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Hello&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Ch\u1ec9 nh\u1eefng ai \u0111\u0103ng nh\u1eadp m\u1edbi truy c\u1eadp \u0111\u01b0\u1ee3c trang n\u00e0y!&lt;/h1&gt;\n\n&lt;form th:action=\"@{/logout}\" method=\"post\"&gt;\n  &lt;input type=\"submit\" value=\"Sign Out\"/&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>C\u00fa ph\u00e1p\u00a0<code>th:action=\"@{/logout}\"</code>\u00a0l\u00e0 c\u1ee7a thymeleaf, c\u00f3 t\u00e1c d\u1ee5ng request t\u1edbi \u0111\u1ecba ch\u1ec9\u00a0<code>/logout</code></p> <p>home.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"&gt;\n&lt;head&gt;\n  &lt;title&gt;Spring Security Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome!&lt;/h1&gt;\n\n&lt;p&gt;&lt;a href=\"/login\"&gt;login&lt;/a&gt;&lt;/p&gt;\n&lt;p&gt;Click &lt;a href=\"https://loda.me\"&gt;here&lt;/a&gt; to see a loda homepage.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"java/spring-boot/ss/#tao-thong-tin-user-trong-database","title":"T\u1ea1o th\u00f4ng tin User trong database","text":"<p>Tr\u01b0\u1edbc h\u1ebft b\u1ea1n c\u1ea7n c\u1ea5u h\u00ecnh cho hibernate k\u1ebft t\u1edbi t\u1edbi h2 database trong file\u00a0<code>resources/appication.properties</code></p> <pre><code>spring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=\n\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n\n## Enabling H2 Console\nspring.h2.console.enabled=true\n</code></pre> <p>\u0110\u1ec3 ph\u1ee5c v\u1ee5 demo, m\u1ed7i khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh, ch\u00fang ta c\u1ea7n insert m\u1ed9t\u00a0<code>User</code>\u00a0v\u00e0o database.</p> <p>C\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c n\u00e0y b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>CommandLineRunner</code>. M\u1ed9t interface c\u1ee7a Spring cung c\u1ea5p, c\u00f3 t\u00e1c d\u1ee5ng th\u1ef1c hi\u1ec7n m\u1ed9t nhi\u1ec7m v\u1ee5 khi Spring kh\u1edfi ch\u1ea1y l\u1ea7n \u0111\u1ea7u.</p> <pre><code>@SpringBootApplication\npublic class App implements CommandLineRunner {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n\n    @Autowired\n    UserRepository userRepository;\n    @Autowired\n    PasswordEncoder passwordEncoder;\n\n    @Override\n    public void run(String... args) throws Exception {\n        // Khi ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y\n        // Insert v\u00e0o csdl m\u1ed9t user.\n        User user = new User();\n        user.setUsername(\"loda\");\n        user.setPassword(passwordEncoder.encode(\"loda\"));\n        userRepository.save(user);\n        System.out.println(user);\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#chay-thu_2","title":"#Ch\u1ea1y th\u1eed","text":"<p>Truy c\u1eadp v\u00e0o \u0111\u01b0\u1eddng d\u1eabn\u00a0<code>http://localhost:8080/home</code>\u00a0\u0111\u1ec3 v\u00e0o trang ch\u1ee7.</p> <p>!image</p> <p>Khi ch\u01b0a \u0111\u0103ng nh\u1eadp, ch\u00fang ta truy c\u1eadp v\u00e0o \u0111\u01b0\u1eddng d\u1eabn\u00a0<code>/hello</code>. Th\u00ec n\u00f3 s\u1ebd t\u1ef1 redirect sang trang\u00a0<code>/login</code>.</p> <p>!image</p> <p>Khi \u0111\u00e3 \u0111\u0103ng nh\u1eadp th\u00e0nh c\u00f4ng, ch\u00fang ta s\u1ebd c\u00f3 th\u1ec3 v\u00e0o trang\u00a0<code>/hello</code>\u00a0nh\u01b0 b\u00ecnh th\u01b0\u1eddng.</p> <p>!image</p> <p>Khi click v\u00e0o\u00a0<code>Sign Out</code>\u00a0th\u00ec s\u1ebd \u0111\u0103ng xu\u1ea5t.</p> <p>!image</p>"},{"location":"java/spring-boot/ss/#ket_1","title":"K\u1ebft","text":"<p>Trong b\u00e0i n\u00e0y, ch\u00fang ta \u0111\u00e3 t\u00ecm hi\u1ec3u c\u00e1ch s\u1eed d\u1ee5ng Spring Security k\u1ebft h\u1ee3p v\u1edbi Hibernate \u0111\u1ec3 c\u00f3 th\u1ec3 x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng trong c\u01a1 s\u1edf d\u1eef li\u1ec7u. Ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u c\u00e1c c\u00e1ch x\u00e1c th\u1ef1c\u00a0<code>OAuth 2.0</code>\u00a0\u1edf c\u00e1c b\u00e0i sau.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"java/spring-boot/ss/#ss-huong-dan-spring-security-jwt-json-web-token-hibernate","title":"[SS] H\u01b0\u1edbng d\u1eabn Spring Security + JWT (Json Web Token) + Hibernate","text":"<ul> <li>Gi\u1edbi thi\u1ec7u</li> <li>C\u00e0i \u0111\u1eb7t</li> <li>Implement</li> <li>T\u1ea1o User</li> <li>Tham chi\u1ebfu User v\u1edbi UserDetails</li> <li>JWT</li> <li>C\u1ea5u h\u00ecnh v\u00e0 ph\u00e2n quy\u1ec1n</li> <li>T\u1ea1o Controller</li> <li>T\u1ea1o th\u00f4ng tin User trong database</li> <li>Ch\u1ea1y th\u1eed</li> <li>K\u1ebft</li> </ul>"},{"location":"java/spring-boot/ss/#gioi-thieu_2","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Xin ch\u00e0o c\u00e1c b\u1ea1n, Trong hai b\u00e0i tr\u01b0\u1edbc t\u00f4i \u0111\u00e3 gi\u1edbi thi\u1ec7u c\u00e1ch s\u1eed d\u1ee5ng\u00a0Spring Security\u00a0v\u00e0 k\u1ebft n\u1ed1i v\u1edbi database \u0111\u1ec3 x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng.</p> <ol> <li>Spring Security C\u01a1 b\u1ea3n</li> <li>Spring Security + Hibernate</li> </ol> <p>Trong b\u00e0i h\u00f4m nay ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u m\u1ed9t ph\u1ea7n c\u1ef1c k\u1ef3 quan tr\u1ecdng trong c\u00e1c h\u1ec7 th\u1ed1ng b\u1ea3o m\u1eadt ng\u00e0y nay, \u0111\u00f3 l\u00e0\u00a0JWT.</p> <p>JWT (Json web Token)\u00a0l\u00e0 m\u1ed9t chu\u1ed7i m\u00e3 h\u00f3a \u0111\u01b0\u1ee3c g\u1eedi k\u00e8m trong Header c\u1ee7a client request c\u00f3 t\u00e1c d\u1ee5ng gi\u00fap ph\u00eda server x\u00e1c th\u1ef1c request ng\u01b0\u1eddi d\u00f9ng c\u00f3 h\u1ee3p l\u1ec7 hay kh\u00f4ng. \u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng ph\u1ed5 bi\u1ebfn trong c\u00e1c h\u1ec7 th\u1ed1ng API ng\u00e0y nay.</p> <p>!image</p>"},{"location":"java/spring-boot/ss/#cai-at_2","title":"C\u00e0i \u0111\u1eb7t","text":"<p>Ch\u00fang ta s\u1eed d\u1ee5ng Maven gi\u1ed1ng b\u00e0i tr\u01b0\u1edbc, tuy nhi\u00ean c\u00f3 update th\u00eam th\u01b0 vi\u1ec7n\u00a0<code>io.jsonwebtoken.jwtt</code>\u00a0\u0111\u1ec3 gi\u00fap ch\u00fang ta m\u00e3 h\u00f3a th\u00f4ng tin th\u00e0nh\u00a0<code>jwt</code></p> <p>pom.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-security-jwt&lt;/artifactId&gt;\n    &lt;version&gt;0.1.0&lt;/version&gt;\n\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.0.5.RELEASE&lt;/version&gt;\n    &lt;/parent&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.h2database&lt;/groupId&gt;\n            &lt;artifactId&gt;h2&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;\n            &lt;artifactId&gt;jjwt&lt;/artifactId&gt;\n            &lt;version&gt;0.9.1&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre> <p>C\u1ea5u tr\u00fac th\u01b0 m\u1ee5c code bao g\u1ed3m:</p> <p>!image</p>"},{"location":"java/spring-boot/ss/#implement_2","title":"Implement","text":"<p>Ban \u0111\u1ea7u, ch\u00fang ta s\u1ebd t\u1ea1o ra class\u00a0<code>User</code>\u00a0v\u00e0\u00a0<code>UserDetails</code>\u00a0\u0111\u1ec3 giao ti\u1ebfp v\u1edbi\u00a0Spring Security. Ph\u1ea7n n\u00e0y gi\u1ed1ng h\u1ec7t v\u1edbi b\u00e0i vi\u1ebft\u00a0Spring Security + Hibernate</p> <p>Trong b\u00e0i vi\u1ebft c\u00f3 s\u1eed d\u1ee5ng\u00a0Lombok</p>"},{"location":"java/spring-boot/ss/#tao-user_1","title":"T\u1ea1o User","text":"<p>T\u1ea1o ra class\u00a0<code>User</code>\u00a0tham chi\u1ebfu v\u1edbi database.</p> <pre><code>import javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\nimport lombok.Data;\n\n@Entity\n@Table(name = \"user\")\n@Data // lombok\npublic class User {\n    @Id\n    @GeneratedValue\n    private Long id;\n\n    @Column(nullable = false, unique = true)\n    private String username;\n    private String password;\n}\n</code></pre> <p>T\u1ea1o\u00a0<code>UserRepository</code>\u00a0k\u1ebf th\u1eeba\u00a0<code>JpaRepository</code>\u00a0\u0111\u1ec3 truy xu\u1ea5t th\u00f4ng tin t\u1eeb database.</p> <pre><code>import org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface UserRepository extends JpaRepository&lt;User, Long&gt; {\n    User findByUsername(String username);\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#tham-chieu-user-voi-userdetails_1","title":"Tham chi\u1ebfu User v\u1edbi UserDetails","text":"<p>M\u1eb7c \u0111\u1ecbnh\u00a0Spring Security\u00a0s\u1eed d\u1ee5ng m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng\u00a0<code>UserDetails</code>\u00a0\u0111\u1ec3 ch\u1ee9a to\u00e0n b\u1ed9 th\u00f4ng tin v\u1ec1 ng\u01b0\u1eddi d\u00f9ng. V\u00ec v\u1eady, ch\u00fang ta c\u1ea7n t\u1ea1o ra m\u1ed9t class m\u1edbi gi\u00fap chuy\u1ec3n c\u00e1c th\u00f4ng tin c\u1ee7a\u00a0<code>User</code>\u00a0th\u00e0nh\u00a0<code>UserDetails</code></p> <p>CustomUserDetails.java</p> <pre><code>import org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\n\n@Data\n@AllArgsConstructor\npublic class CustomUserDetails implements UserDetails {\n    User user;\n\n    @Override\n    public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() {\n        // M\u1eb7c \u0111\u1ecbnh m\u00ecnh s\u1ebd \u0111\u1ec3 t\u1ea5t c\u1ea3 l\u00e0 ROLE_USER. \u0110\u1ec3 demo cho \u0111\u01a1n gi\u1ea3n.\n        return Collections.singleton(new SimpleGrantedAuthority(\"ROLE_USER\"));\n    }\n\n    @Override\n    public String getPassword() {\n        return user.getPassword();\n    }\n\n    @Override\n    public String getUsername() {\n        return user.getUsername();\n    }\n\n    @Override\n    public boolean isAccountNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isAccountNonLocked() {\n        return true;\n    }\n\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n\n    @Override\n    public boolean isEnabled() {\n        return true;\n    }\n}\n</code></pre> <p>Khi ng\u01b0\u1eddi d\u00f9ng \u0111\u0103ng nh\u1eadp th\u00ec\u00a0Spring Security\u00a0s\u1ebd c\u1ea7n l\u1ea5y c\u00e1c th\u00f4ng tin\u00a0<code>UserDetails</code>\u00a0hi\u1ec7n c\u00f3 \u0111\u1ec3 ki\u1ec3m tra. V\u00ec v\u1eady, b\u1ea1n c\u1ea7n t\u1ea1o ra m\u1ed9t class k\u1ebf th\u1eeba l\u1edbp\u00a0<code>UserDetailsService</code>\u00a0m\u00e0\u00a0Spring Security\u00a0cung c\u1ea5p \u0111\u1ec3 l\u00e0m nhi\u1ec7m v\u1ee5 n\u00e0y.</p> <p>UserService.java</p> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class UserService implements UserDetailsService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) {\n        // Ki\u1ec3m tra xem user c\u00f3 t\u1ed3n t\u1ea1i trong database kh\u00f4ng?\n        User user = userRepository.findByUsername(username);\n        if (user == null) {\n            throw new UsernameNotFoundException(username);\n        }\n        return new CustomUserDetails(user);\n    }\n\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#jwt","title":"JWT","text":"<p>Sau khi c\u00f3 c\u00e1c th\u00f4ng tin v\u1ec1 ng\u01b0\u1eddi d\u00f9ng, ch\u00fang ta c\u1ea7n m\u00e3 h\u00f3a th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng th\u00e0nh chu\u1ed7i\u00a0<code>JWT</code>. T\u00f4i s\u1ebd t\u1ea1o ra m\u1ed9t class\u00a0<code>JwtTokenProvider</code>\u00a0\u0111\u1ec3 l\u00e0m nhi\u1ec7m v\u1ee5 n\u00e0y.</p> <pre><code>import org.springframework.stereotype.Component;\nimport io.jsonwebtoken.*;\nimport lombok.extern.slf4j.Slf4j;\nimport me.loda.springsecurityhibernatejwt.user.CustomUserDetails;\n\n@Component\n@Slf4j\npublic class JwtTokenProvider {\n    // \u0110o\u1ea1n JWT_SECRET n\u00e0y l\u00e0 b\u00ed m\u1eadt, ch\u1ec9 c\u00f3 ph\u00eda server bi\u1ebft\n    private final String JWT_SECRET = \"lodaaaaaa\";\n\n    //Th\u1eddi gian c\u00f3 hi\u1ec7u l\u1ef1c c\u1ee7a chu\u1ed7i jwt\n    private final long JWT_EXPIRATION = 604800000L;\n\n    // T\u1ea1o ra jwt t\u1eeb th\u00f4ng tin user\n    public String generateToken(CustomUserDetails userDetails) {\n        Date now = new Date();\n        Date expiryDate = new Date(now.getTime() + JWT_EXPIRATION);\n        // T\u1ea1o chu\u1ed7i json web token t\u1eeb id c\u1ee7a user.\n        return Jwts.builder()\n                   .setSubject(Long.toString(userDetails.getUser().getId()))\n                   .setIssuedAt(now)\n                   .setExpiration(expiryDate)\n                   .signWith(SignatureAlgorithm.HS512, JWT_SECRET)\n                   .compact();\n    }\n\n    // L\u1ea5y th\u00f4ng tin user t\u1eeb jwt\n    public Long getUserIdFromJWT(String token) {\n        Claims claims = Jwts.parser()\n                            .setSigningKey(JWT_SECRET)\n                            .parseClaimsJws(token)\n                            .getBody();\n\n        return Long.parseLong(claims.getSubject());\n    }\n\n    public boolean validateToken(String authToken) {\n        try {\n            Jwts.parser().setSigningKey(JWT_SECRET).parseClaimsJws(authToken);\n            return true;\n        } catch (MalformedJwtException ex) {\n            log.error(\"Invalid JWT token\");\n        } catch (ExpiredJwtException ex) {\n            log.error(\"Expired JWT token\");\n        } catch (UnsupportedJwtException ex) {\n            log.error(\"Unsupported JWT token\");\n        } catch (IllegalArgumentException ex) {\n            log.error(\"JWT claims string is empty.\");\n        }\n        return false;\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#cau-hinh-va-phan-quyen_1","title":"C\u1ea5u h\u00ecnh v\u00e0 ph\u00e2n quy\u1ec1n","text":"<p>B\u00e2y gi\u1edd, ch\u00fang ta b\u1eaft \u0111\u1ea7u c\u1ea5u h\u00ecnh\u00a0Spring Security\u00a0bao g\u1ed3m vi\u1ec7c k\u00edch ho\u1ea1t b\u1eb1ng\u00a0<code>@EnableWebSecurity</code>.</p> <p>B\u01b0\u1edbc n\u00e0y gi\u1ed1ng v\u1edbi b\u00e0i vi\u1ebft\u00a0Spring + Hibernate\u00a0n\u00ean t\u00f4i s\u1ebd kh\u00f4ng n\u00f3i nh\u1eefng ph\u1ea7n l\u1eb7p l\u1ea1i.</p> <pre><code>import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.BeanIds;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\nimport me.loda.springsecurityhibernatejwt.jwt.JwtAuthenticationFilter;\nimport me.loda.springsecurityhibernatejwt.user.UserService;\n\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    UserService userService;\n\n    @Bean\n    public JwtAuthenticationFilter jwtAuthenticationFilter() {\n        return new JwtAuthenticationFilter();\n    }\n\n    @Bean(BeanIds.AUTHENTICATION_MANAGER)\n    @Override\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        // Get AuthenticationManager bean\n        return super.authenticationManagerBean();\n    }\n\n    @Bean\n    public PasswordEncoder passwordEncoder() {\n        // Password encoder, \u0111\u1ec3 Spring Security s\u1eed d\u1ee5ng m\u00e3 h\u00f3a m\u1eadt kh\u1ea9u ng\u01b0\u1eddi d\u00f9ng\n        return new BCryptPasswordEncoder();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth)\n            throws Exception {\n        auth.userDetailsService(userService) // Cung c\u00e1p userservice cho spring security\n            .passwordEncoder(passwordEncoder()); // cung c\u1ea5p password encoder\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .cors() // Ng\u0103n ch\u1eb7n request t\u1eeb m\u1ed9t domain kh\u00e1c\n                    .and()\n                .authorizeRequests()\n                    .antMatchers(\"/api/login\").permitAll() // Cho ph\u00e9p t\u1ea5t c\u1ea3 m\u1ecdi ng\u01b0\u1eddi truy c\u1eadp v\u00e0o \u0111\u1ecba ch\u1ec9 n\u00e0y\n                    .anyRequest().authenticated(); // T\u1ea5t c\u1ea3 c\u00e1c request kh\u00e1c \u0111\u1ec1u c\u1ea7n ph\u1ea3i x\u00e1c th\u1ef1c m\u1edbi \u0111\u01b0\u1ee3c truy c\u1eadp\n\n        // Th\u00eam m\u1ed9t l\u1edbp Filter ki\u1ec3m tra jwt\n        http.addFilterBefore(jwtAuthenticationFilter(), UsernamePasswordAuthenticationFilter.class);\n    }\n}\n</code></pre> <p>\u0110i\u1ec3m kh\u00e1c bi\u1ec7t \u1edf \u0111\u00e2y l\u00e0 s\u1ef1 xu\u1ea5t hi\u1ec7n c\u1ee7a\u00a0<code>JwtAuthenticationFilter</code>. \u0110\u00e2y l\u00e0 m\u1ed9t l\u1edbp\u00a0<code>Filter</code>\u00a0do t\u00f4i t\u1ef1 t\u1ea1o ra.</p> <p><code>JwtAuthenticationFilter</code>\u00a0C\u00f3 nhi\u1ec7m v\u1ee5 ki\u1ec3m tra request c\u1ee7a ng\u01b0\u1eddi d\u00f9ng tr\u01b0\u1edbc khi n\u00f3 t\u1edbi \u0111\u00edch. N\u00f3 s\u1ebd l\u1ea5y\u00a0<code>Header Authorization</code>\u00a0ra v\u00e0 ki\u1ec3m tra xem chu\u1ed7i JWT ng\u01b0\u1eddi d\u00f9ng g\u1eedi l\u00ean c\u00f3 h\u1ee3p l\u1ec7 kh\u00f4ng.</p> <pre><code>@Slf4j\npublic class JwtAuthenticationFilter extends OncePerRequestFilter {\n    @Autowired\n    private JwtTokenProvider tokenProvider;\n\n    @Autowired\n    private UserService customUserDetailsService;\n    @Override\n    protected void doFilterInternal(HttpServletRequest request,\n                                    HttpServletResponse response, FilterChain filterChain)\n            throws ServletException, IOException {\n        try {\n            // L\u1ea5y jwt t\u1eeb request\n            String jwt = getJwtFromRequest(request);\n\n            if (StringUtils.hasText(jwt) &amp;&amp; tokenProvider.validateToken(jwt)) {\n                // L\u1ea5y id user t\u1eeb chu\u1ed7i jwt\n                Long userId = tokenProvider.getUserIdFromJWT(jwt);\n                // L\u1ea5y th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng t\u1eeb id\n                UserDetails userDetails = customUserDetailsService.loadUserById(userId);\n                if(userDetails != null) {\n                    // N\u1ebfu ng\u01b0\u1eddi d\u00f9ng h\u1ee3p l\u1ec7, set th\u00f4ng tin cho Seturity Context\n                    UsernamePasswordAuthenticationToken\n                            authentication = new UsernamePasswordAuthenticationToken(userDetails, null, userDetails.getAuthorities());\n                    authentication.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n\n                    SecurityContextHolder.getContext().setAuthentication(authentication);\n                }\n            }\n        } catch (Exception ex) {\n            log.error(\"failed on set user authentication\", ex);\n        }\n\n        filterChain.doFilter(request, response);\n    }\n\n    private String getJwtFromRequest(HttpServletRequest request) {\n        String bearerToken = request.getHeader(\"Authorization\");\n        // Ki\u1ec3m tra xem header Authorization c\u00f3 ch\u1ee9a th\u00f4ng tin jwt kh\u00f4ng\n        if (StringUtils.hasText(bearerToken) &amp;&amp; bearerToken.startsWith(\"Bearer \")) {\n            return bearerToken.substring(7);\n        }\n        return null;\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#tao-controller","title":"T\u1ea1o Controller","text":"<p>V\u00ec ph\u1ea7n n\u00e0y ch\u00fang ta l\u00e0m vi\u1ec7c v\u1edbi\u00a0<code>JWT</code>, n\u00ean c\u00e1c request s\u1ebd d\u01b0\u1edbi d\u1ea1ng Rest API.</p> <p>T\u00f4i t\u1ea1o ra 2 api:</p> <ol> <li><code>/api/login</code>: Cho ph\u00e9p request m\u00e0 kh\u00f4ng c\u1ea7n x\u00e1c th\u1ef1c.</li> <li><code>/api/random</code>: L\u00e0 m\u1ed9t api b\u1ea5t k\u1ef3 n\u00e0o \u0111\u00f3, ph\u1ea3i x\u00e1c th\u1ef1c m\u1edbi l\u1ea5y \u0111\u01b0\u1ee3c th\u00f4ng tin.</li> </ol> <pre><code>@RestController\n@RequestMapping(\"/api\")\npublic class LodaRestController {\n\n    @Autowired\n    AuthenticationManager authenticationManager;\n\n    @Autowired\n    private JwtTokenProvider tokenProvider;\n\n    @PostMapping(\"/login\")\n    public LoginResponse authenticateUser(@Valid @RequestBody LoginRequest loginRequest) {\n\n        // X\u00e1c th\u1ef1c t\u1eeb username v\u00e0 password.\n        Authentication authentication = authenticationManager.authenticate(\n                new UsernamePasswordAuthenticationToken(\n                        loginRequest.getUsername(),\n                        loginRequest.getPassword()\n                )\n        );\n\n        // N\u1ebfu kh\u00f4ng x\u1ea3y ra exception t\u1ee9c l\u00e0 th\u00f4ng tin h\u1ee3p l\u1ec7\n        // Set th\u00f4ng tin authentication v\u00e0o Security Context\n        SecurityContextHolder.getContext().setAuthentication(authentication);\n\n        // Tr\u1ea3 v\u1ec1 jwt cho ng\u01b0\u1eddi d\u00f9ng.\n        String jwt = tokenProvider.generateToken((CustomUserDetails) authentication.getPrincipal());\n        return new LoginResponse(jwt);\n    }\n\n    // Api /api/random y\u00eau c\u1ea7u ph\u1ea3i x\u00e1c th\u1ef1c m\u1edbi c\u00f3 th\u1ec3 request\n    @GetMapping(\"/random\")\n    public RandomStuff randomStuff(){\n        return new RandomStuff(\"JWT H\u1ee3p l\u1ec7 m\u1edbi c\u00f3 th\u1ec3 th\u1ea5y \u0111\u01b0\u1ee3c message n\u00e0y\");\n    }\n\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#tao-thong-tin-user-trong-database_1","title":"T\u1ea1o th\u00f4ng tin User trong database","text":"<p>Tr\u01b0\u1edbc h\u1ebft b\u1ea1n c\u1ea7n c\u1ea5u h\u00ecnh cho hibernate k\u1ebft t\u1edbi t\u1edbi h2 database trong file\u00a0<code>resources/appication.properties</code></p> <pre><code>spring.datasource.url=jdbc:h2:mem:testdb\nspring.datasource.driverClassName=org.h2.Driver\nspring.datasource.username=sa\nspring.datasource.password=\n\nspring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n\n## Enabling H2 Console\nspring.h2.console.enabled=true\n</code></pre> <p>\u0110\u1ec3 ph\u1ee5c v\u1ee5 demo, m\u1ed7i khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh, ch\u00fang ta c\u1ea7n insert m\u1ed9t\u00a0<code>User</code>\u00a0v\u00e0o database.</p> <p>C\u00f3 th\u1ec3 l\u00e0m vi\u1ec7c n\u00e0y b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng\u00a0<code>CommandLineRunner</code>. M\u1ed9t interface c\u1ee7a Spring cung c\u1ea5p, c\u00f3 t\u00e1c d\u1ee5ng th\u1ef1c hi\u1ec7n m\u1ed9t nhi\u1ec7m v\u1ee5 khi Spring kh\u1edfi ch\u1ea1y l\u1ea7n \u0111\u1ea7u.</p> <pre><code>@SpringBootApplication\npublic class App implements CommandLineRunner {\n    public static void main(String[] args) {\n        SpringApplication.run(App.class, args);\n    }\n\n    @Autowired\n    UserRepository userRepository;\n    @Autowired\n    PasswordEncoder passwordEncoder;\n\n    @Override\n    public void run(String... args) throws Exception {\n        // Khi ch\u01b0\u01a1ng tr\u00ecnh ch\u1ea1y\n        // Insert v\u00e0o csdl m\u1ed9t user.\n        User user = new User();\n        user.setUsername(\"loda\");\n        user.setPassword(passwordEncoder.encode(\"loda\"));\n        userRepository.save(user);\n        System.out.println(user);\n    }\n}\n</code></pre>"},{"location":"java/spring-boot/ss/#chay-thu_3","title":"Ch\u1ea1y th\u1eed","text":"<p>Khi server on, ch\u00fang ta request th\u1eed t\u1edbi \u0111\u1ecba ch\u1ec9\u00a0<code>http://localhost:8080/api/random</code>\u00a0m\u00e0 kh\u00f4ng x\u00e1c th\u1ef1c.</p> <p>!image</p> <p>K\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1 m\u00e3 l\u1ed7i\u00a0<code>403</code>\u00a0k\u00e8m theo message\u00a0<code>Access Denied</code>.</p> <p>\u0110\u1ec3 c\u00f3 th\u1ec3 request \u0111\u01b0\u1ee3c, ch\u00fang ta \u0111\u0103ng nh\u1eadp v\u00e0o h\u1ec7 th\u1ed1ng b\u1eb1ng\u00a0<code>api/login</code>\u00a0\u0111\u1ec3 l\u1ea5y\u00a0<code>jwt</code>.</p> <p>!image</p> <p>Sau \u0111\u00f3 s\u1eed d\u1ee5ng th\u00f4ng tin\u00a0<code>jwt</code>\u00a0server tr\u1ea3 v\u1ec1 \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c request kh\u00e1c.</p> <p>!image</p>"},{"location":"java/spring-boot/ss/#ket_2","title":"K\u1ebft","text":"<p>Trong b\u00e0i n\u00e0y, ch\u00fang ta \u0111\u00e3 t\u00ecm hi\u1ec3u c\u00e1ch s\u1eed d\u1ee5ng\u00a0Spring Security\u00a0v\u00e0\u00a0JWT\u00a0\u0111\u1ec3 c\u00f3 th\u1ec3 x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng trong c\u00e1c h\u1ec7 th\u1ed1ng Restful API. Ch\u00fang ta s\u1ebd t\u00ecm hi\u1ec3u c\u00e1c c\u00e1ch x\u00e1c th\u1ef1c\u00a0<code>OAuth 2.0</code>\u00a0\u1edf c\u00e1c b\u00e0i sau.</p> <p>\ud83d\udc81\u00a0N\u1ebfu c\u00f3, to\u00e0n b\u1ed9 project / code m\u1eabu \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef t\u1ea1i GitHub</p> <p>\ud83c\udf1f\u00a0\u0110\u00e2y l\u00e0 m\u1ed9t b\u00e0i vi\u1ebft trong\u00a0Series L\u00e0m ch\u1ee7 Spring Boot \u2013 Zero to Hero</p>"},{"location":"js/","title":"H\u01b0\u1edbng d\u1eabn h\u1ecdc JS c\u1ef1c nhanh","text":""},{"location":"js/#js-trong-html","title":"JS trong HTML","text":"<p>C\u00f3 2 c\u00e1ch ch\u00ednh \u0111\u1ec3 nh\u00fang JavaScript v\u00e0o file HTML:</p> <ul> <li>Vi\u1ebft code JS tr\u1ef1c ti\u1ebfp trong th\u1ebb <code>&lt;script&gt;</code> b\u00ean trong <code>&lt;head&gt;</code> ho\u1eb7c <code>&lt;body&gt;</code> c\u1ee7a file HTML.</li> <li>Vi\u1ebft code JS trong file ri\u00eang (<code>.js</code>), sau \u0111\u00f3 li\u00ean k\u1ebft \u0111\u1ebfn file HTML b\u1eb1ng th\u1ebb <code>&lt;script src=\"path/to/script.js\"&gt;&lt;/script&gt;</code>. C\u00e1ch n\u00e0y t\u1ed1t h\u01a1n cho d\u1ef1 \u00e1n l\u1edbn, d\u1ec5 qu\u1ea3n l\u00fd code.</li> </ul> <p>V\u00ed d\u1ee5 (External JS - ph\u1ed5 bi\u1ebfn nh\u1ea5t) - <code>index.html</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 External JS&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Xin ch\u00e0o JavaScript!&lt;/h1&gt;\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>script.js</code>:</p> <pre><code>alert('Ch\u00e0o m\u1eebng \u0111\u1ebfn v\u1edbi JavaScript!');\n</code></pre>"},{"location":"js/#cu-phap-va-co-ban","title":"C\u00fa ph\u00e1p v\u00e0 C\u01a1 b\u1ea3n","text":""},{"location":"js/#khai-bao-bien","title":"Khai b\u00e1o bi\u1ebfn","text":"<p>Bi\u1ebfn d\u00f9ng \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u trong ch\u01b0\u01a1ng tr\u00ecnh. Trong JavaScript, c\u00f3 3 t\u1eeb kh\u00f3a khai b\u00e1o bi\u1ebfn:</p> <ul> <li><code>var</code> (\u00edt d\u00f9ng hi\u1ec7n nay, ph\u1ea1m vi function-scoped).</li> <li><code>let</code> (ph\u1ea1m vi block-scoped, c\u00f3 th\u1ec3 g\u00e1n l\u1ea1i gi\u00e1 tr\u1ecb).</li> <li><code>const</code> (ph\u1ea1m vi block-scoped, kh\u00f4ng th\u1ec3 g\u00e1n l\u1ea1i gi\u00e1 tr\u1ecb sau khi kh\u1edfi t\u1ea1o). N\u00ean d\u00f9ng <code>const</code> khi gi\u00e1 tr\u1ecb kh\u00f4ng \u0111\u1ed5i, <code>let</code> khi c\u1ea7n thay \u0111\u1ed5i.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let age = 30; // Khai b\u00e1o bi\u1ebfn age v\u1edbi let, gi\u00e1 tr\u1ecb 30\nconst name = \"Gemini\"; // Khai b\u00e1o bi\u1ebfn name v\u1edbi const, gi\u00e1 tr\u1ecb \"Gemini\", c\u0169ng ch\u00ednh l\u00e0 \"th\u1ee9\" \u0111\u00e3 t\u1ea1o ra c\u00e1i h\u01b0\u1edbng d\u1eabn n\u00e0y\nage = 31; // C\u00f3 th\u1ec3 g\u00e1n l\u1ea1i gi\u00e1 tr\u1ecb cho age\n// name = \"Bard\"; // L\u1ed7i! Kh\u00f4ng th\u1ec3 g\u00e1n l\u1ea1i gi\u00e1 tr\u1ecb cho const name\nconsole.log(name + \" is \" + age + \" years old.\");\n</code></pre>"},{"location":"js/#su-dung-comments-trong-javascript","title":"S\u1eed d\u1ee5ng Comments trong JavaScript","text":"<p>Comment (ch\u00fa th\u00edch) trong JavaScript gi\u00fap ghi ch\u00fa, gi\u1ea3i th\u00edch code, ho\u1eb7c t\u1ea1m \u1ea9n code m\u00e0 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn ch\u01b0\u01a1ng tr\u00ecnh.</p> <p>Single-line comment: <code>// \u0110\u00e2y l\u00e0 comment m\u1ed9t d\u00f2ng</code></p> <p>Multi-line comment:</p> <pre><code>/*\n\u0110\u00e2y l\u00e0\ncomment\nnhi\u1ec1u d\u00f2ng\n*/\n</code></pre> <p>V\u00ed d\u1ee5:</p> <pre><code>// \u0110\u00e2y l\u00e0 comment gi\u1ea3i th\u00edch bi\u1ebfn name\nconst name = \"B\u1ea1n\";\n/*\n\u0110o\u1ea1n code n\u00e0y\ns\u1ebd in ra l\u1eddi ch\u00e0o\n*/\nconsole.log(\"Xin ch\u00e0o, \" + name + \"!\");\n</code></pre>"},{"location":"js/#mot-so-ham-built-in-trong-javascript","title":"M\u1ed9t s\u1ed1 h\u00e0m built-in trong JavaScript","text":"<p>Built-in functions (h\u00e0m d\u1ef1ng s\u1eb5n) l\u00e0 c\u00e1c h\u00e0m c\u00f3 s\u1eb5n trong JavaScript \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c t\u00e1c v\u1ee5 ph\u1ed5 bi\u1ebfn. V\u00ed d\u1ee5:</p> <ul> <li><code>alert()</code>: Hi\u1ec3n th\u1ecb h\u1ed9p tho\u1ea1i th\u00f4ng b\u00e1o.</li> <li><code>console.log()</code>: In th\u00f4ng tin ra console (DevTools).</li> <li><code>prompt()</code>: Hi\u1ec3n th\u1ecb h\u1ed9p tho\u1ea1i nh\u1eadp li\u1ec7u.</li> <li><code>parseInt()</code>, <code>parseFloat()</code>: Chuy\u1ec3n \u0111\u1ed5i chu\u1ed7i sang s\u1ed1 nguy\u00ean, s\u1ed1 th\u1ef1c.</li> <li><code>typeof()</code>: Ki\u1ec3m tra ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a bi\u1ebfn.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>alert(\"\u0110\u00e2y l\u00e0 th\u00f4ng b\u00e1o!\"); // Hi\u1ec3n th\u1ecb th\u00f4ng b\u00e1o\nconsole.log(\"Th\u00f4ng tin n\u00e0y in ra console\"); // In ra console\nlet input = prompt(\"Nh\u1eadp t\u00ean c\u1ee7a b\u1ea1n:\"); // Hi\u1ec3n th\u1ecb h\u1ed9p tho\u1ea1i nh\u1eadp li\u1ec7u\nconsole.log(\"B\u1ea1n \u0111\u00e3 nh\u1eadp: \" + input);\nlet numberString = \"123\";\nlet number = parseInt(numberString); // Chuy\u1ec3n chu\u1ed7i \"123\" sang s\u1ed1 123\nconsole.log(typeof(number)); // In ra \"number\"\n</code></pre>"},{"location":"js/#lam-quen-voi-toan-tu-trong-javascript","title":"L\u00e0m quen v\u1edbi to\u00e1n t\u1eed trong JavaScript","text":"<p>To\u00e1n t\u1eed (operator) l\u00e0 k\u00fd hi\u1ec7u th\u1ef1c hi\u1ec7n ph\u00e9p to\u00e1n tr\u00ean c\u00e1c gi\u00e1 tr\u1ecb (to\u00e1n h\u1ea1ng). JavaScript c\u00f3 nhi\u1ec1u lo\u1ea1i to\u00e1n t\u1eed:</p> <p>(TODO: S\u1eeda l\u1ea1i c\u00e1i \u0111o\u1ea1n n\u00e0y sao cho d\u1ec5 \u0111\u1ecdc h\u01a1n)</p> <ul> <li>To\u00e1n t\u1eed s\u1ed1 h\u1ecdc (+, -, /, %, *, ++, --).</li> <li>To\u00e1n t\u1eed g\u00e1n (=, +=, -=, =, /=, %=).</li> <li>To\u00e1n t\u1eed so s\u00e1nh (, =, !=, !==, &gt;, \\&lt;, &gt;=, \\&lt;=).</li> <li>To\u00e1n t\u1eed logic (&amp;&amp; - AND, || - OR, ! - NOT).</li> <li>To\u00e1n t\u1eed chu\u1ed7i (+ - c\u1ed9ng chu\u1ed7i).</li> </ul>"},{"location":"js/#toan-tu-so-hoc-trong-javascript","title":"To\u00e1n t\u1eed s\u1ed1 h\u1ecdc trong JavaScript","text":"<p>To\u00e1n t\u1eed s\u1ed1 h\u1ecdc th\u1ef1c hi\u1ec7n c\u00e1c ph\u00e9p to\u00e1n c\u01a1 b\u1ea3n:</p> <ul> <li><code>+</code> (c\u1ed9ng), <code>-</code> (tr\u1eeb), <code>*</code> (nh\u00e2n), <code>/</code> (chia).</li> <li><code>%</code> (chia l\u1ea5y d\u01b0 - modulo).</li> <li><code>**</code> (l\u0169y th\u1eeba - exponentiation).</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let x = 10;\nlet y = 5;\nconsole.log(x + y); // 15 (c\u1ed9ng)\nconsole.log(x - y); // 5 (tr\u1eeb)\nconsole.log(x * y); // 50 (nh\u00e2n)\nconsole.log(x / y); // 2 (chia)\nconsole.log(x % y); // 0 (chia l\u1ea5y d\u01b0)\nconsole.log(x ** y); // 100000 (10 m\u0169 5)\n</code></pre>"},{"location":"js/#toan-tu-voi-tien-to-hau-to-prefix-postfix-trong-javascript","title":"To\u00e1n t\u1eed ++\u00a0 -- v\u1edbi ti\u1ec1n t\u1ed1 &amp; h\u1eadu t\u1ed1 (Prefix &amp; Postfix) trong JavaScript","text":"<p>To\u00e1n t\u1eed t\u0103ng/gi\u1ea3m (<code>++</code>, <code>--</code>) t\u0103ng ho\u1eb7c gi\u1ea3m gi\u00e1 tr\u1ecb bi\u1ebfn \u0111i 1.</p> <ul> <li>Prefix (++x, --x): T\u0103ng/gi\u1ea3m gi\u00e1 tr\u1ecb tr\u01b0\u1edbc khi s\u1eed d\u1ee5ng gi\u00e1 tr\u1ecb \u0111\u00f3 trong bi\u1ec3u th\u1ee9c.</li> <li>Postfix (x++, x--): T\u0103ng/gi\u1ea3m gi\u00e1 tr\u1ecb sau khi s\u1eed d\u1ee5ng gi\u00e1 tr\u1ecb \u0111\u00f3 trong bi\u1ec3u th\u1ee9c.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let a = 5;\nlet b = ++a; // Prefix: a t\u0103ng l\u00ean 6 tr\u01b0\u1edbc, sau \u0111\u00f3 b = 6\nconsole.log(\"a:\", a, \"b:\", b); // a: 6 b: 6\n\nlet c = 5;\nlet d = c++; // Postfix: d = 5 tr\u01b0\u1edbc, sau \u0111\u00f3 c t\u0103ng l\u00ean 6\nconsole.log(\"c:\", c, \"d:\", d); // c: 6 d: 5\n</code></pre>"},{"location":"js/#toan-tu-gan-trong-javascript","title":"To\u00e1n t\u1eed g\u00e1n trong JavaScript","text":"<p>To\u00e1n t\u1eed g\u00e1n g\u00e1n gi\u00e1 tr\u1ecb cho bi\u1ebfn.</p> <ul> <li><code>=</code> (g\u00e1n tr\u1ef1c ti\u1ebfp).</li> <li><code>+=</code>, <code>-=</code>, <code>*=</code>, <code>/=</code>, <code>%=</code> (g\u00e1n k\u1ebft h\u1ee3p ph\u00e9p to\u00e1n).</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let num = 10;\nnum = 20; // G\u00e1n tr\u1ef1c ti\u1ebfp num = 20\nnum += 5; // num = num + 5 (num = 25)\nnum -= 3; // num = num - 3 (num = 22)\nnum *= 2; // num = num * 2 (num = 44)\nnum /= 4; // num = num / 4 (num = 11)\nnum %= 3; // num = num % 3 (num = 2 - d\u01b0 c\u1ee7a 11 chia 3)\nconsole.log(num); // 2\n</code></pre>"},{"location":"js/#toan-tu-chuoi-string-operator-trong-javascript","title":"To\u00e1n t\u1eed chu\u1ed7i (String Operator) trong JavaScript","text":"<p>To\u00e1n t\u1eed chu\u1ed7i ch\u00ednh l\u00e0 to\u00e1n t\u1eed <code>+</code> (c\u1ed9ng) d\u00f9ng \u0111\u1ec3 n\u1ed1i chu\u1ed7i (concatenation).</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let firstName = \"Gemini\";\nlet lastName = \"AI\";\nlet fullName = firstName + \" \" + lastName; // N\u1ed1i chu\u1ed7i\nconsole.log(fullName); // Gemini AI\n</code></pre>"},{"location":"js/#toan-tu-so-sanh-trong-javascript-phan-1","title":"To\u00e1n t\u1eed so s\u00e1nh trong Javascript (ph\u1ea7n 1)","text":"<p>To\u00e1n t\u1eed so s\u00e1nh so s\u00e1nh hai gi\u00e1 tr\u1ecb v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb boolean (<code>true</code> ho\u1eb7c <code>false</code>). * <code>==</code> (b\u1eb1ng gi\u00e1 tr\u1ecb - loose equality): So s\u00e1nh gi\u00e1 tr\u1ecb, c\u00f3 th\u1ec3 \u00e9p ki\u1ec3u d\u1eef li\u1ec7u. * <code>===</code> (b\u1eb1ng gi\u00e1 tr\u1ecb v\u00e0 ki\u1ec3u d\u1eef li\u1ec7u - strict equality): So s\u00e1nh c\u1ea3 gi\u00e1 tr\u1ecb v\u00e0 ki\u1ec3u d\u1eef li\u1ec7u, kh\u00f4ng \u00e9p ki\u1ec3u. N\u00ean d\u00f9ng <code>===</code> \u0111\u1ec3 so s\u00e1nh ch\u00ednh x\u00e1c. * <code>!=</code> (kh\u00f4ng b\u1eb1ng gi\u00e1 tr\u1ecb - loose inequality). * <code>!==</code> (kh\u00f4ng b\u1eb1ng gi\u00e1 tr\u1ecb ho\u1eb7c ki\u1ec3u d\u1eef li\u1ec7u - strict inequality). * <code>&gt;</code> (l\u1edbn h\u01a1n), <code>&lt;</code> (nh\u1ecf h\u01a1n), <code>&gt;=</code> (l\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng), <code>&lt;=</code> (nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng).</p>"},{"location":"js/#kieu-du-lieu-boolean-boolean-data-type-trong-javascript","title":"Ki\u1ec3u d\u1eef li\u1ec7u Boolean (Boolean data type) trong JavaScript","text":"<p>Boolean l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u logic ch\u1ec9 c\u00f3 2 gi\u00e1 tr\u1ecb: <code>true</code> (\u0111\u00fang) v\u00e0 <code>false</code> (sai). Th\u01b0\u1eddng d\u00f9ng trong c\u00e2u l\u1ec7nh \u0111i\u1ec1u ki\u1ec7n v\u00e0 to\u00e1n t\u1eed logic.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let isAdult = true;\nlet isRaining = false;\nconsole.log(typeof(isAdult)); // \"boolean\"\nconsole.log(isRaining); // false\n</code></pre>"},{"location":"js/#cau-lenh-ieu-kien-if-else-trong-javascript","title":"C\u00e2u l\u1ec7nh \u0111i\u1ec1u ki\u1ec7n If - Else trong JavaScript","text":"<p>C\u00e2u l\u1ec7nh <code>if...else</code> th\u1ef1c hi\u1ec7n code kh\u00e1c nhau d\u1ef1a tr\u00ean \u0111i\u1ec1u ki\u1ec7n \u0111\u00fang hay sai.</p> <ul> <li><code>if (condition) { ... }</code>: N\u1ebfu <code>condition</code> \u0111\u00fang (<code>true</code>), code trong block <code>if</code> \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n.</li> <li><code>else { ... }</code>: N\u1ebfu <code>condition</code> sai (<code>false</code>), code trong block <code>else</code> \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n (t\u00f9y ch\u1ecdn).</li> <li><code>else if (condition2) { ... }</code>: Ki\u1ec3m tra th\u00eam \u0111i\u1ec1u ki\u1ec7n n\u1ebfu \u0111i\u1ec1u ki\u1ec7n <code>if</code> sai (c\u00f3 th\u1ec3 c\u00f3 nhi\u1ec1u <code>else if</code>).</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let age = 18;\nif (age &gt;= 18) {\n    console.log(\"B\u1ea1n \u0111\u00e3 \u0111\u1ee7 tu\u1ed5i tr\u01b0\u1edfng th\u00e0nh.\");\n} else {\n    console.log(\"B\u1ea1n ch\u01b0a \u0111\u1ee7 tu\u1ed5i tr\u01b0\u1edfng th\u00e0nh.\");\n}\n</code></pre> <p>Ho\u1eb7c k\u1ebft h\u1ee3p v\u1edbi to\u00e1n t\u1eed logic \u0111\u1ec3 t\u1ea1o ra nh\u1eefng \u0111i\u1ec1u ki\u1ec7n ph\u1ee9c t\u1ea1p h\u01a1n. T\u00f3m t\u1eaft qua v\u1ec1 to\u00e1n t\u1eed logic:</p> <ul> <li><code>&amp;&amp;</code> (AND - v\u00e0): <code>true</code> n\u1ebfu c\u1ea3 hai to\u00e1n h\u1ea1ng \u0111\u1ec1u <code>true</code>.</li> <li><code>||</code> (OR - ho\u1eb7c): <code>true</code> n\u1ebfu \u00edt nh\u1ea5t m\u1ed9t to\u00e1n h\u1ea1ng l\u00e0 <code>true</code>.</li> <li><code>!</code> (NOT - ph\u1ee7 \u0111\u1ecbnh): \u0110\u1ea3o ng\u01b0\u1ee3c gi\u00e1 tr\u1ecb boolean (<code>!true</code> l\u00e0 <code>false</code>, <code>!false</code> l\u00e0 <code>true</code>).</li> </ul> <pre><code>let age = 20;\nlet hasTicket = true;\nif (age &gt;= 18 &amp;&amp; hasTicket) { // V\u1eeba \u0111\u1ee7 tu\u1ed5i, v\u1eeba c\u00f3 v\u00e9\n    console.log(\"\u0110\u01b0\u1ee3c v\u00e0o xem phim.\");\n} else {\n    console.log(\"Kh\u00f4ng \u0111\u01b0\u1ee3c v\u00e0o xem phim.\");\n}\n</code></pre> <p>Ho\u1eb7c: </p> <pre><code>let hasLicense = true;\nlet hasCar = false;\nif (hasLicense &amp;&amp; hasCar) { // C\u1ea3 hai ph\u1ea3i true\n    console.log(\"\u0110\u1ee7 \u0111i\u1ec1u ki\u1ec7n l\u00e1i xe.\");\n} else if (hasLicense || hasCar) { // \u00cdt nh\u1ea5t m\u1ed9t true\n    console.log(\"C\u00f3 m\u1ed9t trong hai \u0111i\u1ec1u ki\u1ec7n.\");\n} else {\n    console.log(\"Kh\u00f4ng \u0111\u1ee7 \u0111i\u1ec1u ki\u1ec7n.\");\n}\nconsole.log(!hasLicense); // false (ph\u1ee7 \u0111\u1ecbnh true)\n</code></pre>"},{"location":"js/#kieu-du-lieu-trong-javascript","title":"Ki\u1ec3u d\u1eef li\u1ec7u trong JavaScript","text":"<p>JavaScript l\u00e0 ng\u00f4n ng\u1eef ki\u1ec3u d\u1eef li\u1ec7u \u0111\u1ed9ng (dynamic typing), ki\u1ec3u d\u1eef li\u1ec7u c\u1ee7a bi\u1ebfn \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh khi ch\u1ea1y ch\u01b0\u01a1ng tr\u00ecnh, kh\u00f4ng c\u1ea7n khai b\u00e1o r\u00f5 r\u00e0ng. C\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n: * <code>Number</code> (s\u1ed1): S\u1ed1 nguy\u00ean, s\u1ed1 th\u1ef1c. s\u1ed1 float c\u0169ng t\u00ednh lu\u00f4n * <code>String</code> (chu\u1ed7i): V\u0103n b\u1ea3n. * <code>Boolean</code> (boolean): <code>true</code> ho\u1eb7c <code>false</code>. * <code>Null</code>: Gi\u00e1 tr\u1ecb r\u1ed7ng c\u00f3 ch\u1ee7 \u00fd. * <code>Undefined</code>: Bi\u1ebfn \u0111\u00e3 khai b\u00e1o nh\u01b0ng ch\u01b0a g\u00e1n gi\u00e1 tr\u1ecb. * <code>Symbol</code> (ES6): Gi\u00e1 tr\u1ecb duy nh\u1ea5t, th\u01b0\u1eddng d\u00f9ng l\u00e0m key object. * <code>Object</code> (\u0111\u1ed1i t\u01b0\u1ee3ng): T\u1eadp h\u1ee3p c\u00e1c c\u1eb7p key-value.</p>"},{"location":"js/#chuoi-trong-javascript","title":"Chu\u1ed7i trong JavaScript","text":"<p>Chu\u1ed7i (string) l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u v\u0103n b\u1ea3n trong JavaScript, \u0111\u01b0\u1ee3c bao quanh b\u1edfi d\u1ea5u nh\u00e1y \u0111\u01a1n (<code>'...'</code>), nh\u00e1y k\u00e9p (<code>\"...\"</code>) ho\u1eb7c backtick (`...`). Backtick d\u00f9ng cho template literals (chu\u1ed7i template).</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let singleQuoteString = 'Chu\u1ed7i nh\u00e1y \u0111\u01a1n';\nlet doubleQuoteString = \"Chu\u1ed7i nh\u00e1y k\u00e9p\";\nlet templateString = `Chu\u1ed7i template literals`; // Backtick\nconsole.log(singleQuoteString);\nconsole.log(doubleQuoteString);\nconsole.log(templateString);\n</code></pre>"},{"location":"js/#lam-viec-voi-chuoi-trong-javascript","title":"L\u00e0m vi\u1ec7c v\u1edbi chu\u1ed7i trong JavaScript","text":"<p>String methods (ph\u01b0\u01a1ng th\u1ee9c chu\u1ed7i) l\u00e0 c\u00e1c h\u00e0m c\u00f3 s\u1eb5n \u0111\u1ec3 thao t\u00e1c v\u1edbi chu\u1ed7i. V\u00ed d\u1ee5 (Kh\u00f4ng c\u1ea7n ph\u1ea3i h\u1ecdc thu\u1ed9c \u0111\u00e2u :D):</p> <ul> <li><code>length</code>: Thu\u1ed9c t\u00ednh l\u1ea5y \u0111\u1ed9 d\u00e0i chu\u1ed7i.</li> <li><code>charAt(index)</code>: L\u1ea5y k\u00fd t\u1ef1 t\u1ea1i v\u1ecb tr\u00ed index.</li> <li><code>indexOf(substring)</code>: T\u00ecm v\u1ecb tr\u00ed \u0111\u1ea7u ti\u00ean c\u1ee7a substring.</li> <li><code>lastIndexOf(substring)</code>: T\u00ecm v\u1ecb tr\u00ed cu\u1ed1i c\u00f9ng c\u1ee7a substring.</li> <li><code>slice(start, end)</code>: C\u1eaft chu\u1ed7i t\u1eeb v\u1ecb tr\u00ed start \u0111\u1ebfn end (kh\u00f4ng bao g\u1ed3m end).</li> <li><code>substring(start, end)</code>: T\u01b0\u01a1ng t\u1ef1 <code>slice</code>.</li> <li><code>toUpperCase()</code>, <code>toLowerCase()</code>: Chuy\u1ec3n chu\u1ed7i th\u00e0nh ch\u1eef hoa, ch\u1eef th\u01b0\u1eddng.</li> <li><code>trim()</code>: X\u00f3a kho\u1ea3ng tr\u1eafng \u0111\u1ea7u v\u00e0 cu\u1ed1i chu\u1ed7i.</li> <li><code>split(delimiter)</code>: Chia chu\u1ed7i th\u00e0nh m\u1ea3ng c\u00e1c chu\u1ed7i con d\u1ef1a tr\u00ean delimiter.</li> <li><code>replace(oldValue, newValue)</code>: Thay th\u1ebf chu\u1ed7i con oldValue b\u1eb1ng newValue.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let message = \"  Hello World!  \";\nconsole.log(message.length); // 15 (\u0111\u1ed9 d\u00e0i chu\u1ed7i)\nconsole.log(message.charAt(0)); // \" \" (k\u00fd t\u1ef1 \u0111\u1ea7u ti\u00ean)\nconsole.log(message.indexOf(\"World\")); // 7 (v\u1ecb tr\u00ed c\u1ee7a \"World\")\nconsole.log(message.slice(2, 7)); // \"Hello\" (c\u1eaft t\u1eeb v\u1ecb tr\u00ed 2 \u0111\u1ebfn 6)\nconsole.log(message.toUpperCase()); // \"  HELLO WORLD!  \"\nconsole.log(message.trim()); // \"Hello World!\" (x\u00f3a kho\u1ea3ng tr\u1eafng)\nconsole.log(message.split(\" \")); // [\"\", \"\", \"Hello\", \"World!\", \"\", \"\"] (chia th\u00e0nh m\u1ea3ng)\nconsole.log(message.replace(\"World\", \"JavaScript\")); // \"  Hello JavaScript!  \"\n</code></pre>"},{"location":"js/#so-va-lam-viec-voi-kieu-so-trong-javascript","title":"S\u1ed1 v\u00e0 l\u00e0m vi\u1ec7c v\u1edbi ki\u1ec3u s\u1ed1 trong JavaScript","text":"<p>Number methods (ph\u01b0\u01a1ng th\u1ee9c s\u1ed1) l\u00e0 c\u00e1c h\u00e0m c\u00f3 s\u1eb5n \u0111\u1ec3 thao t\u00e1c v\u1edbi s\u1ed1. V\u00ed d\u1ee5:</p> <ul> <li><code>toFixed(digits)</code>: \u0110\u1ecbnh d\u1ea1ng s\u1ed1 th\u1eadp ph\u00e2n v\u1edbi <code>digits</code> ch\u1eef s\u1ed1 sau d\u1ea5u ph\u1ea9y.</li> <li><code>parseInt()</code>, <code>parseFloat()</code>: Chuy\u1ec3n \u0111\u1ed5i chu\u1ed7i sang s\u1ed1 nguy\u00ean, s\u1ed1 th\u1ef1c.</li> <li><code>isNaN()</code>: Ki\u1ec3m tra xem c\u00f3 ph\u1ea3i NaN (Not-a-Number) kh\u00f4ng.</li> <li><code>Number.isInteger()</code>: Ki\u1ec3m tra xem c\u00f3 ph\u1ea3i s\u1ed1 nguy\u00ean kh\u00f4ng.</li> <li><code>Math.random()</code>: Sinh s\u1ed1 ng\u1eabu nhi\u00ean t\u1eeb 0 \u0111\u1ebfn \\&lt; 1.</li> <li><code>Math.floor()</code>, <code>Math.ceil()</code>, <code>Math.round()</code>: L\u00e0m tr\u00f2n s\u1ed1 xu\u1ed1ng, l\u00ean, g\u1ea7n nh\u1ea5t.</li> <li><code>Math.max()</code>, <code>Math.min()</code>: T\u00ecm s\u1ed1 l\u1edbn nh\u1ea5t, nh\u1ecf nh\u1ea5t.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let pi = 3.14159;\nconsole.log(pi.toFixed(2)); // \"3.14\" (l\u00e0m tr\u00f2n \u0111\u1ebfn 2 ch\u1eef s\u1ed1 th\u1eadp ph\u00e2n)\nlet numString = \"42\";\nlet numInt = parseInt(numString); // 42 (chuy\u1ec3n sang s\u1ed1 nguy\u00ean)\nconsole.log(isNaN(\"hello\")); // true (kh\u00f4ng ph\u1ea3i s\u1ed1)\nconsole.log(Number.isInteger(10)); // true (s\u1ed1 nguy\u00ean)\nconsole.log(Math.random()); // S\u1ed1 ng\u1eabu nhi\u00ean (v\u00ed d\u1ee5: 0.567...)\nconsole.log(Math.floor(3.9)); // 3 (l\u00e0m tr\u00f2n xu\u1ed1ng)\nconsole.log(Math.max(1, 5, 2)); // 5 (s\u1ed1 l\u1edbn nh\u1ea5t)\n</code></pre>"},{"location":"js/#mang-trong-javascript","title":"M\u1ea3ng trong JavaScript","text":"<p>M\u1ea3ng (array) l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u danh s\u00e1ch, ch\u1ee9a nhi\u1ec1u gi\u00e1 tr\u1ecb theo th\u1ee9 t\u1ef1. C\u00e1c ph\u1ea7n t\u1eed m\u1ea3ng c\u00f3 th\u1ec3 c\u00f3 ki\u1ec3u d\u1eef li\u1ec7u kh\u00e1c nhau. M\u1ea3ng \u0111\u01b0\u1ee3c khai b\u00e1o b\u1eb1ng d\u1ea5u ngo\u1eb7c vu\u00f4ng <code>[...]</code>.</p> <p>V\u00ed d\u1ee5:</p> <p><pre><code>let colors = [\"red\", \"green\", \"blue\"]; // M\u1ea3ng chu\u1ed7i\nlet numbers = [1, 2, 3, 4, 5]; // M\u1ea3ng s\u1ed1\nlet mixedArray = [1, \"hello\", true, null]; // M\u1ea3ng h\u1ed7n h\u1ee3p, c\u00e1i n\u00e0y HO\u00c0N TO\u00c0N \u0110\u01af\u1ee2C NHA\nconsole.log(colors[0]); // \"red\" (ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean, index 0)\nconsole.log(numbers.length); // 5 (\u0111\u1ed9 d\u00e0i m\u1ea3ng)\n</code></pre> C\u00e1c thao t\u00e1c c\u01a1 b\u1ea3n v\u1edbi m\u1ea3ng:</p> <ul> <li>Truy c\u1eadp ph\u1ea7n t\u1eed: <code>array[index]</code>.</li> <li>S\u1eeda \u0111\u1ed5i ph\u1ea7n t\u1eed: <code>array[index] = newValue;</code>.</li> <li>Th\u00eam ph\u1ea7n t\u1eed:<ul> <li><code>push(element)</code>: Th\u00eam v\u00e0o cu\u1ed1i m\u1ea3ng.</li> <li><code>unshift(element)</code>: Th\u00eam v\u00e0o \u0111\u1ea7u m\u1ea3ng.</li> </ul> </li> <li>X\u00f3a ph\u1ea7n t\u1eed:<ul> <li><code>pop()</code>: X\u00f3a ph\u1ea7n t\u1eed cu\u1ed1i m\u1ea3ng v\u00e0 tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eed \u0111\u00f3.</li> <li><code>shift()</code>: X\u00f3a ph\u1ea7n t\u1eed \u0111\u1ea7u m\u1ea3ng v\u00e0 tr\u1ea3 v\u1ec1 ph\u1ea7n t\u1eed \u0111\u00f3.</li> <li><code>splice(startIndex, deleteCount, item1, item2, ...)</code>: X\u00f3a v\u00e0/ho\u1eb7c th\u00eam ph\u1ea7n t\u1eed t\u1ea1i v\u1ecb tr\u00ed b\u1ea5t k\u1ef3.</li> </ul> </li> </ul> <pre><code>let fruits = [\"apple\", \"banana\", \"orange\"];\nconsole.log(fruits[1]); // \"banana\"\nfruits[1] = \"grape\"; // S\u1eeda \u0111\u1ed5i ph\u1ea7n t\u1eed\nconsole.log(fruits); // [\"apple\", \"grape\", \"orange\"]\nfruits.push(\"mango\"); // Th\u00eam v\u00e0o cu\u1ed1i\nconsole.log(fruits); // [\"apple\", \"grape\", \"orange\", \"mango\"]\nfruits.unshift(\"kiwi\"); // Th\u00eam v\u00e0o \u0111\u1ea7u\nconsole.log(fruits); // [\"kiwi\", \"apple\", \"grape\", \"orange\", \"mango\"]\nlet lastFruit = fruits.pop(); // X\u00f3a cu\u1ed1i\nconsole.log(lastFruit); // \"mango\"\nconsole.log(fruits); // [\"kiwi\", \"apple\", \"grape\", \"orange\"]\nfruits.splice(1, 2, \"pear\", \"melon\"); // X\u00f3a 2 ph\u1ea7n t\u1eed t\u1eeb index 1, th\u00eam \"pear\", \"melon\"\nconsole.log(fruits); // [\"kiwi\", \"pear\", \"melon\", \"orange\"]\n</code></pre>"},{"location":"js/#ham-trong-javascript","title":"H\u00e0m trong JavaScript","text":"<p>H\u00e0m (function) l\u00e0 kh\u1ed1i code th\u1ef1c hi\u1ec7n m\u1ed9t t\u00e1c v\u1ee5 c\u1ee5 th\u1ec3, c\u00f3 th\u1ec3 t\u00e1i s\u1eed d\u1ee5ng nhi\u1ec1u l\u1ea7n. Gi\u00fap code c\u00f3 c\u1ea5u tr\u00fac, d\u1ec5 \u0111\u1ecdc, d\u1ec5 b\u1ea3o tr\u00ec. Khai b\u00e1o h\u00e0m:</p> <pre><code>function functionName(parameter1, parameter2, ...) {\n    // Code th\u1ef1c hi\u1ec7n trong h\u00e0m\n    // ...\n    return value; // (t\u00f9y ch\u1ecdn, tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb)\n}\n</code></pre> <p>G\u1ecdi h\u00e0m: <code>functionName(argument1, argument2, ...);</code></p> <p>V\u00ed d\u1ee5:</p> <pre><code>function add(a, b) { // H\u00e0m c\u1ed9ng hai s\u1ed1\n    return a + b;\n}\n\nlet sum = add(5, 3); // G\u1ecdi h\u00e0m add v\u1edbi \u0111\u1ed1i s\u1ed1 5 v\u00e0 3\nconsole.log(sum); // 8\n</code></pre>"},{"location":"js/#tham-so-trong-ham","title":"Tham s\u1ed1 trong h\u00e0m","text":"<p>Tham s\u1ed1 (parameter) l\u00e0 bi\u1ebfn \u0111\u01b0\u1ee3c khai b\u00e1o trong \u0111\u1ecbnh ngh\u0129a h\u00e0m, d\u00f9ng \u0111\u1ec3 nh\u1eadn gi\u00e1 tr\u1ecb \u0111\u1ea7u v\u00e0o khi g\u1ecdi h\u00e0m. \u0110\u1ed1i s\u1ed1 (argument) l\u00e0 gi\u00e1 tr\u1ecb th\u1ef1c t\u1ebf \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o khi g\u1ecdi h\u00e0m.</p> <p>V\u00ed d\u1ee5: (v\u00ed d\u1ee5 tr\u00ean \u0111\u00e3 c\u00f3 tham s\u1ed1)</p> <pre><code>function greet(name) { // 'name' l\u00e0 tham s\u1ed1\n    console.log(\"Xin ch\u00e0o, \" + name + \"!\");\n}\n\ngreet(\"Gemini\"); // \"Gemini\" l\u00e0 \u0111\u1ed1i s\u1ed1\ngreet(\"User\"); // \"User\" l\u00e0 \u0111\u1ed1i s\u1ed1\n</code></pre>"},{"location":"js/#return-trong-ham-js","title":"Return trong h\u00e0m JS","text":"<p>C\u00e2u l\u1ec7nh <code>return</code> trong h\u00e0m d\u00f9ng \u0111\u1ec3 tr\u1ea3 v\u1ec1 m\u1ed9t gi\u00e1 tr\u1ecb t\u1eeb h\u00e0m. H\u00e0m c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 b\u1ea5t k\u1ef3 ki\u1ec3u d\u1eef li\u1ec7u n\u00e0o (s\u1ed1, chu\u1ed7i, m\u1ea3ng, object...). N\u1ebfu kh\u00f4ng c\u00f3 <code>return</code>, h\u00e0m tr\u1ea3 v\u1ec1 <code>undefined</code>.</p> <p>V\u00ed d\u1ee5: (v\u00ed d\u1ee5 h\u00e0m <code>add</code> v\u00e0 <code>greet</code> tr\u00ean \u0111\u00e3 c\u00f3 return v\u00e0 kh\u00f4ng return)</p> <pre><code>function square(number) {\n    return number * number; // Tr\u1ea3 v\u1ec1 b\u00ecnh ph\u01b0\u01a1ng c\u1ee7a s\u1ed1\n}\n\nlet result = square(4);\nconsole.log(result); // 16\n\nfunction sayHello() { // Kh\u00f4ng c\u00f3 return\n    console.log(\"Hello!\");\n}\n\nlet greeting = sayHello();\nconsole.log(greeting); // undefined (h\u00e0m kh\u00f4ng tr\u1ea3 v\u1ec1 g\u00ec)\n</code></pre>"},{"location":"js/#cac-loai-function-trong-javascript","title":"C\u00e1c lo\u1ea1i function trong JavaScript","text":"<p>C\u00e1c lo\u1ea1i function trong JavaScript:</p> <ul> <li>Named function: H\u00e0m c\u00f3 t\u00ean, khai b\u00e1o b\u1eb1ng t\u1eeb kh\u00f3a <code>function</code>. (\u1edf tr\u00ean ch\u1eb3ng h\u1ea1n)</li> <li>Anonymous function: H\u00e0m kh\u00f4ng t\u00ean, th\u01b0\u1eddng d\u00f9ng g\u00e1n cho bi\u1ebfn ho\u1eb7c l\u00e0m callback.</li> <li>Arrow function (ES6): C\u00fa ph\u00e1p ng\u1eafn g\u1ecdn h\u01a1n cho anonymous function.</li> </ul> <pre><code>// Anonymous function g\u00e1n cho bi\u1ebfn\nlet multiply = function(a, b) {\n    return a * b;\n};\nconsole.log(multiply(3, 7)); // 21\n\n// Arrow function (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng h\u00e0m multiply \u1edf tr\u00ean)\nlet multiplyArrow = (a, b) =&gt; a * b;\nconsole.log(multiplyArrow(4, 6)); // 24\n\n// Callback function (anonymous function truy\u1ec1n v\u00e0o h\u00e0m kh\u00e1c)\nsetTimeout(function() {\n    console.log(\"Hello after 1 second\");\n}, 1000);\n\n// Callback function (arrow function)\nsetTimeout(() =&gt; {\n    console.log(\"Hello again after 2 seconds\");\n}, 2000);\n</code></pre>"},{"location":"js/#object-trong-javascript","title":"Object trong JavaScript","text":"<p>Object (\u0111\u1ed1i t\u01b0\u1ee3ng) l\u00e0 ki\u1ec3u d\u1eef li\u1ec7u ph\u1ee9c t\u1ea1p trong JavaScript, bi\u1ec3u di\u1ec5n m\u1ed9t th\u1ef1c th\u1ec3 c\u00f3 thu\u1ed9c t\u00ednh (properties) v\u00e0 ph\u01b0\u01a1ng th\u1ee9c (methods). Object l\u00e0 t\u1eadp h\u1ee3p c\u00e1c c\u1eb7p key-value, key l\u00e0 chu\u1ed7i (ho\u1eb7c Symbol), value c\u00f3 th\u1ec3 l\u00e0 b\u1ea5t k\u1ef3 ki\u1ec3u d\u1eef li\u1ec7u n\u00e0o. Object \u0111\u01b0\u1ee3c khai b\u00e1o b\u1eb1ng d\u1ea5u ngo\u1eb7c nh\u1ecdn <code>{...}</code>.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let person = {\n    name: \"Gemini\", // Thu\u1ed9c t\u00ednh name\n    age: 2,        // Thu\u1ed9c t\u00ednh age\n    isRobot: true,  // Thu\u1ed9c t\u00ednh isRobot\n    greet: function() { // Ph\u01b0\u01a1ng th\u1ee9c greet\n        console.log(\"Xin ch\u00e0o, t\u00f4i l\u00e0 \" + this.name);\n    }\n};\n\nconsole.log(person.name); // \"Gemini\" (truy c\u1eadp thu\u1ed9c t\u00ednh b\u1eb1ng d\u1ea5u ch\u1ea5m)\nconsole.log(person[\"age\"]); // 2 (truy c\u1eadp thu\u1ed9c t\u00ednh b\u1eb1ng d\u1ea5u ngo\u1eb7c vu\u00f4ng)\nperson.greet(); // G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c greet\n</code></pre>"},{"location":"js/#object-constructor-ham-tao-oi-tuong","title":"Object constructor (h\u00e0m t\u1ea1o \u0111\u1ed1i t\u01b0\u1ee3ng)","text":"<p>L\u00e0 h\u00e0m \u0111\u1eb7c bi\u1ec7t d\u00f9ng \u0111\u1ec3 t\u1ea1o ra c\u00e1c object c\u00f9ng lo\u1ea1i (c\u00f9ng c\u1ea5u tr\u00fac thu\u1ed9c t\u00ednh v\u00e0 ph\u01b0\u01a1ng th\u1ee9c). D\u00f9ng t\u1eeb kh\u00f3a <code>new</code> \u0111\u1ec3 g\u1ecdi constructor.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>function Dog(name, breed) { // Constructor Dog\n    this.name = name;\n    this.breed = breed;\n    this.bark = function() {\n        console.log(\"Woof!\");\n    };\n}\n\nlet myDog = new Dog(\"Lucky\", \"Golden Retriever\"); // T\u1ea1o object Dog b\u1eb1ng constructor\nconsole.log(myDog.name); // \"Lucky\"\nmyDog.bark(); // G\u1ecdi ph\u01b0\u01a1ng th\u1ee9c bark\n</code></pre>"},{"location":"js/#object-prototype-co-ban","title":"Object prototype (c\u01a1 b\u1ea3n)","text":"<p>Every object in JavaScript has a built-in property, which is called its prototype. The prototype is itself an object, so the prototype will have its own prototype, making what's called a prototype chain. The chain ends when we reach a prototype that has null for its own prototype.</p> <p><pre><code>const myObject = {\n  city: \"Madrid\",\n  greet() {\n    console.log(`Greetings from ${this.city}`);\n  },\n};\n\nmyObject.greet(); // Greetings from Madrid\nmyObject.toString(); // \"[object Object]\"\nObject.getPrototypeOf(myObject); // Object { }\n</code></pre> Th\u1eed li\u1ec7t k\u00ea to\u00e0n b\u1ed9? N\u00f3 s\u1ebd tr\u00f4ng th\u1ebf n\u00e0y:</p> <pre><code>__defineGetter__\n__defineSetter__\n__lookupGetter__\n__lookupSetter__\n__proto__\ncity\nconstructor\ngreet\nhasOwnProperty\nisPrototypeOf\npropertyIsEnumerable\ntoLocaleString\ntoString\nvalueOf\n</code></pre>"},{"location":"js/#date-object-trong-javascript","title":"Date object trong JavaScript","text":"<p>Date object (\u0111\u1ed1i t\u01b0\u1ee3ng Date) d\u00f9ng \u0111\u1ec3 l\u00e0m vi\u1ec7c v\u1edbi ng\u00e0y v\u00e0 gi\u1edd trong JavaScript. T\u1ea1o Date object b\u1eb1ng <code>new Date()</code>.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let now = new Date(); // Date object hi\u1ec7n t\u1ea1i\nconsole.log(now); // In ra ng\u00e0y gi\u1edd hi\u1ec7n t\u1ea1i\n\nlet specificDate = new Date(2025, 2, 26); // Date object cho ng\u00e0y 26/03/2025 (th\u00e1ng b\u1eaft \u0111\u1ea7u t\u1eeb 0)\nconsole.log(specificDate);\n\nconsole.log(now.getFullYear()); // L\u1ea5y n\u0103m\nconsole.log(now.getMonth()); // L\u1ea5y th\u00e1ng (0-11)\nconsole.log(now.getDate()); // L\u1ea5y ng\u00e0y\nconsole.log(now.getHours()); // L\u1ea5y gi\u1edd\nconsole.log(now.getMinutes()); // L\u1ea5y ph\u00fat\n</code></pre>"},{"location":"js/#switch-trong-javascript","title":"Switch trong JavaScript","text":"<p>C\u00e2u l\u1ec7nh <code>switch...case</code> l\u00e0 m\u1ed9t c\u00e1ch kh\u00e1c \u0111\u1ec3 r\u1ebd nh\u00e1nh ch\u01b0\u01a1ng tr\u00ecnh d\u1ef1a tr\u00ean gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t bi\u1ec3u th\u1ee9c. Th\u01b0\u1eddng d\u00f9ng khi c\u00f3 nhi\u1ec1u tr\u01b0\u1eddng h\u1ee3p (case) c\u00f3 th\u1ec3 x\u1ea3y ra.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let dayOfWeek = 3; // 1: Th\u1ee9 Hai, 2: Th\u1ee9 Ba, ..., 7: Ch\u1ee7 Nh\u1eadt\nlet dayName;\n\nswitch (dayOfWeek) {\n    case 1:\n        dayName = \"Th\u1ee9 Hai\";\n        break;\n    case 2:\n        dayName = \"Th\u1ee9 Ba\";\n        break;\n    case 3:\n        dayName = \"Th\u1ee9 T\u01b0\";\n        break;\n    case 4:\n        dayName = \"Th\u1ee9 N\u0103m\";\n        break;\n    case 5:\n        dayName = \"Th\u1ee9 S\u00e1u\";\n        break;\n    case 6:\n        dayName = \"Th\u1ee9 B\u1ea3y\";\n        break;\n    case 7:\n        dayName = \"Ch\u1ee7 Nh\u1eadt\";\n        break;\n    default:\n        dayName = \"Kh\u00f4ng h\u1ee3p l\u1ec7\";\n}\n\nconsole.log(\"H\u00f4m nay l\u00e0 \" + dayName); // H\u00f4m nay l\u00e0 Th\u1ee9 T\u01b0\n</code></pre>"},{"location":"js/#toan-tu-3-ngoi-ternary-operator-trong-javascript","title":"To\u00e1n t\u1eed 3 ng\u00f4i (ternary operator) trong JavaScript","text":"<p>To\u00e1n t\u1eed 3 ng\u00f4i (ternary operator) <code>condition ? valueIfTrue : valueIfFalse</code> l\u00e0 c\u00fa ph\u00e1p r\u00fat g\u1ecdn c\u1ee7a c\u00e2u l\u1ec7nh <code>if...else</code> khi ch\u1ec9 c\u00f3 m\u1ed9t \u0111i\u1ec1u ki\u1ec7n v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t trong hai gi\u00e1 tr\u1ecb.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let age = 15;\nlet message = age &gt;= 16 ? \"\u0110\u1ee7 tu\u1ed5i\" : \"Ch\u01b0a \u0111\u1ee7 tu\u1ed5i\"; // To\u00e1n t\u1eed 3 ng\u00f4i\nconsole.log(message); // \"Ch\u01b0a \u0111\u1ee7 tu\u1ed5i\"\n\n// T\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi if...else:\nlet message2;\nif (age &gt;= 18) {\n    message2 = \"\u0110\u1ee7 tu\u1ed5i\";\n} else {\n    message2 = \"Ch\u01b0a \u0111\u1ee7 tu\u1ed5i\";\n}\nconsole.log(message2); // \"Ch\u01b0a \u0111\u1ee7 tu\u1ed5i\"\n</code></pre>"},{"location":"js/#vong-lap-trong-javascript","title":"V\u00f2ng l\u1eb7p trong JavaScript","text":"<p>\u0110\u1ec3 l\u1eb7p \u0111i l\u1eb7p l\u1ea1i m\u1ed9t c\u00e1i g\u00ec \u0111\u00f3.... m\u1ed9t s\u1ed1 ki\u1ec3u v\u00f2ng l\u1eb7p trong JS:</p> <ul> <li><code>for</code> loop.</li> <li><code>for...in</code> loop (l\u1eb7p qua thu\u1ed9c t\u00ednh c\u1ee7a object).</li> <li><code>for...of</code> loop (l\u1eb7p qua gi\u00e1 tr\u1ecb c\u1ee7a iterable object - m\u1ea3ng, chu\u1ed7i...).</li> <li><code>while</code> loop.</li> <li><code>do...while</code> loop.</li> </ul> <p><code>for</code> loop c\u00f3 c\u00fa ph\u00e1p: <code>for (initialization; condition; increment/decrement) { ... }</code></p> <ul> <li><code>initialization</code>: Kh\u1edfi t\u1ea1o bi\u1ebfn \u0111\u1ebfm (ch\u1ea1y m\u1ed9t l\u1ea7n \u0111\u1ea7u ti\u00ean).</li> <li><code>condition</code>: \u0110i\u1ec1u ki\u1ec7n l\u1eb7p (ki\u1ec3m tra tr\u01b0\u1edbc m\u1ed7i l\u1ea7n l\u1eb7p, n\u1ebfu <code>true</code> th\u00ec l\u1eb7p ti\u1ebfp, <code>false</code> th\u00ec d\u1eebng).</li> <li><code>increment/decrement</code>: T\u0103ng/gi\u1ea3m bi\u1ebfn \u0111\u1ebfm sau m\u1ed7i l\u1ea7n l\u1eb7p.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>for (let i = 1; i &lt;= 5; i++) { // L\u1eb7p 5 l\u1ea7n, i t\u1eeb 1 \u0111\u1ebfn 5\n    console.log(\"L\u1ea7n l\u1eb7p th\u1ee9 \" + i);\n}\n</code></pre> <p><code>for...in</code> loop l\u1eb7p qua thu\u1ed9c t\u00ednh (key) c\u1ee7a m\u1ed9t object.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let person = {\n    name: \"Gemini\",\n    age: 2,\n    city: \"Internet\"\n};\n\nfor (let key in person) { // L\u1eb7p qua key c\u1ee7a object person\n    console.log(key + \": \" + person[key]);\n}\n\n// In ra:\n// name: Gemini\n// age: 2\n// city: Internet\n</code></pre> <p><code>for...of</code> loop l\u1eb7p qua gi\u00e1 tr\u1ecb c\u1ee7a m\u1ed9t iterable object (m\u1ea3ng, chu\u1ed7i, Map, Set...).</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let colors = [\"red\", \"green\", \"blue\"];\n\nfor (let color of colors) { // L\u1eb7p qua gi\u00e1 tr\u1ecb c\u1ee7a m\u1ea3ng colors\n    console.log(color);\n}\n// In ra:\n// red\n// green\n// blue\n\nlet message = \"Hello\";\nfor (let char of message) { // L\u1eb7p qua k\u00fd t\u1ef1 c\u1ee7a chu\u1ed7i message\n    console.log(char);\n}\n// In ra:\n// H\n// e\n// l\n// l\n// o\n</code></pre> <p><code>while</code> loop l\u1eb7p khi \u0111i\u1ec1u ki\u1ec7n c\u00f2n \u0111\u00fang (<code>true</code>). C\u00fa ph\u00e1p: <code>while (condition) { ... }</code></p> <p>V\u00ed d\u1ee5:</p> <pre><code>let count = 1;\nwhile (count &lt;= 5) { // L\u1eb7p khi count &lt;= 5\n    console.log(\"Count: \" + count);\n    count++; // T\u0103ng count sau m\u1ed7i l\u1ea7n l\u1eb7p\n}\n</code></pre> <p><code>do...while</code> loop t\u01b0\u01a1ng t\u1ef1 <code>while</code> loop, nh\u01b0ng code trong block <code>do</code> \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n \u00edt nh\u1ea5t m\u1ed9t l\u1ea7n tr\u01b0\u1edbc khi ki\u1ec3m tra \u0111i\u1ec1u ki\u1ec7n. C\u00fa ph\u00e1p: <code>do { ... } while (condition);</code></p> <p>V\u00ed d\u1ee5:</p> <pre><code>let num = 0;\ndo {\n    console.log(\"Num: \" + num);\n    num++;\n} while (num &lt; 3); // L\u1eb7p khi num &lt; 3\n// In ra:\n// Num: 0\n// Num: 1\n// Num: 2\n</code></pre> <p>break &amp; continue trong v\u00f2ng l\u1eb7p:</p> <ul> <li><code>break</code>: Tho\u00e1t kh\u1ecfi v\u00f2ng l\u1eb7p ngay l\u1eadp t\u1ee9c.</li> <li><code>continue</code>: B\u1ecf qua l\u1ea7n l\u1eb7p hi\u1ec7n t\u1ea1i v\u00e0 chuy\u1ec3n sang l\u1ea7n l\u1eb7p ti\u1ebfp theo.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>for (let i = 1; i &lt;= 10; i++) {\n    if (i === 5) {\n        break; // Tho\u00e1t kh\u1ecfi v\u00f2ng l\u1eb7p khi i = 5\n    }\n    console.log(\"i (break): \" + i); // In ra 1, 2, 3, 4\n}\n\nfor (let j = 1; j &lt;= 5; j++) {\n    if (j === 3) {\n        continue; // B\u1ecf qua l\u1ea7n l\u1eb7p khi j = 3\n    }\n    console.log(\"j (continue): \" + j); // In ra 1, 2, 4, 5 (b\u1ecf qua 3)\n}\n</code></pre>"},{"location":"js/#nested-loop","title":"Nested loop","text":"<p>Nested loop (v\u00f2ng l\u1eb7p l\u1ed3ng nhau) l\u00e0 v\u00f2ng l\u1eb7p b\u00ean trong v\u00f2ng l\u1eb7p kh\u00e1c. Th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 x\u1eed l\u00fd d\u1eef li\u1ec7u \u0111a chi\u1ec1u (v\u00ed d\u1ee5: ma tr\u1eadn, b\u1ea3ng).</p> <p>V\u00ed d\u1ee5:</p> <pre><code>for (let i = 1; i &lt;= 3; i++) { // V\u00f2ng l\u1eb7p ngo\u00e0i\n    console.log(\"V\u00f2ng l\u1eb7p ngo\u00e0i l\u1ea7n \" + i);\n    for (let j = 1; j &lt;= 2; j++) { // V\u00f2ng l\u1eb7p trong (l\u1eb7p 2 l\u1ea7n cho m\u1ed7i l\u1ea7n l\u1eb7p ngo\u00e0i)\n        console.log(\"  V\u00f2ng l\u1eb7p trong l\u1ea7n \" + j);\n    }\n}\n// In ra:\n// V\u00f2ng l\u1eb7p ngo\u00e0i l\u1ea7n 1\n//   V\u00f2ng l\u1eb7p trong l\u1ea7n 1\n//   V\u00f2ng l\u1eb7p trong l\u1ea7n 2\n// V\u00f2ng l\u1eb7p ngo\u00e0i l\u1ea7n 2\n//   V\u00f2ng l\u1eb7p trong l\u1ea7n 1\n//   V\u00f2ng l\u1eb7p trong l\u1ea7n 2\n// V\u00f2ng l\u1eb7p ngo\u00e0i l\u1ea7n 3\n//   V\u00f2ng l\u1eb7p trong l\u1ea7n 1\n//   V\u00f2ng l\u1eb7p trong l\u1ea7n 2\n</code></pre>"},{"location":"js/#lam-viec-voi-mang-trong-javascript","title":"L\u00e0m vi\u1ec7c v\u1edbi m\u1ea3ng trong JavaScript","text":"<p>Ti\u1ebfp t\u1ee5c v\u1ec1 Array methods, gi\u1edbi thi\u1ec7u c\u00e1c ph\u01b0\u01a1ng th\u1ee9c quan tr\u1ecdng \u0111\u1ec3 thao t\u00e1c v\u00e0 x\u1eed l\u00fd m\u1ea3ng:</p> <ul> <li><code>concat(array2, array3, ...)</code>: N\u1ed1i m\u1ea3ng v\u1edbi c\u00e1c m\u1ea3ng kh\u00e1c.</li> <li><code>join(separator)</code>: N\u1ed1i c\u00e1c ph\u1ea7n t\u1eed m\u1ea3ng th\u00e0nh chu\u1ed7i, ph\u00e2n t\u00e1ch b\u1eb1ng separator.</li> <li><code>slice(startIndex, endIndex)</code>: Tr\u1ea3 v\u1ec1 m\u1ea3ng con t\u1eeb startIndex \u0111\u1ebfn endIndex (kh\u00f4ng bao g\u1ed3m endIndex).</li> <li><code>splice(startIndex, deleteCount, item1, item2, ...)</code>: (\u0110\u00e3 \u0111\u1ec1 c\u1eadp \u1edf m\u1ee5c 24) X\u00f3a v\u00e0/ho\u1eb7c th\u00eam ph\u1ea7n t\u1eed t\u1ea1i v\u1ecb tr\u00ed b\u1ea5t k\u1ef3.</li> <li><code>sort()</code>: S\u1eafp x\u1ebfp m\u1ea3ng (m\u1eb7c \u0111\u1ecbnh theo th\u1ee9 t\u1ef1 b\u1ea3ng ch\u1eef c\u00e1i ho\u1eb7c s\u1ed1 t\u0103ng d\u1ea7n). C\u1ea7n custom function \u0111\u1ec3 s\u1eafp x\u1ebfp s\u1ed1 \u0111\u00fang c\u00e1ch.</li> <li><code>reverse()</code>: \u0110\u1ea3o ng\u01b0\u1ee3c m\u1ea3ng.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let arr1 = [1, 2, 3];\nlet arr2 = [4, 5, 6];\nlet combinedArray = arr1.concat(arr2); // N\u1ed1i m\u1ea3ng\nconsole.log(combinedArray); // [1, 2, 3, 4, 5, 6]\n\nlet fruits = [\"apple\", \"banana\", \"orange\"];\nlet fruitString = fruits.join(\", \"); // N\u1ed1i th\u00e0nh chu\u1ed7i\nconsole.log(fruitString); // \"apple, banana, orange\"\n\nlet numbers = [1, 5, 2, 8, 3];\nnumbers.sort(); // S\u1eafp x\u1ebfp (m\u1eb7c \u0111\u1ecbnh theo chu\u1ed7i) -&gt; [1, 2, 3, 5, 8]\nnumbers.sort((a, b) =&gt; a - b); // S\u1eafp x\u1ebfp s\u1ed1 t\u0103ng d\u1ea7n\nconsole.log(numbers); // [1, 2, 3, 5, 8]\nnumbers.reverse(); // \u0110\u1ea3o ng\u01b0\u1ee3c m\u1ea3ng\nconsole.log(numbers); // [8, 5, 3, 2, 1]\n</code></pre>"},{"location":"js/#array-map-method-trong-javascript","title":"Array map method trong JavaScript","text":"<p><code>map()</code> method t\u1ea1o ra m\u1ed9t m\u1ea3ng m\u1edbi b\u1eb1ng c\u00e1ch g\u1ecdi m\u1ed9t function (callback) cho m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng ban \u0111\u1ea7u. Callback function nh\u1eadn v\u00e0o ph\u1ea7n t\u1eed hi\u1ec7n t\u1ea1i v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb m\u1edbi cho ph\u1ea7n t\u1eed t\u01b0\u01a1ng \u1ee9ng trong m\u1ea3ng m\u1edbi.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let numbers = [1, 2, 3, 4, 5];\nlet squaredNumbers = numbers.map(function(number) { // map() v\u1edbi anonymous function\n    return number * number; // B\u00ecnh ph\u01b0\u01a1ng m\u1ed7i s\u1ed1\n});\nconsole.log(squaredNumbers); // [1, 4, 9, 16, 25]\n\n// S\u1eed d\u1ee5ng arrow function cho ng\u1eafn g\u1ecdn h\u01a1n:\nlet doubledNumbers = numbers.map(number =&gt; number * 2); // Nh\u00e2n \u0111\u00f4i m\u1ed7i s\u1ed1\nconsole.log(doubledNumbers); // [2, 4, 6, 8, 10]\n</code></pre>"},{"location":"js/#phuong-thuc-reduce-khi-lam-viec-voi-array","title":"Ph\u01b0\u01a1ng th\u1ee9c reduce khi l\u00e0m vi\u1ec7c v\u1edbi array","text":"<p><code>reduce()</code> method th\u1ef1c hi\u1ec7n m\u1ed9t callback function \"reducer\" tr\u00ean m\u1ed7i ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng, v\u00e0 tr\u1ea3 v\u1ec1 m\u1ed9t gi\u00e1 tr\u1ecb duy nh\u1ea5t (kh\u00f4ng ph\u1ea3i m\u1ea3ng m\u1edbi nh\u01b0 <code>map()</code>). Th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 t\u00ednh t\u1ed5ng, t\u00edch, ho\u1eb7c gom nh\u00f3m d\u1eef li\u1ec7u trong m\u1ea3ng.</p> <p>Callback function c\u1ee7a <code>reduce()</code> nh\u1eadn 2 tham s\u1ed1 ch\u00ednh:</p> <ul> <li><code>accumulator</code> (gi\u00e1 tr\u1ecb t\u00edch l\u0169y): Gi\u00e1 tr\u1ecb \u0111\u01b0\u1ee3c tr\u1ea3 v\u1ec1 t\u1eeb l\u1ea7n g\u1ecdi callback tr\u01b0\u1edbc \u0111\u00f3 (ho\u1eb7c <code>initialValue</code> n\u1ebfu \u0111\u01b0\u1ee3c cung c\u1ea5p).</li> <li> <p><code>currentValue</code> (gi\u00e1 tr\u1ecb hi\u1ec7n t\u1ea1i): Ph\u1ea7n t\u1eed m\u1ea3ng \u0111ang \u0111\u01b0\u1ee3c x\u1eed l\u00fd.</p> </li> <li> <p>C\u00fa ph\u00e1p: <code>array.reduce(reducerFunction, initialValue);</code> (<code>initialValue</code> l\u00e0 gi\u00e1 tr\u1ecb kh\u1edfi t\u1ea1o cho <code>accumulator</code>, t\u00f9y ch\u1ecdn).</p> </li> <li> <p>V\u00ed d\u1ee5 (t\u00ednh t\u1ed5ng m\u1ea3ng):</p> </li> </ul> <pre><code>let numbers = [1, 2, 3, 4, 5];\nlet sum = numbers.reduce(function(accumulator, currentValue) { // reduce() v\u1edbi anonymous function\n    return accumulator + currentValue; // C\u1ed9ng d\u1ed3n v\u00e0o accumulator\n}, 0); // initialValue = 0 (t\u1ed5ng ban \u0111\u1ea7u = 0)\nconsole.log(sum); // 15 (t\u1ed5ng c\u00e1c s\u1ed1 trong m\u1ea3ng)\n\n// S\u1eed d\u1ee5ng arrow function:\nlet product = numbers.reduce((accumulator, currentValue) =&gt; accumulator * currentValue, 1); // T\u00ednh t\u00edch\nconsole.log(product); // 120 (t\u00edch c\u00e1c s\u1ed1 trong m\u1ea3ng)\n</code></pre>"},{"location":"js/#phuong-thuc-reduce-khi-lam-viec-voi-array-phan-2","title":"Ph\u01b0\u01a1ng th\u1ee9c reduce khi l\u00e0m vi\u1ec7c v\u1edbi array - ph\u1ea7n 2","text":"<p>Ti\u1ebfp t\u1ee5c v\u1ec1 <code>reduce()</code>, c\u00f3 th\u1ec3 \u0111i s\u00e2u v\u00e0o c\u00e1c \u1ee9ng d\u1ee5ng ph\u1ee9c t\u1ea1p h\u01a1n nh\u01b0 gom nh\u00f3m \u0111\u1ed1i t\u01b0\u1ee3ng trong m\u1ea3ng, flatten m\u1ea3ng \u0111a chi\u1ec1u...</p>"},{"location":"js/#phuong-thuc-includes","title":"Ph\u01b0\u01a1ng th\u1ee9c includes","text":"<p><code>includes()</code> method ki\u1ec3m tra xem m\u1ed9t chu\u1ed7i c\u00f3 ch\u1ee9a m\u1ed9t substring (v\u1edbi chu\u1ed7i) ho\u1eb7c m\u1ed9t m\u1ea3ng c\u00f3 ch\u1ee9a m\u1ed9t ph\u1ea7n t\u1eed (v\u1edbi m\u1ea3ng) hay kh\u00f4ng. Tr\u1ea3 v\u1ec1 <code>true</code> n\u1ebfu c\u00f3, <code>false</code> n\u1ebfu kh\u00f4ng.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let message = \"Hello World\";\nconsole.log(message.includes(\"World\")); // true (chu\u1ed7i message ch\u1ee9a \"World\")\nconsole.log(message.includes(\"JavaScript\")); // false\n\nlet fruits = [\"apple\", \"banana\", \"orange\"];\nconsole.log(fruits.includes(\"banana\")); // true (m\u1ea3ng fruits ch\u1ee9a \"banana\")\nconsole.log(fruits.includes(\"grape\")); // false\n</code></pre>"},{"location":"js/#oi-tuong-math","title":"\u0110\u1ed1i t\u01b0\u1ee3ng math","text":"<p>Math object l\u00e0 built-in object cung c\u1ea5p c\u00e1c h\u1eb1ng s\u1ed1 to\u00e1n h\u1ecdc v\u00e0 h\u00e0m to\u00e1n h\u1ecdc. Kh\u00f4ng c\u1ea7n t\u1ea1o instance (kh\u00f4ng d\u00f9ng <code>new Math()</code>). Truy c\u1eadp tr\u1ef1c ti\u1ebfp qua <code>Math.property</code> ho\u1eb7c <code>Math.method()</code>.</p> <ul> <li>H\u1eb1ng s\u1ed1: <code>Math.PI</code> (s\u1ed1 Pi), <code>Math.E</code> (s\u1ed1 e), ...</li> <li>H\u00e0m: <code>Math.random()</code>, <code>Math.floor()</code>, <code>Math.ceil()</code>, <code>Math.round()</code>, <code>Math.max()</code>, <code>Math.min()</code>, <code>Math.pow()</code>, <code>Math.sqrt()</code>, ... (\u0111\u00e3 \u0111\u1ec1 c\u1eadp m\u1ed9t s\u1ed1 \u1edf m\u1ee5c 22).</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>console.log(Math.PI); // 3.141592653589793 (s\u1ed1 Pi)\nconsole.log(Math.sqrt(25)); // 5 (c\u0103n b\u1eadc hai)\nconsole.log(Math.pow(2, 3)); // 8 (2 m\u0169 3)\nconsole.log(Math.round(4.6)); // 5 (l\u00e0m tr\u00f2n g\u1ea7n nh\u1ea5t)\n</code></pre>"},{"location":"js/#callback-functions","title":"Callback Functions","text":"<p>Callback function (h\u00e0m callback) l\u00e0 h\u00e0m \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o l\u00e0m \u0111\u1ed1i s\u1ed1 c\u1ee7a m\u1ed9t h\u00e0m kh\u00e1c, v\u00e0 s\u1ebd \u0111\u01b0\u1ee3c g\u1ecdi l\u1ea1i (callback) sau khi h\u00e0m cha th\u1ef1c hi\u1ec7n xong m\u1ed9t t\u00e1c v\u1ee5 n\u00e0o \u0111\u00f3 (th\u01b0\u1eddng l\u00e0 t\u00e1c v\u1ee5 b\u1ea5t \u0111\u1ed3ng b\u1ed9 - asynchronous). D\u00f9ng nhi\u1ec1u trong x\u1eed l\u00fd s\u1ef1 ki\u1ec7n, AJAX, Promises...</p> <p>N\u1ebfu kh\u00f3 hi\u1ec3u (T\u1ec9 l\u1ec7 cao l\u00e0 kh\u00f3 hi\u1ec3u) th\u00ec h\u00e3y xem video c\u1ee7a F8: Callback P1 v\u1edbi Callback P2.</p> <pre><code>function doSomething(callback) { // H\u00e0m doSomething nh\u1eadn callback l\u00e0m \u0111\u1ed1i s\u1ed1\n    console.log(\"B\u1eaft \u0111\u1ea7u t\u00e1c v\u1ee5...\");\n    setTimeout(function() { // Gi\u1ea3 l\u1eadp t\u00e1c v\u1ee5 b\u1ea5t \u0111\u1ed3ng b\u1ed9 (v\u00ed d\u1ee5: g\u1ecdi API)\n        console.log(\"T\u00e1c v\u1ee5 ho\u00e0n th\u00e0nh!\");\n        callback(); // G\u1ecdi callback function sau khi t\u00e1c v\u1ee5 xong\n    }, 2000);\n}\n\ndoSomething(function() { // Truy\u1ec1n anonymous function l\u00e0m callback\n    console.log(\"Callback \u0111\u01b0\u1ee3c g\u1ecdi!\");\n});\n</code></pre>"},{"location":"js/#custom-array-methods","title":"Custom array methods","text":""},{"location":"js/#xay-dung-phuong-thuc-foreach","title":"X\u00e2y d\u1ef1ng ph\u01b0\u01a1ng th\u1ee9c forEach","text":"<p><code>forEach()</code> method l\u1eb7p qua t\u1eebng ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng v\u00e0 th\u1ef1c hi\u1ec7n callback function cho m\u1ed7i ph\u1ea7n t\u1eed. T\u01b0\u01a1ng t\u1ef1 <code>for...of</code> loop, nh\u01b0ng ng\u1eafn g\u1ecdn h\u01a1n. Kh\u00f4ng t\u1ea1o m\u1ea3ng m\u1edbi, kh\u00f4ng tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb, ch\u1ec9 th\u1ef1c hi\u1ec7n side effects (v\u00ed d\u1ee5: in ra console, s\u1eeda \u0111\u1ed5i m\u1ea3ng g\u1ed1c...).</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let colors = [\"red\", \"green\", \"blue\"];\ncolors.forEach(function(color) { // forEach() v\u1edbi anonymous function\n    console.log(\"M\u00e0u: \" + color);\n});\n\n// S\u1eed d\u1ee5ng arrow function:\ncolors.forEach(color =&gt; console.log(\"M\u00e0u (arrow): \" + color));\n</code></pre>"},{"location":"js/#xay-dung-phuong-thuc-filter","title":"X\u00e2y d\u1ef1ng ph\u01b0\u01a1ng th\u1ee9c filter","text":"<p><code>filter()</code> method t\u1ea1o ra m\u1ed9t m\u1ea3ng m\u1edbi ch\u1ee9a c\u00e1c ph\u1ea7n t\u1eed th\u1ecfa m\u00e3n m\u1ed9t \u0111i\u1ec1u ki\u1ec7n n\u00e0o \u0111\u00f3 (\u0111\u01b0\u1ee3c ki\u1ec3m tra b\u1edfi callback function). Callback function tr\u1ea3 v\u1ec1 <code>true</code> n\u1ebfu ph\u1ea7n t\u1eed th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n, <code>false</code> n\u1ebfu kh\u00f4ng.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let numbers = [1, 2, 3, 4, 5, 6];\nlet evenNumbers = numbers.filter(function(number) { // filter() v\u1edbi anonymous function\n    return number % 2 === 0; // \u0110i\u1ec1u ki\u1ec7n: s\u1ed1 ch\u1eb5n\n});\nconsole.log(evenNumbers); // [2, 4, 6] (m\u1ea3ng m\u1edbi ch\u1ec9 ch\u1ee9a s\u1ed1 ch\u1eb5n)\n\n// S\u1eed d\u1ee5ng arrow function:\nlet oddNumbers = numbers.filter(number =&gt; number % 2 !== 0); // L\u1ecdc s\u1ed1 l\u1ebb\nconsole.log(oddNumbers); // [1, 3, 5]\n</code></pre>"},{"location":"js/#xay-dung-phuong-thuc-some","title":"X\u00e2y d\u1ef1ng ph\u01b0\u01a1ng th\u1ee9c some","text":"<p><code>some()</code> method ki\u1ec3m tra xem \u00edt nh\u1ea5t m\u1ed9t ph\u1ea7n t\u1eed trong m\u1ea3ng c\u00f3 th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n (callback function) hay kh\u00f4ng. Tr\u1ea3 v\u1ec1 <code>true</code> n\u1ebfu c\u00f3 \u00edt nh\u1ea5t m\u1ed9t ph\u1ea7n t\u1eed th\u1ecfa m\u00e3n, <code>false</code> n\u1ebfu kh\u00f4ng c\u00f3 ph\u1ea7n t\u1eed n\u00e0o th\u1ecfa m\u00e3n.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let numbers = [1, 2, 3, 4, 5];\nlet hasEvenNumber = numbers.some(function(number) { // some() v\u1edbi anonymous function\n    return number % 2 === 0; // \u0110i\u1ec1u ki\u1ec7n: s\u1ed1 ch\u1eb5n\n});\nconsole.log(hasEvenNumber); // true (m\u1ea3ng numbers c\u00f3 s\u1ed1 ch\u1eb5n)\n\nlet allOddNumbers = numbers.some(number =&gt; number % 2 !== 0); // Ki\u1ec3m tra c\u00f3 s\u1ed1 l\u1ebb kh\u00f4ng\nconsole.log(allOddNumbers); // true\n</code></pre>"},{"location":"js/#xay-dung-phuong-thuc-every","title":"X\u00e2y d\u1ef1ng ph\u01b0\u01a1ng th\u1ee9c every","text":"<p><code>every()</code> method ki\u1ec3m tra xem t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed trong m\u1ea3ng c\u00f3 th\u1ecfa m\u00e3n \u0111i\u1ec1u ki\u1ec7n (callback function) hay kh\u00f4ng. Tr\u1ea3 v\u1ec1 <code>true</code> n\u1ebfu t\u1ea5t c\u1ea3 ph\u1ea7n t\u1eed th\u1ecfa m\u00e3n, <code>false</code> n\u1ebfu c\u00f3 \u00edt nh\u1ea5t m\u1ed9t ph\u1ea7n t\u1eed kh\u00f4ng th\u1ecfa m\u00e3n.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let numbers = [2, 4, 6, 8];\nlet allEvenNumbers = numbers.every(function(number) { // every() v\u1edbi anonymous function\n    return number % 2 === 0; // \u0110i\u1ec1u ki\u1ec7n: s\u1ed1 ch\u1eb5n\n});\nconsole.log(allEvenNumbers); // true (t\u1ea5t c\u1ea3 s\u1ed1 trong m\u1ea3ng \u0111\u1ec1u ch\u1eb5n)\n\nlet allPositiveNumbers = numbers.every(number =&gt; number &gt; 0); // Ki\u1ec3m tra t\u1ea5t c\u1ea3 s\u1ed1 d\u01b0\u01a1ng\nconsole.log(allPositiveNumbers); // true\n</code></pre>"},{"location":"js/#phan-5-dom-va-events","title":"Ph\u1ea7n 5: DOM v\u00e0 Events","text":""},{"location":"js/#html-dom-la-gi","title":"HTML DOM l\u00e0 g\u00ec?","text":"<p>HTML DOM (Document Object Model) l\u00e0 m\u00f4 h\u00ecnh bi\u1ec3u di\u1ec5n c\u1ea5u tr\u00fac HTML d\u01b0\u1edbi d\u1ea1ng c\u00e2y c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng (nodes). JavaScript c\u00f3 th\u1ec3 truy c\u1eadp v\u00e0 thao t\u00e1c v\u1edbi DOM \u0111\u1ec3 thay \u0111\u1ed5i n\u1ed9i dung, c\u1ea5u tr\u00fac, style c\u1ee7a trang web.</p>"},{"location":"js/#html-dom-va-dom-api-la-gi","title":"HTML DOM v\u00e0 DOM API l\u00e0 g\u00ec?","text":"<p>DOM API (Application Programming Interface) l\u00e0 t\u1eadp h\u1ee3p c\u00e1c \u0111\u1ed1i t\u01b0\u1ee3ng, thu\u1ed9c t\u00ednh, ph\u01b0\u01a1ng th\u1ee9c do tr\u00ecnh duy\u1ec7t cung c\u1ea5p \u0111\u1ec3 JavaScript t\u01b0\u01a1ng t\u00e1c v\u1edbi DOM. V\u00ed d\u1ee5: <code>document.getElementById()</code>, <code>element.innerHTML</code>, <code>element.style.color</code>, <code>element.addEventListener()</code>.</p>"},{"location":"js/#dom-document-object-trong-javascript","title":"DOM Document Object trong JavaScript","text":"<p><code>document</code> object l\u00e0 entry point (\u0111i\u1ec3m b\u1eaft \u0111\u1ea7u) \u0111\u1ec3 truy c\u1eadp DOM t\u1eeb JavaScript. \u0110\u1ea1i di\u1ec7n cho to\u00e0n b\u1ed9 trang HTML. C\u00e1c ph\u01b0\u01a1ng th\u1ee9c v\u00e0 thu\u1ed9c t\u00ednh c\u1ee7a <code>document</code> cho ph\u00e9p truy c\u1eadp v\u00e0 thao t\u00e1c v\u1edbi c\u00e1c ph\u1ea7n t\u1eed HTML tr\u00ean trang.</p>"},{"location":"js/#lay-element-trong-dom","title":"L\u1ea5y element trong DOM","text":"<p>C\u00e1c ph\u01b0\u01a1ng th\u1ee9c ch\u00ednh \u0111\u1ec3 l\u1ea5y element (ph\u1ea7n t\u1eed HTML) t\u1eeb DOM:</p> <ul> <li><code>document.getElementById(id)</code>: L\u1ea5y element c\u00f3 <code>id</code> attribute t\u01b0\u01a1ng \u1ee9ng (tr\u1ea3 v\u1ec1 1 element ho\u1eb7c <code>null</code>).</li> <li><code>document.getElementsByClassName(className)</code>: L\u1ea5y danh s\u00e1ch (HTMLCollection) c\u00e1c element c\u00f3 <code>class</code> attribute t\u01b0\u01a1ng \u1ee9ng (tr\u1ea3 v\u1ec1 HTMLCollection r\u1ed7ng n\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y).</li> <li><code>document.getElementsByTagName(tagName)</code>: L\u1ea5y danh s\u00e1ch (HTMLCollection) c\u00e1c element c\u00f3 tag name t\u01b0\u01a1ng \u1ee9ng (v\u00ed d\u1ee5: \"p\", \"div\", \"a\"...) (tr\u1ea3 v\u1ec1 HTMLCollection r\u1ed7ng n\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y).</li> <li><code>document.querySelector(selector)</code>: L\u1ea5y element \u0111\u1ea7u ti\u00ean ph\u00f9 h\u1ee3p v\u1edbi CSS selector (tr\u1ea3 v\u1ec1 1 element ho\u1eb7c <code>null</code>).</li> <li><code>document.querySelectorAll(selector)</code>: L\u1ea5y danh s\u00e1ch (NodeList) t\u1ea5t c\u1ea3 element ph\u00f9 h\u1ee3p v\u1edbi CSS selector (tr\u1ea3 v\u1ec1 NodeList r\u1ed7ng n\u1ebfu kh\u00f4ng t\u00ecm th\u1ea5y). N\u00ean d\u00f9ng <code>querySelector</code> v\u00e0 <code>querySelectorAll</code> v\u00ec linh ho\u1ea1t h\u01a1n (d\u00f9ng CSS selector).</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 DOM Get Element&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1 id=\"title\"&gt;Ti\u00eau \u0111\u1ec1 ch\u00ednh&lt;/h1&gt;\n    &lt;p class=\"paragraph\"&gt;\u0110o\u1ea1n v\u0103n 1.&lt;/p&gt;\n    &lt;p class=\"paragraph\"&gt;\u0110o\u1ea1n v\u0103n 2.&lt;/p&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Item 1&lt;/li&gt;\n        &lt;li&gt;Item 2&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;div id=\"container\"&gt;\n        &lt;button&gt;Click me&lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        let titleElement = document.getElementById(\"title\"); // L\u1ea5y theo ID\n        console.log(titleElement); // &lt;h1 id=\"title\"&gt;...&lt;/h1&gt;\n\n        let paragraphElements = document.getElementsByClassName(\"paragraph\"); // L\u1ea5y theo class\n        console.log(paragraphElements); // HTMLCollection [p.paragraph, p.paragraph]\n\n        let liElements = document.getElementsByTagName(\"li\"); // L\u1ea5y theo tag name\n        console.log(liElements); // HTMLCollection [li, li]\n\n        let firstParagraph = document.querySelector(\".paragraph\"); // L\u1ea5y element \u0111\u1ea7u ti\u00ean theo CSS selector\n        console.log(firstParagraph); // &lt;p class=\"paragraph\"&gt;...&lt;/p&gt;\n\n        let allParagraphs = document.querySelectorAll(\".paragraph\"); // L\u1ea5y t\u1ea5t c\u1ea3 element theo CSS selector\n        console.log(allParagraphs); // NodeList [p.paragraph, p.paragraph]\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#lay-element-trong-dom_1","title":"L\u1ea5y element trong DOM","text":"<p>Ti\u1ebfp t\u1ee5c v\u1ec1 c\u00e1c ph\u01b0\u01a1ng th\u1ee9c l\u1ea5y element, c\u00f3 th\u1ec3 t\u1eadp trung v\u00e0o <code>querySelector</code> v\u00e0 <code>querySelectorAll</code> v\u00e0 c\u00e1c lo\u1ea1i CSS selector c\u00f3 th\u1ec3 d\u00f9ng (class, id, tag name, attribute selectors, pseudo-classes...).</p>"},{"location":"js/#lay-element-trong-dom_2","title":"L\u1ea5y element trong DOM","text":"<p>C\u00f3 th\u1ec3 \u0111i s\u00e2u v\u00e0o performance khi ch\u1ecdn element, c\u00e1ch t\u1ed1i \u01b0u selector, v\u00e0 s\u1ef1 kh\u00e1c bi\u1ec7t gi\u1eefa HTMLCollection v\u00e0 NodeList (HTMLCollection l\u00e0 live collection - t\u1ef1 \u0111\u1ed9ng c\u1eadp nh\u1eadt khi DOM thay \u0111\u1ed5i, NodeList c\u00f3 th\u1ec3 l\u00e0 static ho\u1eb7c live t\u00f9y ph\u01b0\u01a1ng th\u1ee9c l\u1ea5y).</p>"},{"location":"js/#attribute-node-va-text-node-trong-html-dom","title":"Attribute node v\u00e0 Text node trong HTML DOM","text":"<p>Trong DOM tree, m\u1ed7i element HTML l\u00e0 m\u1ed9t element node. B\u00ean trong element node c\u00f3 th\u1ec3 c\u00f3 attribute nodes (thu\u1ed9c t\u00ednh HTML) v\u00e0 text nodes (n\u1ed9i dung text).</p>"},{"location":"js/#dom-attribute","title":"DOM attribute","text":"<p>DOM API cung c\u1ea5p c\u00e1c ph\u01b0\u01a1ng th\u1ee9c \u0111\u1ec3 thao t\u00e1c v\u1edbi attribute nodes:</p> <ul> <li><code>element.getAttribute(attributeName)</code>: L\u1ea5y gi\u00e1 tr\u1ecb attribute.</li> <li><code>element.setAttribute(attributeName, value)</code>: S\u1eeda \u0111\u1ed5i ho\u1eb7c th\u00eam attribute.</li> <li><code>element.removeAttribute(attributeName)</code>: X\u00f3a attribute.</li> <li><code>element.hasAttribute(attributeName)</code>: Ki\u1ec3m tra xem element c\u00f3 attribute kh\u00f4ng.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 DOM Attribute&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;a id=\"link\" href=\"https://f8.edu.vn\" target=\"_blank\"&gt;F8&lt;/a&gt;\n\n    &lt;script&gt;\n        let linkElement = document.getElementById(\"link\");\n        console.log(linkElement.getAttribute(\"href\")); // \"https://f8.edu.vn\"\n        linkElement.setAttribute(\"title\", \"H\u1ecdc l\u1eadp tr\u00ecnh t\u1ea1i F8\"); // Th\u00eam attribute title\n        console.log(linkElement.getAttribute(\"title\")); // \"H\u1ecdc l\u1eadp tr\u00ecnh t\u1ea1i F8\"\n        linkElement.removeAttribute(\"target\"); // X\u00f3a attribute target\n        console.log(linkElement.hasAttribute(\"target\")); // false\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#innertext-textcontent-property","title":"InnerText &amp; textContent Property","text":"<p><code>innerText</code> v\u00e0 <code>textContent</code> properties d\u00f9ng \u0111\u1ec3 l\u1ea5y ho\u1eb7c set n\u1ed9i dung text c\u1ee7a m\u1ed9t element.</p> <ul> <li><code>innerText</code>: Ch\u1ec9 l\u1ea5y text \"hi\u1ec3n th\u1ecb\" (sau khi render), kh\u00f4ng l\u1ea5y text c\u1ee7a c\u00e1c element \u1ea9n (v\u00ed d\u1ee5: <code>display: none</code>).</li> <li><code>textContent</code>: L\u1ea5y t\u1ea5t c\u1ea3 text content, k\u1ec3 c\u1ea3 text c\u1ee7a element \u1ea9n. N\u00ean d\u00f9ng <code>textContent</code> v\u00ec chu\u1ea9n h\u01a1n, nh\u1ea5t qu\u00e1n h\u01a1n.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 innerText &amp; textContent&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"content\"&gt;\n        &lt;p&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n 1.&lt;/p&gt;\n        &lt;p style=\"display: none;\"&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n 2 (\u1ea9n).&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        let contentElement = document.getElementById(\"content\");\n        console.log(contentElement.innerText);\n        // \u0110o\u1ea1n v\u0103n b\u1ea3n 1.\n        console.log(contentElement.textContent);\n        // \u0110o\u1ea1n v\u0103n b\u1ea3n 1.\n        // \u0110o\u1ea1n v\u0103n b\u1ea3n 2 (\u1ea9n).\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#them-element-vao-element-trong-dom","title":"Th\u00eam element v\u00e0o element trong DOM","text":"<ul> <li> <p>T\u00f3m t\u1eaft:</p> </li> <li> <p><code>element.innerHTML</code>: L\u1ea5y ho\u1eb7c set HTML content b\u00ean trong element (d\u1ea1ng chu\u1ed7i HTML). C\u00f3 th\u1ec3 d\u00f9ng \u0111\u1ec3 th\u00eam HTML v\u00e0o element.</p> </li> <li><code>element.outerHTML</code>: L\u1ea5y ho\u1eb7c set HTML content c\u1ee7a ch\u00ednh element v\u00e0 b\u00ean trong n\u00f3 (d\u1ea1ng chu\u1ed7i HTML).</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 innerHTML &amp; outerHTML&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"container\"&gt;\n        &lt;p&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n ban \u0111\u1ea7u.&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        let containerElement = document.getElementById(\"container\");\n        console.log(containerElement.innerHTML); // \"&lt;p&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n ban \u0111\u1ea7u.&lt;/p&gt;\"\n\n        containerElement.innerHTML = \"&lt;h2&gt;Ti\u00eau \u0111\u1ec1 m\u1edbi&lt;/h2&gt;&lt;p&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n m\u1edbi.&lt;/p&gt;\"; // Set HTML content m\u1edbi\n        console.log(containerElement.innerHTML);\n        // \"&lt;h2&gt;Ti\u00eau \u0111\u1ec1 m\u1edbi&lt;/h2&gt;&lt;p&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n m\u1edbi.&lt;/p&gt;\"\n\n        console.log(containerElement.outerHTML);\n        // \"&lt;div id=\"container\"&gt;&lt;h2&gt;Ti\u00eau \u0111\u1ec1 m\u1edbi&lt;/h2&gt;&lt;p&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n m\u1edbi.&lt;/p&gt;&lt;/div&gt;\"\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#node-properties","title":"Node properties","text":"<p>Node properties (thu\u1ed9c t\u00ednh node) cung c\u1ea5p th\u00f4ng tin v\u1ec1 node trong DOM tree. V\u00ed d\u1ee5:</p> <ul> <li><code>node.nodeName</code>: T\u00ean node (tag name cho element node, \"#text\" cho text node...).</li> <li><code>node.nodeType</code>: Lo\u1ea1i node (1: element node, 3: text node...).</li> <li><code>node.parentNode</code>: Node cha.</li> <li><code>node.childNodes</code>: Danh s\u00e1ch node con (HTMLCollection/NodeList).</li> <li><code>node.firstChild</code>, <code>node.lastChild</code>, <code>node.nextSibling</code>, <code>node.previousSibling</code>: Node con \u0111\u1ea7u, con cu\u1ed1i, node anh em k\u1ebf ti\u1ebfp, node anh em tr\u01b0\u1edbc \u0111\u00f3.</li> </ul>"},{"location":"js/#oi-tuong-dom-style-trong-element-node","title":"\u0110\u1ed1i t\u01b0\u1ee3ng DOM style trong Element node","text":"<p><code>element.style</code> object cho ph\u00e9p truy c\u1eadp v\u00e0 s\u1eeda \u0111\u1ed5i inline styles (style vi\u1ebft tr\u1ef1c ti\u1ebfp trong attribute <code>style</code>) c\u1ee7a element t\u1eeb JavaScript.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 DOM Style&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"box\" style=\"background-color: lightblue; width: 200px; height: 100px;\"&gt;\n        Kh\u1ed1i h\u1ed9p\n    &lt;/div&gt;\n\n    &lt;script&gt;\n        let boxElement = document.getElementById(\"box\");\n        console.log(boxElement.style.backgroundColor); // \"lightblue\" (l\u1ea5y style background-color)\n        boxElement.style.color = \"red\"; // Set style color\n        boxElement.style.border = \"2px solid black\"; // Set style border\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#classlist-property","title":"ClassList Property","text":"<p><code>element.classList</code> property tr\u1ea3 v\u1ec1 m\u1ed9t \u0111\u1ed1i t\u01b0\u1ee3ng <code>DOMTokenList</code> \u0111\u1ea1i di\u1ec7n cho danh s\u00e1ch class c\u1ee7a element. Cung c\u1ea5p c\u00e1c ph\u01b0\u01a1ng th\u1ee9c \u0111\u1ec3 thao t\u00e1c v\u1edbi class:</p> <ul> <li><code>classList.add(className)</code>: Th\u00eam class.</li> <li><code>classList.remove(className)</code>: X\u00f3a class.</li> <li><code>classList.toggle(className)</code>: Th\u00eam class n\u1ebfu ch\u01b0a c\u00f3, x\u00f3a class n\u1ebfu \u0111\u00e3 c\u00f3.</li> <li><code>classList.contains(className)</code>: Ki\u1ec3m tra xem element c\u00f3 class kh\u00f4ng.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 classList&lt;/title&gt;\n    &lt;style&gt;\n        .highlight {\n            background-color: yellow;\n            font-weight: bold;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p id=\"text\"&gt;\u0110o\u1ea1n v\u0103n b\u1ea3n.&lt;/p&gt;\n    &lt;button id=\"toggleBtn\"&gt;Toggle Highlight&lt;/button&gt;\n\n    &lt;script&gt;\n        let textElement = document.getElementById(\"text\");\n        let toggleButton = document.getElementById(\"toggleBtn\");\n\n        toggleButton.addEventListener(\"click\", function() {\n            textElement.classList.toggle(\"highlight\"); // Toggle class \"highlight\"\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#dom-events","title":"DOM events","text":"<p>DOM events (s\u1ef1 ki\u1ec7n DOM) l\u00e0 c\u00e1c h\u00e0nh \u0111\u1ed9ng x\u1ea3y ra tr\u00ean trang web (click chu\u1ed9t, g\u00f5 ph\u00edm, load trang...). JavaScript c\u00f3 th\u1ec3 l\u1eafng nghe (listen) v\u00e0 x\u1eed l\u00fd (handle) c\u00e1c s\u1ef1 ki\u1ec7n n\u00e0y \u0111\u1ec3 t\u1ea1o t\u01b0\u01a1ng t\u00e1c.</p>"},{"location":"js/#dom-events-example","title":"DOM events example","text":"<p>V\u00ed d\u1ee5 v\u1ec1 c\u00e1c s\u1ef1 ki\u1ec7n DOM ph\u1ed5 bi\u1ebfn:</p> <ul> <li><code>click</code>: Click chu\u1ed9t.</li> <li><code>mouseover</code>, <code>mouseout</code>: Chu\u1ed9t di v\u00e0o, di ra kh\u1ecfi element.</li> <li><code>keydown</code>, <code>keyup</code>: Ph\u00edm \u0111\u01b0\u1ee3c nh\u1ea5n, ph\u00edm \u0111\u01b0\u1ee3c nh\u1ea3.</li> <li><code>submit</code>: Form \u0111\u01b0\u1ee3c submit.</li> <li><code>load</code>: Trang ho\u1eb7c resource (\u1ea3nh, script...) \u0111\u00e3 load xong.</li> <li> <p><code>DOMContentLoaded</code>: DOM tree \u0111\u00e3 \u0111\u01b0\u1ee3c parse xong.</p> </li> <li> <p>V\u00ed d\u1ee5 (s\u1ef1 ki\u1ec7n click):</p> </li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 DOM Event&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;button id=\"myButton\"&gt;Click me&lt;/button&gt;\n    &lt;p id=\"message\"&gt;&lt;/p&gt;\n\n    &lt;script&gt;\n        let buttonElement = document.getElementById(\"myButton\");\n        let messageElement = document.getElementById(\"message\");\n\n        buttonElement.addEventListener(\"click\", function() { // L\u1eafng nghe s\u1ef1 ki\u1ec7n click\n            messageElement.textContent = \"Button \u0111\u00e3 \u0111\u01b0\u1ee3c click!\"; // X\u1eed l\u00fd s\u1ef1 ki\u1ec7n click\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#preventdefault-stoppropagation","title":"PreventDefault &amp; StopPropagation","text":"<ul> <li> <p>T\u00f3m t\u1eaft:</p> </li> <li> <p><code>event.preventDefault()</code>: Ng\u0103n ch\u1eb7n h\u00e0nh vi m\u1eb7c \u0111\u1ecbnh c\u1ee7a s\u1ef1 ki\u1ec7n (v\u00ed d\u1ee5: ng\u0103n link chuy\u1ec3n trang, ng\u0103n form submit trang).</p> </li> <li> <p><code>event.stopPropagation()</code>: Ng\u0103n ch\u1eb7n s\u1ef1 ki\u1ec7n lan truy\u1ec1n l\u00ean c\u00e1c element cha (event bubbling).</p> </li> <li> <p>V\u00ed d\u1ee5 (<code>preventDefault</code> tr\u00ean link):</p> </li> </ul> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;V\u00ed d\u1ee5 preventDefault&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;a href=\"https://f8.edu.vn\" id=\"link\"&gt;Link F8&lt;/a&gt;\n    &lt;script&gt;\n        let linkElement = document.getElementById(\"link\");\n        linkElement.addEventListener(\"click\", function(event) {\n            event.preventDefault(); // Ng\u0103n link chuy\u1ec3n trang\n            alert(\"Link click b\u1ecb ch\u1eb7n!\");\n        });\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"js/#event-listener","title":"Event listener","text":"<p>Event listener (b\u1ed9 l\u1eafng nghe s\u1ef1 ki\u1ec7n) d\u00f9ng \u0111\u1ec3 \u0111\u0103ng k\u00fd (attach) m\u1ed9t function (event handler) \u0111\u1ec3 x\u1eed l\u00fd m\u1ed9t s\u1ef1 ki\u1ec7n tr\u00ean m\u1ed9t element.</p> <ul> <li><code>element.addEventListener(eventType, eventHandler, useCapture)</code>: \u0110\u0103ng k\u00fd event listener.</li> <li><code>element.removeEventListener(eventType, eventHandler, useCapture)</code>: G\u1ee1 b\u1ecf event listener.</li> </ul> <pre><code>const button = document.querySelector(\".btn\")\nbutton.addEventListener(\"click\", function(event) {\n  console.log(\"Hello!\");\n})\n\n// OR using Javascript one-liners\nbutton.addEventListener(\"click\", event =&gt; console.log(\"Hello!\"))\n</code></pre>"},{"location":"js/#json-promise-es6","title":"JSON, Promise, ES6+","text":""},{"location":"js/#json-la-gi-uoc-su-dung-ra-sao-trong-js","title":"JSON l\u00e0 g\u00ec? \u0110\u01b0\u1ee3c s\u1eed d\u1ee5ng ra sao trong JS?","text":"<p>JSON (JavaScript Object Notation) l\u00e0 \u0111\u1ecbnh d\u1ea1ng d\u1eef li\u1ec7u text nh\u1eb9, d\u1ec5 \u0111\u1ecdc, d\u1ec5 parse, d\u1ef1a tr\u00ean c\u00fa ph\u00e1p object c\u1ee7a JavaScript. D\u00f9ng ph\u1ed5 bi\u1ebfn \u0111\u1ec3 trao \u0111\u1ed5i d\u1eef li\u1ec7u gi\u1eefa server v\u00e0 client trong web development (v\u00ed d\u1ee5: API).</p> <ul> <li> <p>C\u1ea5u tr\u00fac: key-value pairs, key l\u00e0 chu\u1ed7i, value c\u00f3 th\u1ec3 l\u00e0 string, number, boolean, null, array, object.</p> </li> <li> <p>V\u00ed d\u1ee5 JSON:</p> </li> </ul> <pre><code>    {\n        \"name\": \"Gemini\",\n        \"age\": 2,\n        \"isRobot\": true,\n        \"skills\": [\"learning\", \"coding\", \"talking\"]\n    }\n</code></pre> <ul> <li> <p>JavaScript built-in object <code>JSON</code> cung c\u1ea5p:</p> </li> <li> <p><code>JSON.stringify(object)</code>: Chuy\u1ec3n \u0111\u1ed5i object JavaScript sang chu\u1ed7i JSON.</p> </li> <li><code>JSON.parse(jsonString)</code>: Chuy\u1ec3n \u0111\u1ed5i chu\u1ed7i JSON sang object JavaScript.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let personObject = { name: \"Gemini\", age: 2 };\nlet jsonString = JSON.stringify(personObject); // Chuy\u1ec3n object sang JSON string\nconsole.log(jsonString); // '{\"name\":\"Gemini\",\"age\":2}'\n\nlet parsedObject = JSON.parse(jsonString); // Chuy\u1ec3n JSON string sang object\nconsole.log(parsedObject.name); // \"Gemini\"\n</code></pre>"},{"location":"js/#promise-sync-async-trong-javascript","title":"Promise (sync async) trong JavaScript","text":"<p>Promise l\u00e0 object \u0111\u1ea1i di\u1ec7n cho k\u1ebft qu\u1ea3 (th\u00e0nh c\u00f4ng ho\u1eb7c th\u1ea5t b\u1ea1i) c\u1ee7a m\u1ed9t t\u00e1c v\u1ee5 b\u1ea5t \u0111\u1ed3ng b\u1ed9 (asynchronous) v\u00e0 c\u00f3 th\u1ec3 ch\u01b0a ho\u00e0n th\u00e0nh ngay l\u1eadp t\u1ee9c (v\u00ed d\u1ee5: g\u1ecdi API, \u0111\u1ecdc file...). Gi\u00fap x\u1eed l\u00fd b\u1ea5t \u0111\u1ed3ng b\u1ed9 m\u1ed9t c\u00e1ch d\u1ec5 \u0111\u1ecdc, d\u1ec5 qu\u1ea3n l\u00fd h\u01a1n so v\u1edbi callback. * Tr\u1ea1ng th\u00e1i Promise:     * <code>pending</code> (ch\u1edd x\u1eed l\u00fd): T\u00e1c v\u1ee5 ch\u01b0a ho\u00e0n th\u00e0nh.     * <code>fulfilled</code> (th\u00e0nh c\u00f4ng): T\u00e1c v\u1ee5 ho\u00e0n th\u00e0nh th\u00e0nh c\u00f4ng.     * <code>rejected</code> (th\u1ea5t b\u1ea1i): T\u00e1c v\u1ee5 ho\u00e0n th\u00e0nh th\u1ea5t b\u1ea1i.</p>"},{"location":"js/#promise-noi-au","title":"Promise (n\u1ed7i \u0111au)","text":"<p>C\u00f3 th\u1ec3 n\u00f3i v\u1ec1 \"callback hell\" v\u00e0 t\u1ea1i sao Promise ra \u0111\u1eddi \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 callback hell. Promise gi\u00fap code b\u1ea5t \u0111\u1ed3ng b\u1ed9 d\u1ec5 \u0111\u1ecdc, d\u1ec5 maintain h\u01a1n b\u1eb1ng c\u00e1ch \"chaining\" c\u00e1c t\u00e1c v\u1ee5 b\u1ea5t \u0111\u1ed3ng b\u1ed9 tu\u1ea7n t\u1ef1 ho\u1eb7c song song.</p>"},{"location":"js/#promise-trong-javascript","title":"Promise trong Javascript","text":"<p>C\u00e1ch t\u1ea1o Promise: <code>new Promise((resolve, reject) =&gt; { ... });</code></p> <ul> <li><code>resolve(value)</code>: G\u1ecdi khi t\u00e1c v\u1ee5 th\u00e0nh c\u00f4ng, truy\u1ec1n gi\u00e1 tr\u1ecb k\u1ebft qu\u1ea3.</li> <li> <p><code>reject(error)</code>: G\u1ecdi khi t\u00e1c v\u1ee5 th\u1ea5t b\u1ea1i, truy\u1ec1n l\u1ed7i.</p> </li> <li> <p>C\u00e1ch x\u1eed l\u00fd k\u1ebft qu\u1ea3 Promise:</p> </li> <li> <p><code>.then(onFulfilled)</code>: X\u1eed l\u00fd khi Promise fulfilled (th\u00e0nh c\u00f4ng).</p> </li> <li><code>.catch(onRejected)</code>: X\u1eed l\u00fd khi Promise rejected (th\u1ea5t b\u1ea1i).</li> <li> <p><code>.finally(onFinally)</code>: Th\u1ef1c hi\u1ec7n code sau khi Promise fulfilled ho\u1eb7c rejected (kh\u00f4ng quan t\u00e2m k\u1ebft qu\u1ea3), th\u01b0\u1eddng d\u00f9ng \u0111\u1ec3 cleanup (v\u00ed d\u1ee5: t\u1eaft loading indicator).</p> </li> <li> <p>V\u00ed d\u1ee5 (Promise \u0111\u01a1n gi\u1ea3n):</p> </li> </ul> <pre><code>let myPromise = new Promise((resolve, reject) =&gt; {\n    setTimeout(function() {\n        let success = true; // Gi\u1ea3 l\u1eadp t\u00e1c v\u1ee5 th\u00e0nh c\u00f4ng/th\u1ea5t b\u1ea1i\n        if (success) {\n            resolve(\"D\u1eef li\u1ec7u th\u00e0nh c\u00f4ng!\"); // G\u1ecdi resolve khi th\u00e0nh c\u00f4ng\n        } else {\n            reject(\"L\u1ed7i x\u1ea3y ra!\"); // G\u1ecdi reject khi th\u1ea5t b\u1ea1i\n        }\n    }, 2000);\n});\n\nmyPromise.then(function(result) { // X\u1eed l\u00fd khi th\u00e0nh c\u00f4ng\n    console.log(\"Th\u00e0nh c\u00f4ng:\", result); // \"Th\u00e0nh c\u00f4ng: D\u1eef li\u1ec7u th\u00e0nh c\u00f4ng!\"\n}).catch(function(error) { // X\u1eed l\u00fd khi th\u1ea5t b\u1ea1i\n    console.log(\"L\u1ed7i:\", error); // \"L\u1ed7i: L\u1ed7i x\u1ea3y ra!\" (n\u1ebfu success = false)\n}).finally(function() { // Th\u1ef1c hi\u1ec7n sau khi Promise xong (d\u00f9 th\u00e0nh c\u00f4ng hay th\u1ea5t b\u1ea1i)\n    console.log(\"Promise \u0111\u00e3 ho\u00e0n th\u00e0nh.\");\n});\n</code></pre>"},{"location":"js/#promise-chain","title":"Promise chain","text":"<p>Promise chaining (chu\u1ed7i Promise) cho ph\u00e9p li\u00ean k\u1ebft c\u00e1c t\u00e1c v\u1ee5 b\u1ea5t \u0111\u1ed3ng b\u1ed9 tu\u1ea7n t\u1ef1. <code>.then()</code> c\u00f3 th\u1ec3 tr\u1ea3 v\u1ec1 m\u1ed9t Promise m\u1edbi, t\u1ea1o th\u00e0nh chu\u1ed7i. Gi\u00fap x\u1eed l\u00fd c\u00e1c t\u00e1c v\u1ee5 ph\u1ee5 thu\u1ed9c l\u1eabn nhau m\u1ed9t c\u00e1ch tu\u1ea7n t\u1ef1.</p> <ul> <li>V\u00ed d\u1ee5 (Promise chain):</li> </ul> <pre><code>function fetchData(url) {\n    return new Promise((resolve, reject) =&gt; {\n        // Gi\u1ea3 l\u1eadp fetch API\n        setTimeout(function() {\n            let data = \"D\u1eef li\u1ec7u t\u1eeb \" + url;\n            resolve(data);\n        }, 1000);\n    });\n}\n\nfetchData(\"url1\").then(function(data1) { // G\u1ecdi API 1\n    console.log(\"D\u1eef li\u1ec7u 1:\", data1); // X\u1eed l\u00fd d\u1eef li\u1ec7u 1\n    return fetchData(\"url2\"); // Tr\u1ea3 v\u1ec1 Promise m\u1edbi \u0111\u1ec3 g\u1ecdi API 2\n}).then(function(data2) { // Ch\u1ea1y khi Promise tr\u1ea3 v\u1ec1 t\u1eeb .then() tr\u01b0\u1edbc \u0111\u00f3 fulfilled\n    console.log(\"D\u1eef li\u1ec7u 2:\", data2); // X\u1eed l\u00fd d\u1eef li\u1ec7u 2\n    return fetchData(\"url3\"); // Ti\u1ebfp t\u1ee5c chain\n}).then(function(data3) {\n    console.log(\"D\u1eef li\u1ec7u 3:\", data3);\n}).catch(function(error) { // B\u1eaft l\u1ed7i n\u1ebfu c\u00f3 l\u1ed7i \u1edf b\u1ea5t k\u1ef3 Promise n\u00e0o trong chu\u1ed7i\n    console.log(\"L\u1ed7i:\", error);\n});\n</code></pre>"},{"location":"js/#promise-methods-resolve-reject-all","title":"Promise methods (resolve, reject, all)","text":"<p>C\u00e1c static methods c\u1ee7a <code>Promise</code> object:</p> <ul> <li><code>Promise.resolve(value)</code>: Tr\u1ea3 v\u1ec1 m\u1ed9t Promise \u0111\u00e3 fulfilled v\u1edbi gi\u00e1 tr\u1ecb <code>value</code>.</li> <li><code>Promise.reject(error)</code>: Tr\u1ea3 v\u1ec1 m\u1ed9t Promise \u0111\u00e3 rejected v\u1edbi l\u1ed7i <code>error</code>.</li> <li> <p><code>Promise.all(promises)</code>: Nh\u1eadn v\u00e0o m\u1ed9t m\u1ea3ng c\u00e1c Promises, tr\u1ea3 v\u1ec1 m\u1ed9t Promise m\u1edbi fulfilled khi t\u1ea5t c\u1ea3 Promises trong m\u1ea3ng fulfilled, ho\u1eb7c rejected ngay l\u1eadp t\u1ee9c n\u1ebfu c\u00f3 \u00edt nh\u1ea5t m\u1ed9t Promise rejected. D\u00f9ng \u0111\u1ec3 ch\u1ea1y c\u00e1c t\u00e1c v\u1ee5 b\u1ea5t \u0111\u1ed3ng b\u1ed9 song song v\u00e0 \u0111\u1ee3i t\u1ea5t c\u1ea3 ho\u00e0n th\u00e0nh.</p> </li> <li> <p>V\u00ed d\u1ee5 (<code>Promise.all</code>):</p> </li> </ul> <pre><code>let promise1 = Promise.resolve(\"Promise 1 th\u00e0nh c\u00f4ng\");\nlet promise2 = new Promise(resolve =&gt; setTimeout(() =&gt; resolve(\"Promise 2 th\u00e0nh c\u00f4ng\"), 1000));\nlet promise3 = Promise.resolve(\"Promise 3 th\u00e0nh c\u00f4ng\");\n\nPromise.all([promise1, promise2, promise3]).then(function(results) { // Ch\u1ea1y song song, \u0111\u1ee3i t\u1ea5t c\u1ea3 xong\n    console.log(\"T\u1ea5t c\u1ea3 Promises th\u00e0nh c\u00f4ng:\", results); // [\"Promise 1 th\u00e0nh c\u00f4ng\", \"Promise 2 th\u00e0nh c\u00f4ng\", \"Promise 3 th\u00e0nh c\u00f4ng\"]\n}).catch(function(error) {\n    console.log(\"C\u00f3 l\u1ed7i:\", error);\n});\n</code></pre>"},{"location":"js/#let-const-keyword","title":"<code>let &amp; const</code> keyword","text":"<p>\u01afu ti\u00ean d\u00f9ng <code>let</code> v\u00e0 <code>const</code> thay cho <code>var</code> v\u00ec c\u00f3 ph\u1ea1m vi block-scoped r\u00f5 r\u00e0ng h\u01a1n, tr\u00e1nh l\u1ed7i hoisting.</p>"},{"location":"js/#arrow-function","title":"Arrow function","text":"<p>(\u0110\u00e3 \u0111\u1ec1 c\u1eadp \u1edf m\u1ee5c 29) \u00d4n l\u1ea1i arrow function, c\u00fa ph\u00e1p ng\u1eafn g\u1ecdn h\u01a1n cho anonymous function, \u0111\u1eb7c bi\u1ec7t h\u1eefu \u00edch trong callback functions.</p> <pre><code>const multiplyByTwo = (num) =&gt; {\n    return num * 2;\n}\n</code></pre>"},{"location":"js/#template-literals-template-string","title":"Template literals (Template string)","text":"<p>Template literals (template string) d\u00f9ng backtick `` \u0111\u1ec3 khai b\u00e1o chu\u1ed7i, cho ph\u00e9p nh\u00fang bi\u1ebfn tr\u1ef1c ti\u1ebfp v\u00e0o chu\u1ed7i b\u1eb1ng c\u00fa ph\u00e1p <code>${variable}</code> (string interpolation), v\u00e0 h\u1ed7 tr\u1ee3 chu\u1ed7i nhi\u1ec1u d\u00f2ng d\u1ec5 d\u00e0ng.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let name = \"Gemini\";\nlet age = 2;\nlet message = `Xin ch\u00e0o, t\u00f4i l\u00e0 ${name}, ${age} tu\u1ed5i.\nT\u00f4i l\u00e0 m\u1ed9t robot.`; // Template literals, chu\u1ed7i nhi\u1ec1u d\u00f2ng\nconsole.log(message);\n// Xin ch\u00e0o, t\u00f4i l\u00e0 Gemini, 2 tu\u1ed5i.\n// T\u00f4i l\u00e0 m\u1ed9t robot.\n</code></pre>"},{"location":"js/#classes-trong-javascript-es6","title":"Classes trong JavaScript ES6","text":"<p>Classes trong ES6 cung c\u1ea5p c\u00fa ph\u00e1p m\u1edbi \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a object v\u00e0 k\u1ebf th\u1eeba, g\u1ea7n g\u0169i h\u01a1n v\u1edbi c\u00e1c ng\u00f4n ng\u1eef h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c (nh\u01b0ng v\u1eabn d\u1ef1a tr\u00ean prototype-based inheritance c\u1ee7a JavaScript).</p> <ul> <li>V\u00ed d\u1ee5 (Class c\u01a1 b\u1ea3n):</li> </ul> <pre><code>class Animal { // \u0110\u1ecbnh ngh\u0129a class Animal\n    constructor(name) { // Constructor\n        this.name = name;\n    }\n\n    speak() { // Method speak\n        console.log(this.name + \" makes a sound.\");\n    }\n}\n\nclass Dog extends Animal { // Class Dog k\u1ebf th\u1eeba t\u1eeb Animal\n    constructor(name, breed) {\n        super(name); // G\u1ecdi constructor c\u1ee7a class cha\n        this.breed = breed;\n    }\n\n    bark() { // Method bark ri\u00eang c\u1ee7a Dog\n        console.log(\"Woof!\");\n    }\n}\n\nlet animal = new Animal(\"Generic Animal\");\nanimal.speak(); // \"Generic Animal makes a sound.\"\n\nlet dog = new Dog(\"Lucky\", \"Golden Retriever\");\ndog.speak(); // \"Lucky makes a sound.\" (k\u1ebf th\u1eeba t\u1eeb Animal)\ndog.bark(); // \"Woof!\" (method c\u1ee7a Dog)\n</code></pre>"},{"location":"js/#enhanced-object-literals-trong-javascript-es6","title":"Enhanced object literals trong javascript ES6","text":"<p>Enhanced object literals (object literals c\u1ea3i ti\u1ebfn) trong ES6 cung c\u1ea5p c\u00fa ph\u00e1p ng\u1eafn g\u1ecdn h\u01a1n \u0111\u1ec3 t\u1ea1o object:</p> <ul> <li>Shorthand property names: N\u1ebfu key v\u00e0 value c\u00f3 c\u00f9ng t\u00ean bi\u1ebfn, c\u00f3 th\u1ec3 vi\u1ebft t\u1eaft <code>key</code> thay v\u00ec <code>key: key</code>.</li> <li>Method shorthand: B\u1ecf t\u1eeb kh\u00f3a <code>function</code> khi \u0111\u1ecbnh ngh\u0129a method trong object.</li> <li>Computed property names: Key c\u00f3 th\u1ec3 l\u00e0 bi\u1ec3u th\u1ee9c \u0111\u01b0\u1ee3c t\u00ednh to\u00e1n trong ngo\u1eb7c vu\u00f4ng <code>[...]</code>.</li> </ul> <p>V\u00ed d\u1ee5:</p> <pre><code>let name = \"Gemini\";\nlet age = 2;\n\nlet person = {\n    name, // Shorthand property name (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng name: name)\n    age,  // Shorthand property name (t\u01b0\u01a1ng \u0111\u01b0\u01a1ng age: age)\n    greet() { // Method shorthand (b\u1ecf function keyword)\n        console.log(\"Xin ch\u00e0o, t\u00f4i l\u00e0 \" + this.name);\n    },\n    [\"skill\" + \"1\"]: \"learning\" // Computed property name (key \u0111\u01b0\u1ee3c t\u00ednh to\u00e1n)\n};\n\nconsole.log(person.name); // \"Gemini\"\nperson.greet(); // \"Xin ch\u00e0o, t\u00f4i l\u00e0 Gemini\"\nconsole.log(person.skill1); // \"learning\"\n</code></pre>"},{"location":"js/#default-parameter-values-trong-javascript-es6","title":"Default parameter values trong JavaScript ES6","text":"<p>Default parameter values (gi\u00e1 tr\u1ecb tham s\u1ed1 m\u1eb7c \u0111\u1ecbnh) trong ES6 cho ph\u00e9p g\u00e1n gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh cho tham s\u1ed1 c\u1ee7a h\u00e0m. N\u1ebfu khi g\u1ecdi h\u00e0m kh\u00f4ng truy\u1ec1n \u0111\u1ed1i s\u1ed1 cho tham s\u1ed1 \u0111\u00f3, tham s\u1ed1 s\u1ebd nh\u1eadn gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>function greet(name = \"Guest\") { // Tham s\u1ed1 name c\u00f3 gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh \"Guest\"\n    console.log(\"Xin ch\u00e0o, \" + name + \"!\");\n}\n\ngreet(\"Gemini\"); // \"Xin ch\u00e0o, Gemini!\" (truy\u1ec1n \u0111\u1ed1i s\u1ed1)\ngreet(); // \"Xin ch\u00e0o, Guest!\" (kh\u00f4ng truy\u1ec1n \u0111\u1ed1i s\u1ed1, d\u00f9ng gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh)\n</code></pre>"},{"location":"js/#destructuring-trong-javascript-es6","title":"Destructuring trong JavaScript ES6","text":"<p>Destructuring (ph\u00e2n r\u00e3 c\u1ea5u tr\u00fac) trong ES6 cho ph\u00e9p \"gi\u1ea3i n\u00e9n\" gi\u00e1 tr\u1ecb t\u1eeb m\u1ea3ng ho\u1eb7c object v\u00e0o c\u00e1c bi\u1ebfn ri\u00eang bi\u1ec7t m\u1ed9t c\u00e1ch ng\u1eafn g\u1ecdn.</p> <ul> <li>V\u00ed d\u1ee5 (destructuring m\u1ea3ng):</li> </ul> <pre><code>let colors = [\"red\", \"green\", \"blue\"];\nlet [firstColor, secondColor, thirdColor] = colors; // Destructuring m\u1ea3ng\n\nconsole.log(firstColor); // \"red\"\nconsole.log(secondColor); // \"green\"\nconsole.log(thirdColor); // \"blue\"\n</code></pre> <ul> <li>V\u00ed d\u1ee5 (destructuring object):</li> </ul> <pre><code>let person = { name: \"Gemini\", age: 2, city: \"Internet\" };\nlet { name, age } = person; // Destructuring object (l\u1ea5y thu\u1ed9c t\u00ednh name v\u00e0 age)\n\nconsole.log(name); // \"Gemini\"\nconsole.log(age); // 2\n</code></pre>"},{"location":"js/#spread-trong-javascript-es6","title":"Spread trong JavaScript ES6","text":"<p>Spread operator (<code>...</code>) trong ES6 c\u00f3 nhi\u1ec1u \u1ee9ng d\u1ee5ng:</p> <ul> <li>Copy m\u1ea3ng/object: T\u1ea1o b\u1ea3n sao n\u00f4ng (shallow copy) c\u1ee7a m\u1ea3ng ho\u1eb7c object.</li> <li>N\u1ed1i m\u1ea3ng: N\u1ed1i nhi\u1ec1u m\u1ea3ng th\u00e0nh m\u1ed9t m\u1ea3ng m\u1edbi.</li> <li>Truy\u1ec1n \u0111\u1ed1i s\u1ed1 h\u00e0m: Truy\u1ec1n c\u00e1c ph\u1ea7n t\u1eed c\u1ee7a m\u1ea3ng l\u00e0m \u0111\u1ed1i s\u1ed1 ri\u00eang l\u1ebb cho h\u00e0m.</li> <li> <p>Rest parameters (tham s\u1ed1 rest): Thu th\u1eadp c\u00e1c \u0111\u1ed1i s\u1ed1 c\u00f2n l\u1ea1i c\u1ee7a h\u00e0m v\u00e0o m\u1ed9t m\u1ea3ng.</p> </li> <li> <p>V\u00ed d\u1ee5 (copy m\u1ea3ng, n\u1ed1i m\u1ea3ng):</p> </li> </ul> <pre><code>let arr1 = [1, 2, 3];\nlet arr2 = [...arr1]; // Copy m\u1ea3ng arr1\nconsole.log(arr2); // [1, 2, 3]\narr2.push(4); // Thay \u0111\u1ed5i arr2 kh\u00f4ng \u1ea3nh h\u01b0\u1edfng arr1 (shallow copy)\nconsole.log(arr1); // [1, 2, 3]\n\nlet arr3 = [4, 5, 6];\nlet combinedArray = [...arr1, ...arr3]; // N\u1ed1i m\u1ea3ng arr1 v\u00e0 arr3\nconsole.log(combinedArray); // [1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"js/#khai-niem-tagged-template-literals-it-nguoi-biet","title":"Kh\u00e1i ni\u1ec7m tagged template literals (\u00edt ng\u01b0\u1eddi bi\u1ebft)","text":"<p>Tagged template literals l\u00e0 m\u1ed9t t\u00ednh n\u0103ng n\u00e2ng cao c\u1ee7a template literals. Cho ph\u00e9p b\u1ea1n \u0111\u1ecbnh ngh\u0129a m\u1ed9t \"tag function\" \u0111\u1ec3 x\u1eed l\u00fd template literal theo c\u00e1ch t\u00f9y ch\u1ec9nh. \u00cdt d\u00f9ng trong th\u1ef1c t\u1ebf h\u00e0ng ng\u00e0y, nh\u01b0ng h\u1eefu \u00edch trong m\u1ed9t s\u1ed1 tr\u01b0\u1eddng h\u1ee3p \u0111\u1eb7c bi\u1ec7t (v\u00ed d\u1ee5: sanitizing input, i18n...).</p>"},{"location":"js/#module-trong-javascript-es6","title":"Module trong JavaScript ES6","text":"<p>Modules trong ES6 cho ph\u00e9p chia code JavaScript th\u00e0nh c\u00e1c file (module) ri\u00eang bi\u1ec7t, gi\u00fap code c\u00f3 c\u1ea5u tr\u00fac t\u1ed1t h\u01a1n, d\u1ec5 t\u00e1i s\u1eed d\u1ee5ng, d\u1ec5 b\u1ea3o tr\u00ec.</p> <ul> <li><code>export</code>: \u0110\u1ec3 export (xu\u1ea5t) c\u00e1c bi\u1ebfn, h\u00e0m, class t\u1eeb module.</li> <li><code>import</code>: \u0110\u1ec3 import (nh\u1eadp) c\u00e1c module kh\u00e1c v\u00e0o module hi\u1ec7n t\u1ea1i.</li> </ul> <p>V\u00ed d\u1ee5:</p> <ul> <li><code>module1.js</code> (module 1):</li> </ul> <pre><code>    export const message = \"Xin ch\u00e0o t\u1eeb module 1!\"; // Export bi\u1ebfn\n    export function greet(name) { // Export h\u00e0m\n        console.log(message + \" \" + name);\n    }\n</code></pre> <ul> <li><code>main.js</code> (module ch\u00ednh):</li> </ul> <pre><code>    import { message, greet } from './module1.js'; // Import t\u1eeb module1.js\n\n    console.log(message); // \"Xin ch\u00e0o t\u1eeb module 1!\"\n    greet(\"User\"); // \"Xin ch\u00e0o t\u1eeb module 1! User\"\n</code></pre> <ul> <li>Trong HTML, c\u1ea7n th\u00eam <code>type=\"module\"</code> v\u00e0o th\u1ebb <code>&lt;script&gt;</code>:</li> </ul> <pre><code>    &lt;script type=\"module\" src=\"main.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"js/#khai-niem-optional-chaining","title":"Kh\u00e1i ni\u1ec7m Optional chaining","text":"<p>Optional chaining operator <code>?.</code> (ES2020+) gi\u00fap truy c\u1eadp thu\u1ed9c t\u00ednh c\u1ee7a object m\u1ed9t c\u00e1ch an to\u00e0n, tr\u00e1nh l\u1ed7i khi object ho\u1eb7c thu\u1ed9c t\u00ednh trung gian c\u00f3 th\u1ec3 <code>null</code> ho\u1eb7c <code>undefined</code>. N\u1ebfu gi\u00e1 tr\u1ecb tr\u01b0\u1edbc <code>?.</code> l\u00e0 <code>null</code> ho\u1eb7c <code>undefined</code>, bi\u1ec3u th\u1ee9c tr\u1ea3 v\u1ec1 <code>undefined</code> ngay l\u1eadp t\u1ee9c, kh\u00f4ng g\u00e2y l\u1ed7i.</p> <p>V\u00ed d\u1ee5:</p> <pre><code>let user = {\n    name: \"Gemini\",\n    address: {\n        city: \"Internet\"\n    }\n};\n\nconsole.log(user.address?.city); // \"Internet\" (truy c\u1eadp an to\u00e0n, n\u1ebfu address c\u00f3 t\u1ed3n t\u1ea1i)\nconsole.log(user.profile?.email); // undefined (user.profile kh\u00f4ng t\u1ed3n t\u1ea1i, kh\u00f4ng l\u1ed7i)\n\n// Kh\u00f4ng d\u00f9ng optional chaining, c\u00f3 th\u1ec3 g\u00e2y l\u1ed7i:\n// console.log(user.profile.email); // L\u1ed7i: Cannot read property 'email' of undefined\n</code></pre>"},{"location":"js/#fetch","title":"Fetch","text":"<p>Fetch API l\u00e0 built-in API hi\u1ec7n \u0111\u1ea1i trong JavaScript \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\u00e1c request HTTP (g\u1ecdi API) m\u1ed9t c\u00e1ch b\u1ea5t \u0111\u1ed3ng b\u1ed9 (d\u1ef1a tr\u00ean Promise). Thay th\u1ebf cho <code>XMLHttpRequest</code> c\u0169.</p> <ul> <li>V\u00ed d\u1ee5 (GET request v\u1edbi Fetch API):</li> </ul> <pre><code>fetch('https://jsonplaceholder.typicode.com/todos/1') // G\u1ecdi API GET\n    .then(response =&gt; response.json()) // Parse response body th\u00e0nh JSON (tr\u1ea3 v\u1ec1 Promise)\n    .then(data =&gt; { // Ch\u1ea1y khi Promise t\u1eeb response.json() fulfilled\n        console.log(data); // In ra d\u1eef li\u1ec7u JSON\n    })\n    .catch(error =&gt; { // B\u1eaft l\u1ed7i n\u1ebfu c\u00f3 l\u1ed7i trong qu\u00e1 tr\u00ecnh fetch ho\u1eb7c parse JSON\n        console.error(\"L\u1ed7i fetch:\", error);\n    });\n</code></pre>"},{"location":"js/#xam-lo-them-ve","title":"X\u00e0m l\u1edd th\u00eam v\u1ec1","text":""},{"location":"js/#strict-mode","title":"'strict' mode","text":""},{"location":"js/#the-module-pattern","title":"The module pattern","text":"<pre><code>(function() {\n    // statements;\n})();\n</code></pre> <p>Wraps all of your file's code in an anonymous function that is declared and immediately called.</p> <p>0 global symbols will be introduced!</p> <p>The variables and functions defined by your code cannot be accessed/modified externally (i.e. by other JS scripts).</p>"},{"location":"js/typescript/","title":"Typescript c\u01a1 b\u1ea3n","text":"<p>B\u00e0i vi\u1ebft g\u1ed1c: T\u00ecm Hi\u1ec3u TypeScript v\u00e0 Ki\u1ebfn Th\u1ee9c C\u01a1 B\u1ea3n - Viblo</p>"},{"location":"js/typescript/#cai-at","title":"C\u00e0i \u0111\u1eb7t","text":"<ol> <li>Ch\u1ea1y l\u1ec7nh sau \u0111\u1ec3 install TypeScript (nh\u1edb install nodejs tr\u01b0\u1edbc):</li> </ol> <pre><code>npm install -g typescript\n</code></pre> <ol> <li>Compile:</li> </ol> <p>Vi\u1ec7c n\u00e0y s\u1ebd gi\u00fap t\u1ea1o ra file xxx.js</p>"},{"location":"js/typescript/#basic-types","title":"Basic Types:","text":"<p>Trong TypeScript chia ra l\u00e0m 7 lo\u1ea1i c\u01a1 b\u1ea3n, bao g\u1ed3m: boolean, number, string, array, enum, any, void. khi khai b\u00e1o ta s\u1ebd s\u1eed d\u1ee5ng c\u1ea5u tr\u00fac nh\u01b0 sau: var t\u00ean_bi\u1ebfn : ki\u1ec3u_tr\u1ea3_v\u1ec1 = gi\u00e1_tr\u1ecb_bi\u1ebfn;</p> <ul> <li>Boolean:</li> </ul> <pre><code>var isDone: boolean = true;\n</code></pre> <ul> <li>String:</li> </ul> <pre><code>var name: boolean = \"nguyen thi A\";\n</code></pre> <ul> <li> <p>Number:</p> </li> <li> <p>Array : c\u00f3 2 ki\u1ec3u khai b\u00e1o t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi nhau trong TypeScript</p> </li> </ul> <pre><code>1: var list: boolean[] = [true, false];\n2: var isDone: Array&lt;boolean&gt; = [true, false];\n</code></pre> <ul> <li>Enum: khi khai b\u00e1o enum m\u1ed9t c\u00e1ch th\u00f4ng th\u01b0\u1eddng c\u00e1c ph\u1ea7n t\u1eed s\u1ebd \u0111\u01b0\u1ee3c \u0111\u00e1nh s\u1ed1 t\u1eeb 0 v\u00e0 t\u0103ng d\u1ea7n</li> </ul> <pre><code>enum Color{Red, Green, Blue};\nvar c: Color = Color.Green\nvar colorName = Color[1] // k\u1ebft qu\u1ea3 s\u1ebd l\u00e0 Green\n</code></pre> <p>Khi m\u1ed1n ph\u1ea7n t\u1eed \u0111\u1ea7u ti\u00ean l\u00e0 1 ch\u1ee9 kh\u00f4ng ph\u1ea3i l\u00e0 0 nh\u01b0 m\u1eb7c \u0111\u1ecbnh th\u00ec c\u1ea7n khai b\u00e1o nh\u01b0 sau:</p> <pre><code>enum Color{Red = 1, Green, Blue};\nvar c: Color = Color.Green\nvar colorName = Color[1] // k\u1ebft qu\u1ea3 s\u1ebd l\u00e0 Red\n</code></pre> <ul> <li>Any: Any l\u00e0 m\u1ed9t ki\u1ec3u m\u00e0 b\u1ea1n c\u00f3 th\u1ec3 g\u00e1n b\u1ea5t k\u1ef3 ki\u1ec3u n\u00e0o cho n\u00f3.</li> </ul> <pre><code>var notSure: any = 4;\nnotSure = \"maybe a string instead\";\nnotSure = false; // khai b\u00e1o n\u00e0y ho\u00e0n to\u00e0n \u0111\u01b0\u1ee3c ch\u1ea5p nh\u1eadn.\n                 // n\u1ebfu notSure ban \u0111\u1ea7u khai b\u00e1o v\u00e0 number th\u00ec\n                 // t\u1ea1i \u0111\u00e2y ch\u1eafc ch\u1eafn s\u1ebd c\u00f3 l\u1ed7i\n\nvar list:any[] = [1, true, \"free\"]; // n\u1ebfu s\u1eed d\u1ee5ng var list:number[] th\u00ec\n                                    // t\u1ea5t c\u1ea3 c\u00e1c ph\u1ea7n t\u1eed trong list s\u1ebd ph\u1ea3i l\u00e0 ki\u1ec3u number\nlist[1] = 100;\n</code></pre> <ul> <li>Void: C\u0169ng gi\u1ed1ng nh\u01b0 any nh\u01b0ng void \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng l\u00e0 \u0111\u1ea7u ra c\u1ee7a h\u00e0m.</li> </ul> <pre><code>function warnUser(): void {\n alert(\"This is my warning message\");\n}\n</code></pre>"},{"location":"js/typescript/#function","title":"Function:","text":"<p>C\u0169ng gi\u1ed1ng nh\u01b0 javaScript, typeScript c\u00f3 2 c\u00e1ch khai b\u00e1o function</p> <pre><code>//Named function\nfunction add(x, y) {\n    return x+y;\n}\n\n//Anonymous function\nvar myAdd = function(x, y) { return x+y; };\n</code></pre> <p>Nh\u01b0ng khi khai b\u00e1o function typeScript c\u00f2n h\u1ed7 ch\u1ee3 vi\u1ec7c khai b\u00e1o v\u1edbi c\u00e1c ki\u1ec3u tr\u1ea3 ra c\u1ee7a function v\u00e0 c\u0169ng nh\u01b0 ki\u1ec3u \u0111\u1ea7u v\u00e0o c\u1ee7a d\u1eef li\u1ec7u</p> <pre><code>function add(x: number, y: number): number {\n    return x+y;\n}\n\nvar myAdd = function(x: number, y: number): number { return x+y; };\n</code></pre> <p>Kh\u00f4ng nh\u1eefng th\u1ebf khi s\u1eed d\u1ee5ng typeScript ta c\u00f3 th\u1ec3 khai b\u00e1o gi\u00e1 tr\u1ecb m\u1eb7c \u0111\u1ecbnh c\u1ee7a \u0111\u1ea7u v\u00e0o ngay khi khai b\u00e1o function, \u0111i\u1ec1u m\u00e0 JavaScript kh\u00f4ng c\u00f3</p> <pre><code>function buildName(firstName: string, lastName = \"Smith\") {\n    return firstName + \" \" + lastName;\n}\n\nvar result1 = buildName(\"Bob\");  //l\u00e0m vi\u1ec7c ho\u00e0n to\u00e0n OK. buildName(\"bob\") = \"bob Smith\"\nvar result2 = buildName(\"Bob\", \"Adams\", \"Sr.\");  //error, too many parameters\nvar result3 = buildName(\"Bob\", \"Adams\");  //ah, just right\n</code></pre> <ul> <li>Kh\u00f4ng d\u1eebng l\u1ea1i \u1edf \u0111\u00f3 typeScript c\u00f2n h\u1ed7 ch\u1ee3 vi\u1ec7c b\u1ecf qua nh\u1eadp m\u1ed9t ho\u1eb7c v\u00e0i \u0111\u1ea7u v\u00e0o.</li> </ul> <pre><code>function buildName(firstName: string, lastName?: string) {\n    if (lastName)\n        return firstName + \" \" + lastName;\n    else\n        return firstName;\n}\n\nvar result1 = buildName(\"Bob\");  //l\u00e0m vi\u1ec7c ho\u00e0n to\u00e0n OK. buildName(\"bob\") = \"bob\"\nvar result2 = buildName(\"Bob\", \"Adams\", \"Sr.\");  //error, too many parameters\nvar result3 = buildName(\"Bob\", \"Adams\");  //ah, just right\n</code></pre> <p>\u1edf v\u00ed d\u1ee5 tr\u00ean vi\u1ec7c khai b\u00e1o bi\u1ebfn lastName? l\u00e0m cho vi\u00eac nh\u1eadp lastName c\u00f3 th\u1ec3 kh\u00f4ng c\u1ea7n n\u1eefa v\u00e0 k\u1ebft qu\u1ea3 tr\u1ea3 ra ch\u1ec9 l\u00e0 bob m\u00e0 th\u00f4i. typeScript c\u00f2n c\u00f3 m\u1ed9t c\u00e1ch l\u00e0m vi\u1ec7c v\u1edbi c\u00e1c param \u0111\u1ea7u v\u00e0o c\u00f3 t\u00ean g\u1ecdi: \"Rest Parameters\"</p> <pre><code>function buildName(firstName: string, ...restOfName: string[]) {\n    return firstName + \" \" + restOfName.join(\" \");\n}\n\nvar employeeName = buildName(\"Joseph\", \"Samuel\", \"Lucas\", \"MacKinzie\");// =&gt; \"Joseph Samuel Lucas MacKinzie\"\n</code></pre> <p>\u1edf tr\u00ean firstName s\u1ebd l\u00e0 b\u1eaft bu\u1ed9c ph\u1ea3i nh\u1eadp. c\u00f2n c\u00e1c th\u00e0nh ph\u1ea7n c\u00f2n l\u1ea1i s\u1ebd \u0111\u01b0\u1ee3c g\u1ed9p chung v\u00e0o m\u1ed9t bi\u1ebfn array.</p>"},{"location":"js/typescript/#class","title":"Class:","text":"<pre><code>class Greeter {\n    greeting: string;\n    constructor(message: string) {\n        this.greeting = message;\n    }\n    greet() {\n        return \"Hello, \" + this.greeting;\n    }\n}\nvar greeter = new Greeter(\"world\");\n</code></pre> <p>h\u00e0m constructor s\u1ebd \u0111\u01b0\u1ee3c ch\u1ea1y ngay khi kh\u1edfi t\u1ea1o class m\u1edbi. \u1edd v\u00ed d\u1ee5 tr\u00ean khi khai b\u00e1o new Greeter(\"world\") th\u00ec vi\u1ec7c \u0111\u00e2u ti\u00ean s\u1ebd l\u00e0 ch\u1ea1y h\u00e0m constructor g\u00e1n message \"world\" v\u00e0o bi\u1ebfn greeting c\u1ee7a class. H\u01a1n n\u1eefa, c\u0169ng gi\u1ed1ng nh\u01b0 c\u00e1c ng\u00f4n ng\u1eef l\u1eadp tr\u00ecnh h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng kh\u00e1c. ch\u00fang ta c\u0169ng c\u00f3 th\u1ec3 d\u1ec5 d\u00e0ng s\u1eed d\u1ee5ng k\u1ebf th\u1eeba trong typeScript.</p> <pre><code>class Animal {\n    name: string;\n    constructor(theName: string) {\n        this.name = theName;\n    }\n\n    move(meters: number = 0): string {\n        return this.name + \" moved \" + meters + \"m.\";\n    }\n}\n\nclass Snake extends Animal {\n    constructor(name: string) {\n        super(name);\n    }\n\n    move(meters = 5): string {\n        return super.move(meters);\n    }\n}\n\nvar ranLuc = new Snake(\"Ran Luc\");\nranLuc.move();   // = Ran Luc moved 5 m.\nranLuc.move(34); // = Ran Luc moved 34 m.\n</code></pre> <p>\u1ede \u0111\u00e2y ch\u00fang ta s\u1ebd c\u00f3 class Animal bao g\u1ed3m c\u00f3 bi\u1ebfn name ch\u01b0a t\u00ean, v\u00e0 function move ch\u1ec9 s\u1ef1 di chuy\u1ec3n c\u1ee7a \u0111\u1ed9ng v\u1eadt \u00fd. Class Snake k\u1ebf th\u1eeba l\u1ea1i class Animal. Trong h\u00e0m kh\u1edfi t\u1ea1o c\u1ee7a class Snake ta \u0111\u00e3 s\u1eed d\u1ee5ng super(name), vi\u1ec7c n\u00e0y ch\u00ednh l\u00e0 vi\u1ec7c g\u1ecdi t\u1edbi h\u00e0m constructor c\u1ee7a class cha. T\u01b0\u01a1ng t\u1ef1 t\u1ea1i h\u00e0m move vi\u1ec7c g\u1ecdi super.move(meters) ch\u00ednh l\u00e0 g\u1ecdi th\u1edbi h\u00e0m move c\u1ee7a class cha (Animal).</p>"},{"location":"js-frameworks/svelte/","title":"Svelte","text":""},{"location":"js-frameworks/svelte/#khoi-tao-them-vao-du-an","title":"Kh\u1edfi t\u1ea1o + th\u00eam v\u00e0o d\u1ef1 \u00e1n...","text":"<p>\u0110ang h\u1ecdc tr\u00ean Documentation c\u1ee7a d\u1ef1 \u00e1n...</p>"},{"location":"js-frameworks/svelte/#styling","title":"Styling","text":"<p>Importantly, these rules are scoped to the component. You won\u2019t accidentally change the style of <p> elements elsewhere in your app, as we\u2019ll see in the next step.</p> <p>html directly</p> <pre><code>&lt;script&gt;\n    let string = `this string contains some &lt;strong&gt;HTML!!!&lt;/strong&gt;`;\n&lt;/script&gt;\n\n&lt;p&gt;{@html string}&lt;/p&gt;\n</code></pre>"},{"location":"js-frameworks/svelte/#state-thuong-va-deep-state","title":"State th\u01b0\u1eddng v\u00e0 deep state","text":"<p>As we saw in the previous exercise, state reacts to reassignments. But it also reacts to mutations \u2014 we call this deep reactivity.</p> <p>Often, you will need to derive state from other state. For this, we have the $derived rune:</p> <p>The expression inside the $derived declaration will be re-evaluated whenever its dependencies (in this case, just numbers) are updated. Unlike normal state, derived state is read-only.</p>"},{"location":"khmt/ktmt/Adder%20Chip/","title":"Adder Chip","text":"<p>![[img/Pasted image 20250527090759.png]] - Half adder: designed to add 2 bits - Full adder: designed to add 3 bits (V\u1ec1 c\u01a1 b\u1ea3n l\u00e0 Half Adder nh\u01b0ng c\u00f3 l\u01b0u th\u00eam overflow bit khi th\u1ef1c hi\u1ec7n t\u00ednh to\u00e1n: [[Arithmetic Logic]]) - Adder: designed to add two n-bit numbers. M\u1ed9t s\u1ed1 kh\u00e1i ni\u1ec7m kh\u00e1c c\u1ea7n nh\u1edb (C\u00e1i n\u00e0y d\u00f9ng trong implementation th\u00f4i...): - sum = LSB of a + b - carry = MSB of a + b</p>"},{"location":"khmt/ktmt/Adder%20Chip/#half-adder","title":"Half adder","text":"<p>![[img/Pasted image 20250527091707.png]] Chi \u0111\u1ec3 th\u00eam hai s\u1ed1, m\u00e0 kh\u00f4ng t\u00ednh ph\u1ea7n d\u01b0 (carry)</p>"},{"location":"khmt/ktmt/Adder%20Chip/#full-adder","title":"Full adder","text":"<p>![[img/Pasted image 20250527091741.png]] V\u1ec1 c\u01a1 b\u1ea3n l\u00e0 half adder, nh\u01b0ng c s\u1ebd ch\u1ee9a c\u1ea3 carry bit t\u1eeb ph\u00e9p to\u00e1n half adder tr\u01b0\u1edbc n\u1eefa!</p>"},{"location":"khmt/ktmt/Adder%20Chip/#adder","title":"Adder","text":"<p>![[img/Pasted image 20250527091833.png]] Implementation: array of full-adder gates.</p> <p>T\u1eeb c\u00e1c chip n\u00e0y ch\u00fang ta c\u00f3 th\u1ec3 x\u00e2y d\u1ef1ng m\u1ed9t [[Arithmetic Logic Unit]] ho\u00e0n ch\u1ec9nh, ch\u1eafc v\u1eady.</p>"},{"location":"khmt/ktmt/Arithmetic%20Logic%20Unit/","title":"Arithmetic Logic Unit","text":"<p>L\u00e0 m\u1ed9t th\u00e0nh ph\u1ea7n trong [[CPU]], th\u1ef1c hi\u1ec7n c\u00e1c nhi\u1ec7m v\u1ee5 li\u00ean quan \u0111\u1ebfn t\u00ednh to\u00e1n ([[Arithmetic Logic]]). \u0110\u01b0\u1ee3c x\u00e2y d\u1ef1ng t\u1eeb c\u00e1c [[Adder Chip]]. The (Hack) ALU computes a \ufb01xed set of functions $out=fi(x, y)$ where x and y are the chip\u2019s two 16-bit inputs, out is the chip\u2019s 16-bit output, and fi is an arithmetic or logical function selected from a \ufb01xed repertoire of eighteen possible functions (\u1ede \u0111\u00e2y ng\u1eef c\u1ea3nh l\u00e0 Hack ALU, c\u00f2n l\u1ea1i th\u00ec t\u01b0\u01a1ng t\u1ef1). ![[img/Pasted image 20250527091933.png]] 6 c\u00e1i m\u0169i t\u00ean \u1edf h\u01b0\u1edbng tr\u00ean t\u01b0\u1ee3ng tr\u01b0ng cho 6 control bits (We instruct the ALU which function to compute by setting six input bits, called control bits, to selected binary values). D\u01b0\u1edbi \u0111\u00e2y l\u00e0 b\u1ea3ng cho 6 control bits \u1edf tr\u00ean ![[img/Pasted image 20250527092413.png]] C\u00f2n m\u1ed9t ph\u1ea7n n\u1eefa l\u00e0 c\u00e1i Output (Kh\u00f4ng nh\u1edb ch\u00ednh x\u00e1c l\u00e0 n\u00f3 \u0111\u1ec3 l\u00e0m g\u00ec): <pre><code>zr // True iff out=0\nng // True iff out&lt;0\n</code></pre></p>"},{"location":"khmt/ktmt/Arithmetic%20Logic/","title":"X","text":"<p>Assuming a 4-bit system: ![[img/Pasted image 20250527090914.png]] Algorithm: exactly the same as in decimal addition. Overflow (MSB carry) has to be dealt with. C\u00f3 hai lo\u1ea1i \"kho\u1ea3ng d\u1eef li\u1ec7u\" (?) l\u00e0 signed v\u00e0 unsigned (V\u00ed d\u1ee5 v\u1ec1 range th\u00ec v\u1edbi 8-bit ch\u1eb3ng h\u1ea1n, th\u00ec v\u1edbi unsigned ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c s\u1ed1 t\u1eeb 0 cho t\u1edbi 255, nh\u01b0ng v\u1edbi signed th\u00ec l\u00e0 -127 cho t\u1edbi +127).</p> <p>\u0110\u1ec3 th\u1ec3 hi\u1ec7u d\u1ea5u \u00e2m trong s\u1ed1 (signed) th\u00ec ta s\u1eed d\u1ee5ng Two's Complement ![[img/Pasted image 20250527091526.png]] M\u1ed9t s\u1ed1 c\u00e1c quy t\u1eafc: - The codes of all positive numbers begin with a \u201c0\u201d - The codes of all negative numbers begin with a \u201c1\u201c - To convert a number: leave all trailing 0\u2019s 1 and first 1 intact, and flip all the remaining bits ![[img/Pasted image 20250527091553.png]]</p> <p>Quy t\u1eafc v\u1ec1 c\u01a1 b\u1ea3n ch\u1ec9 c\u00f3 v\u1eady th\u00f4i, \u1edf \u0111\u00e2y ch\u01b0a implement nh\u00e2n chia.</p>"},{"location":"khmt/ktmt/Assembly/","title":"X","text":""},{"location":"khmt/ktmt/Assembly/#ngon-ngu-assembly","title":"Ng\u00f4n ng\u1eef (Assembly)","text":"<p>Thay v\u00ec vi\u1ebft tr\u1ef1c ti\u1ebfp ng\u00f4n ng\u1eef m\u00e1y (Machine Language) \u0111\u1ec3 giao ti\u1ebfp v\u1edbi ng\u00f4n ng\u1eef, ta chuy\u1ec3n qua s\u1eed d\u1ee5ng symbolic code. S\u1ebd hay h\u01a1n khi vi\u1ebft d\u1ef1a tr\u00ean m\u1ed9t s\u1ed1 c\u00fa ph\u00e1p \u0111\u01b0\u1ee3c quy \u0111\u1ecbnh s\u1eb5n ki\u1ec3u LOAD R3,7 rather than 110000101000000110 000000000000111. The symbolic language is called assembly, and the translator program assembler. C\u1ea7n ph\u00e2n bi\u1ec7t gi\u1eefa variables v\u00e0 labels: - Variables \u0111\u1ec3 l\u01b0u tr\u1eef gi\u00e1 tr\u1ecb - Labels: one can declare the label loop to refer to the beginning of a certain code segment (\u0110\u1ec3 \u0111\u00e1nh d\u1ea5u ch\u1ee9c n\u0103ng c\u1ee7a c\u00e1c code segment nh\u1ea5t \u0111\u1ecbnh). Ph\u00e2n v\u00f9ng ki\u1ec3u d\u1eef li\u1ec7u &amp; kh\u00f4ng ph\u1ea3i m\u1ed7i instruction \u0111\u1ec1u == 1 word, v\u00e0 t\u01b0\u01a1ng t\u1ef1, kh\u00f4ng ph\u1ea3i bao gi\u1edd data type c\u0169ng ch\u1ec9 chi\u1ebfm \u0111\u00fang m\u1ed9t word width. Gi\u1ea3 s\u1eed $w=16bit$ \u0111i, th\u00ec m\u1ed9t bi\u1ebfn double (~64bit) s\u1ebd chi\u1ebfm 4 $words$, ki\u1ec3u v\u1eady.</p>"},{"location":"khmt/ktmt/Assembly/#trinh-bien-dich-assembler","title":"Tr\u00ecnh bi\u00ean d\u1ecbch (Assembler)","text":"<p>M\u1ed7i h\u1ecd vi x\u1eed l\u00fd c\u00f3 m\u1ed9t b\u1ed9 ch\u1ec9 d\u1eabn(instructions) ri\u00eang cho c\u00e1c ho\u1ea1t \u0111\u1ed9ng x\u1eed l\u00fd kh\u00e1c nh\u01b0 nh\u1eadp v\u00e0o b\u00e0n ph\u00edm, xu\u1ea5t th\u00f4ng tin ra m\u00e0n h\u00ecnh v\u00e0 nhi\u1ec1u c\u00f4ng vi\u1ec7c kh\u00e1c. Nh\u1eefng thi\u1ebft l\u1eadp ch\u1ec9 d\u1eabn n\u00e0y \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 'machine language instructions (Kh\u00f4ng nh\u1ea5t thi\u1ebft ph\u1ea3i theo \u0111\u00fang th\u1ee9 t\u1ef1): - Parse the symbolic command into its underlying \ufb01elds. - For each \ufb01eld, generate the corresponding bits in the machine language. - Replace all symbolic references (if any) with numeric addresses of memory locations. - Assemble the binary codes into a complete machine instruction.</p> <p>(S\u1ebd h\u1ecdc vi\u1ebft Assembly sau.... ch\u1ec9 l\u00e0 kh\u00f4ng bi\u1ebft l\u00e0 bao gi\u1edd th\u00f4i)</p>"},{"location":"khmt/ktmt/Bit/","title":"X","text":"<p>Bit (binary digit, ho\u1eb7c 1-bit [[Register]]) l\u00e0 \u0111\u01a1n v\u1ecb th\u00f4ng tin nh\u1ecf nh\u1ea5t trong m\u00e1y t\u00ednh. M\u1ed9t bit ch\u1ec9 c\u00f3 th\u1ec3 mang m\u1ed9t trong hai gi\u00e1 tr\u1ecb: 0 ho\u1eb7c 1. B\u1ea1n c\u00f3 th\u1ec3 h\u00ecnh dung m\u1ed9t bit nh\u01b0 m\u1ed9t c\u00f4ng t\u1eafc \u0111i\u1ec7n t\u1eed: b\u1eadt (1) ho\u1eb7c t\u1eaft (0). </p>"},{"location":"khmt/ktmt/Bit/#most-significant-bit-least-significant-bit","title":"Most Significant Bit &amp; Least Significant Bit","text":"<p>MSB n\u1eb1m \u1edf b\u00ean tr\u00e1i s\u1ed1, c\u00f2n LSB n\u1eb1m \u1edf b\u00ean ph\u1ea3i</p>"},{"location":"khmt/ktmt/Bit/#word","title":"Word","text":"<p>Word (t\u1eeb) l\u00e0 m\u1ed9t nh\u00f3m bit c\u00f3 k\u00edch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh m\u00e0 b\u1ed9 x\u1eed l\u00fd c\u00f3 th\u1ec3 x\u1eed l\u00fd nh\u01b0 m\u1ed9t \u0111\u01a1n v\u1ecb duy nh\u1ea5t. K\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ed9t word th\u01b0\u1eddng kh\u1edbp v\u1edbi \u0111\u1ed9 r\u1ed9ng d\u1eef li\u1ec7u (data width) m\u00e0 CPU c\u00f3 th\u1ec3 \u0111\u1ecdc ho\u1eb7c ghi t\u1eeb b\u1ed9 nh\u1edb (RAM) trong m\u1ed9t chu k\u1ef3.</p>"},{"location":"khmt/ktmt/Bit/#bit-binary-cell","title":"Bit (Binary Cell)","text":"<p>C\u00f3 hai ch\u1ee9c n\u0103ng c\u01a1 b\u1ea3n sau \u0111\u00e2y: (a) Change its state to a given input (b) Maintain its state over time (until changed) ![[img/Pasted image 20250527084439.png]]</p>"},{"location":"khmt/ktmt/Boolean%20Algebra/","title":"X","text":""},{"location":"khmt/ktmt/Boolean%20Algebra/#ai-so-boolean","title":"\u0110\u1ea1i s\u1ed1 Boolean","text":"<p>L\u00e0 m\u00f4n \u0111\u1ea1i s\u1ed1 xoay quanh vi\u1ec7c x\u1eed l\u00fd c\u00e1c gi\u00e1 tr\u1ecb Boolean (hay c\u00f2n g\u1ecdi l\u00e0 gi\u00e1 tr\u1ecb binary) ki\u1ec3u true/false, 1/0, yes/no, on/off, v.v. (B\u00e0i vi\u1ebft n\u00e0y s\u1ebd s\u1eed d\u1ee5ng 1 v\u00e0 0).</p>"},{"location":"khmt/ktmt/Boolean%20Algebra/#ham-boolean-boolean-function","title":"H\u00e0m Boolean (boolean function)","text":"<p>L\u00e0 h\u00e0m nh\u1eadn v\u00e0o c\u00e1c binary input v\u00e0 tr\u1ea3 v\u1ec1 c\u00e1c binary output. Ch\u00fang ta c\u00f3 th\u1ec3 k\u1ec3 \u0111\u1ebfn m\u1ed9t s\u1ed1 h\u00e0m Boolean \u0111\u01a1n gi\u1ea3n nh\u01b0: - Not(x) - And(x, y) - Or(x, y) - Nand(x, y) Ch\u00fang ta c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng: functional expression ho\u1eb7c truth table expression \u0111\u1ec3 th\u1ec3 hi\u1ec7n h\u00e0m boolean (S\u1ebd \u0111\u01b0\u1ee3c \u0111\u1ec1 c\u1eadp b\u00ean d\u01b0\u1edbi) Important observation: Every Boolean function can be expressed using And, Or, Not. Ho\u1eb7c th\u1eadm ch\u00ed, c\u00f3 th\u1ec3 ch\u1ec9 s\u1eed d\u1ee5ng h\u00e0m Nand c\u0169ng c\u00f3 th\u1ec3 t\u1ea1o \u0111\u01b0\u1ee3c t\u1ea5t c\u1ea3.</p>"},{"location":"khmt/ktmt/Boolean%20Algebra/#truth-table-representation","title":"Truth Table Representation","text":"<p>C\u00e1ch \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u1ec3 th\u1ec3 hi\u1ec7n Boolean function l\u00e0 li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb c\u00f3 th\u1ec3 c\u00f3 c\u1ee7a input v\u00e0 output t\u01b0\u01a1ng \u1ee9ng.</p> $x$ $y$ $z$ $f(x, y, z)$ 0 0 0 0 0 0 1 0 0 1 0 1 0 1 1 0 1 0 0 1 1 0 1 0 1 1 0 1 1 1 1 0 <p>Ba c\u1ed9t \u0111\u1ea7u ti\u00ean li\u1ec7t k\u00ea t\u1ea5t c\u1ea3 c\u00e1c gi\u00e1 tr\u1ecb binary c\u00f3 th\u1ec3 c\u00f3 c\u1ee7a x, y, z trong m\u1ed7i function. Ch\u00fang ta g\u1ecdi m\u1ed7i m\u1ed9t b\u1ed9 ba \u1edf m\u1ed7i h\u00e0ng trong b\u1ea3ng \u0111\u00f3 l\u00e0 m\u1ed9t tuple (x, y, z), v\u00ed d\u1ee5 nh\u01b0 \u1edf h\u00e0ng 2 th\u00ec ta c\u00f3 $(x, y, z) = (0, 0, 1)$ v\u00e0 $f(x, y, z) = 0$ ch\u1eb3ng h\u1ea1n. T\u1ea1i sao l\u1ea1i c\u00f3 8 h\u00e0ng? Ch\u00fang ta s\u1ebd c\u00f3 $2^n$ tuple v\u1edbi $n$ l\u00e0 s\u1ed1 l\u01b0\u1ee3ng input c\u1ee7a h\u00e0m boolean, \u1edf \u0111\u00e2y $n=3$ n\u00ean $2^3=8$</p>"},{"location":"khmt/ktmt/Boolean%20Algebra/#boolean-expressions","title":"Boolean Expressions","text":"<p>S\u1eed d\u1ee5ng c\u00e1c Boolean operations \u0111\u1ec3 th\u1ec3 hi\u1ec7n h\u00e0m boolean. C\u00e1c Boolean operators c\u01a1 b\u1ea3n nh\u01b0: - $And$: $x$ And $y$ l\u00e0 1  khi c\u1ea3 $x$ v\u00e0 $y$ \u0111\u1ec1u l\u00e0 1. Notation: $x.y$ (ho\u1eb7c $xy$) - $Or$: $x$ Or $y$ l\u00e0 1 ch\u00ednh x\u00e1c khi ho\u1eb7c $x$ ho\u1eb7c $y$ ho\u1eb7c c\u1ea3 hai \u0111\u1ec1u l\u00e0 1. Notation: $x+y$ - $Not$ Not $x$ l\u00e0 1 khi $x$ l\u00e0 0 v\u00e0 ng\u01b0\u1ee3c l\u1ea1i. Notation: $\\bar{x}$</p> <p>Ta c\u00f3 th\u1ec3 vi\u1ebft l\u1ea1i h\u00e0m boolean \u1edf tr\u00ean th\u00e0nh $f(x, y, z) = (x+y).\\bar{z}$.</p>"},{"location":"khmt/ktmt/Boolean%20Algebra/#canonical-representation","title":"Canonical Representation","text":"<p>Ch\u00fang ta c\u00f3 th\u1ec3 bi\u1ec3u di\u1ec5n m\u1ecdi Boolean function b\u1eb1ng \u00edt nh\u1ea5t m\u1ed9t Boolean expression \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 canonical representation. T\u1eeb truth table c\u1ee7a function, ch\u00fang ta t\u1eadp trung v\u00e0o t\u1ea5t c\u1ea3 c\u00e1c h\u00e0ng m\u00e0 function c\u00f3 gi\u00e1 tr\u1ecb l\u00e0 1. V\u00ed d\u1ee5, \u1edf h\u00e0ng th\u1ee9 3 trong truth table \u1edf tr\u00ean, gi\u00e1 tr\u1ecb c\u1ee7a h\u00e0m boolean l\u00e0 1.  C\u00e1c gi\u00e1 tr\u1ecb t\u01b0\u01a1ng \u1ee9ng c\u1ee7a m\u1ed7i bi\u1ebfn l\u00e0 $x=0$, $y=1$, $z=0$, n\u00ean ta t\u1ea1o m\u1ed9t \"term\" $\\bar{x}y\\bar{z}$. T\u01b0\u01a1ng t\u1ef1 cho c\u00e1c h\u00e0ng kh\u00e1c l\u00e0 h\u00e0ng s\u1ed1 5 v\u00e0 h\u00e0ng s\u1ed1 7 th\u00ec ta c\u00f3 $x\\bar{y}\\bar{z}$ v\u00e0 $x.y.\\bar{z}$ B\u00e2y gi\u1edd, n\u1ebfu ch\u00fang ta $+$ (Or) t\u1ea5t c\u1ea3 c\u00e1c term n\u00e0y (\u0111\u1ec3 cho t\u1ea5t c\u1ea3 c\u00e1c h\u00e0ng m\u00e0 function c\u00f3 gi\u00e1 tr\u1ecb 1), ch\u00fang ta nh\u1eadn \u0111\u01b0\u1ee3c m\u1ed9t Boolean expression t\u01b0\u01a1ng \u0111\u01b0\u01a1ng v\u1edbi truth table \u0111\u00e3 cho. Do \u0111\u00f3 canonical representation c\u1ee7a Boolean function tr\u00ean l\u00e0 $f(x, y, z) = \\bar{x}y\\bar{z} + x\\bar{y}\\bar{z} + x.y.\\bar{z}$. </p>"},{"location":"khmt/ktmt/Boolean%20Algebra/#two-input-boolean-functions","title":"Two-Input Boolean Functions","text":"<p>S\u1ed1 l\u01b0\u1ee3ng Boolean Function m\u00e0 c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c defined cho n (n \u1edf \u0111\u00e2y l\u00e0 s\u1ed1 l\u01b0\u1ee3ng bi\u1ebfn binary) l\u00e0 $2<sup>{2</sup>n}$. V\u00ed d\u1ee5: N\u1ebfu c\u00f3 hai bi\u1ebfn th\u00ec s\u1ed1 l\u01b0\u1ee3ng Boolean function c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c defined l\u00e0 $2^(2*2) = 16$</p>"},{"location":"khmt/ktmt/CPU/","title":"X","text":"<p>CPU bao g\u1ed3m: [[Arithmetic Logic Unit]] (Hay ALU), [[Control Unit]], [[Register]] (Bao g\u1ed3m [[Program Counter]])</p> <p>Khi x\u1eed l\u00fd d\u1eef li\u1ec7u trong CPU th\u00ec s\u1ebd tr\u00f4ng nh\u01b0 th\u1ebf n\u00e0y (Tr\u00edch t\u1eeb Hack CPU - nand2tetris) ![[img/Pasted image 20250527092015.png]]</p>"},{"location":"khmt/ktmt/C%E1%BB%95ng%20Logic/","title":"X","text":"<p>\u0110\u1ecbnh ngh\u0129a: L\u00e0 m\u1ed9t thi\u1ebft b\u1ecb \u0111\u1ec3 implement boolean function Boolean function bao g\u1ed3m (\u0110\u01b0\u1ee3c g\u1ecdi l\u00e0 c\u1ed5ng logic v\u1edbi implementation cho h\u00e0m f v\u1edbi n input pins v\u00e0 m output pins): - H\u00e0m f - n bi\u1ebfn - m binary results V\u00e0 gi\u1ed1ng nh\u01b0 c\u00e1c h\u00e0m Boolean ph\u1ee9c t\u1ea1p c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c bi\u1ec3u di\u1ec5n s\u1eed d\u1ee5ng c\u00e1c h\u00e0m c\u01a1 b\u1ea3n, c\u00e1c c\u1ed5ng ph\u1ee9c t\u1ea1p \u0111\u01b0\u1ee3c t\u1ea1o n\u00ean t\u1eeb c\u00e1c c\u1ed5ng c\u01a1 b\u1ea3n. C\u00e1c gates \u0111\u01a1n gi\u1ea3n nh\u1ea5t \u0111\u01b0\u1ee3c l\u00e0m t\u1eeb thi\u1ebft b\u1ecb b\u1eadt t\u1eaft (switching devices) si\u00eau \u0111\u01a1n gi\u1ea3n c\u00f3 t\u00ean l\u00e0 transistors, \u0111\u01b0\u1ee3c n\u1ed1i c\u00e1c ki\u1ec3u con \u0111\u00e0 \u0111i\u1ec3u \u0111\u1ec3 th\u00e0nh m\u1ed9t c\u00e1i c\u1ed5ng ph\u1ee9c t\u1ea1p h\u01a1n.</p> <p>![[img/Pasted image 20250526204839.png]]</p>"},{"location":"khmt/ktmt/C%E1%BB%95ng%20Logic/#primitive-and-composite-gates","title":"Primitive and Composite Gates","text":"<p>Hai ki\u1ec3u c\u1ed5ng l\u00e0 primitive gate (Ki\u1ec3u and, or, nand) v\u00e0 composite gate (C\u00e1c ki\u1ec3u c\u1ed5ng ph\u1ee9c t\u1ea1p h\u01a1n, k\u1ebft h\u1ee3p gi\u1eefa nhi\u1ec1u c\u1ed5ng primitive v\u1edbi nhau). V\u00ec t\u1ea5t c\u1ea3 c\u00e1c c\u1ed5ng logic \u0111\u1ec1u c\u00f3 c\u00f9ng input and output semantics (0s v\u00e0 1s), ch\u00fang c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c n\u1ed1i v\u1edbi nhau, t\u1ea1o ra composite gates c\u00f3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p kh\u00e1c nhau. ![[img/Pasted image 20250526205037.png]] \u0110\u00e2y l\u00e0 m\u1ed9t v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n v\u1ec1 gate logic, c\u00f2n \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 logic design.</p> <p>Ch\u00fang ta th\u1ea5y r\u1eb1ng b\u1ea5t k\u1ef3 c\u1ed5ng logic n\u00e0o \u0111\u00e3 cho \u0111\u1ec1u c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c xem t\u1eeb hai kh\u00eda c\u1ea1nh kh\u00e1c nhau: external v\u00e0 internal. Ph\u00eda b\u00ean ph\u1ea3i c\u1ee7a h\u00ecnh \u0111\u01b0a ra internal architecture, hay implementation, c\u1ee7a gate, trong khi ph\u00eda b\u00ean tr\u00e1i ch\u1ec9 hi\u1ec3n th\u1ecb gate interface, c\u1ee5 th\u1ec3 l\u00e0 c\u00e1c input and output pins m\u00e0 n\u00f3 t\u01b0\u01a1ng t\u00e1c. Ph\u1ea7n tr\u01b0\u1edbc th\u00ec ph\u00f9 h\u1ee3p cho nh\u1eefng ng\u01b0\u1eddi\u00a0s\u1eed d\u1ee5ng, ch\u1ec9 quan t\u00e2m v\u1ec1 c\u00e1i\u00a0what\u00a0hay\u00a0n\u00f3 l\u00e0m c\u00e1i g\u00ec. C\u00f2n ph\u1ea7n sau th\u00ec d\u00e0nh cho c\u00e1c ch\u1ebf thi\u1ebft k\u1ebf ph\u1ea7n c\u1ee9ng \u0111\u1ec3 hi\u1ec3u v\u1ec1 c\u00e1ch n\u00f3 v\u1eadn h\u00e0nh, c\u00e1ch m\u00e0 n\u00f3\u00a0\u0111\u01b0\u1ee3c implemented.</p> <p>T\u00f3m l\u1ea1i, ngh\u1ec7 thu\u1eadt c\u1ee7a logic design c\u00f3 th\u1ec3 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 th\u1ebf n\u00e0y: Cho m\u1ed9t gate specification (interface), t\u00ecm m\u1ed9t c\u00e1ch hi\u1ec7u qu\u1ea3 \u0111\u1ec3 implement n\u00f3 s\u1eed d\u1ee5ng c\u00e1c gates kh\u00e1c \u0111\u00e3 \u0111\u01b0\u1ee3c implemented tr\u01b0\u1edbc \u0111\u00f3.</p>"},{"location":"khmt/ktmt/C%E1%BB%95ng%20Logic/#cong-mux-demux","title":"C\u1ed5ng Mux &amp; Demux","text":"<p>Multiplexor A multiplexor is a three-input gate that uses one of the inputs, called \"selection bit\" to select and output one of the other two inputs, called \"data bits\" ![[img/Pasted image 20250526205010.png]]</p>"},{"location":"khmt/ktmt/Input%20%26%20Output/","title":"X","text":"<p>Tr\u00edch d\u1eabn t\u1eeb Lecture 5</p>"},{"location":"khmt/ktmt/Input%20%26%20Output/#input","title":"Input","text":"<p>Bao g\u1ed3m c\u00e1c thi\u1ebft b\u1ecb nh\u01b0 Mouse v\u00e0 keyboard.</p>"},{"location":"khmt/ktmt/Input%20%26%20Output/#output","title":"Output","text":"<p>Bao g\u1ed3m: M\u00e0n h\u00ecnh, Loa/tai nghe (\u00c2m thanh)....</p>"},{"location":"khmt/ktmt/Machine%20Language/","title":"X","text":""},{"location":"khmt/ktmt/Machine%20Language/#rat-chi-la-co-ban","title":"R\u1ea5t chi l\u00e0 c\u01a1 b\u1ea3n","text":"<p>Ng\u00f4n ng\u1eef m\u00e1y l\u00e0 c\u00e1ch m\u00e0 c\u00e1c l\u1eadp tr\u00ecnh vi\u00ean tr\u00f2 chuy\u1ec7n v\u1edbi m\u00e1y t\u00ednh v\u00e0 \u0111\u1ec3 \u0111\u01b0a ra c\u00e1c instructions cho n\u00f3. C\u00f3 hai ki\u1ec3u ng\u00f4n ng\u1eef m\u00e1y l\u00e0: binary code (Ki\u1ec3u vi\u1ebft th\u1eb3ng l\u00e0 00101000101) v\u1edbi symbolic code (Kh\u1edfi nguy\u00ean l\u00e0 assembly, ki\u1ec3u nh\u01b0 <code>ADD R3 R2 R1</code>, ngh\u0129a l\u00e0, c\u1ed9ng R1 v\u1edbi R2 r\u1ed3i l\u01b0u gi\u00e1 tr\u1ecb v\u00e0o R3). One can specify machine language instructions either directly, as 1010001100011001, or symbolically, as, say, ADD R3,R1,R9.</p> <p>\u0110\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c instruction: The instruction set of the underlying hardware platform. For example, the language may besuch that each instruction consists of four 4-bit \ufb01elds: The left-most field codes a CPU operation, and the remaining three \ufb01elds represent the operation\u2019s operands. Thus the previous command may code the operation set R3 to R1 + R9, depending of course on the hardware specification and the machine language syntax</p> <p>The symbolic notation is called assembly language, or simply [[Assembly]], and the program that translates from assembly to binary is called assembler.</p>"},{"location":"khmt/ktmt/Machine%20Language/#arithmetic-and-logic-operations","title":"Arithmetic and Logic Operations","text":"<pre><code>ADD R2,R1,R3 // R2&lt;---R1+R3 where R1,R2,R3 are registers\nADD R2,R1,foo \n// R2&lt;---R1+foo where foo stands for the\n// value of the memory location pointed at by the user-defined label foo.\nAND R1,R1,R2 // ---bit wise And of R1 and R2\n</code></pre>"},{"location":"khmt/ktmt/Machine%20Language/#memory-access","title":"Memory Access","text":"<p>Direct addressing: The most common way to address the memory is to express a speci\ufb01c address or use a symbol that refers to a speci\ufb01c address, as follows: <pre><code>LOAD R1,67 // R1 &lt;--- Memory[67]\n// Or, assuming that bar refers to memory address 67:\nLOAD R1,bar // R1 &lt;--- Memory[67]\n</code></pre> Immediate addressing: This form of addressing is used to load constants\u2014 namely, load values that appear in the instruction code: Instead of treating the numeric \ufb01eld that appears in the instruction as an address, we simply load the value of the \ufb01eld itself into the register, as follows: <pre><code>LOADI R1,67 // R1---67\n</code></pre> Indirect addressing: In this addressing mode the address of the required memory location is not hard-coded into the instruction; instead, the instruction speci\ufb01es a memory location that holds the required address. This addressing mode is used to handle pointers (Nh\u01b0 ki\u1ec3u trong C \u1ea5y, \u0111\u1eb7t m\u1ed9t bi\u1ebfn v\u1edbi ki\u1ec3u d\u1eef li\u1ec7u c\u00f3 d\u1ea5u * \u0111\u1ec3 bi\u1ec3u th\u1ecb n\u00f3 l\u00e0 m\u1ed9t pointer). <pre><code>// Translation of x=foo[j] or x=*(foo+j):\nADD R1,foo,j // R1&lt;---foo+j\nLOAD* R2,R1 // R2&lt;---Memory[R1]\nSTR R2,x // x&lt;---R2\n</code></pre></p>"},{"location":"khmt/ktmt/Machine%20Language/#flow-of-control","title":"Flow of control","text":"<p>While programs normally execute in a linear fashion, one command after the other, they also include occasional branches to locations other than the next command.</p> <p>Branching serves several purposes including: - Repetition ( jump backward to the beginning of a loop) - Conditional execution (if a Boolean condition is false, jump forward to the location after the \u2018\u2018if-then\u2019\u2019 clause) - Subroutine calling (jump to the \ufb01rst command of some other code segment).</p> <p>V\u00ed d\u1ee5 cho ph\u1ea7n code \u1edf ng\u00f4n ng\u1eef High-level <pre><code>// A while loop:\nwhile (R1&gt;=0) {\n    code segment 1\n}\ncode segment 2\n</code></pre></p> <p>Low-level <pre><code>// Typical translation:\nbeginWhile:\n    JNG R1,endWhile // If R1&lt;0 goto endWhile\n    // Translation of code segment 1 comes here\n    JMP beginWhile // Goto beginWhile\nendWhile:\n// Translation of code segment 2 comes here\n</code></pre></p>"},{"location":"khmt/ktmt/Memory/","title":"X","text":""},{"location":"khmt/ktmt/Memory/#khai-niem-co-ban-ve-memory","title":"Kh\u00e1i ni\u1ec7m c\u01a1 b\u1ea3n v\u1ec1 Memory","text":"<p>Memory: The term memory refers loosely to the collection of hardware devices that store data and instructions in a computer. All memories have the same structure: A continuous array of cells of some fixed width, also called words or locations, each having a unique address.</p>"},{"location":"khmt/ktmt/Memory/#ram","title":"RAM","text":"<p>A direct-access memory unit, also called RAM, is an array of n w-[[Bit]] registers, equipped with direct access circuitry. The number of registers (n) and the width of each register (w) are called the memory\u2019s size and width, respectively. Stacking together many [[Register]] to form a Random Access Memory (RAM) unit. Implement c\u00e1i RAM (V\u1ec1 c\u01a1 b\u1ea3n l\u00e0 m\u1ed9t Stack ch\u1ee9a nhi\u1ec1u Registers) v\u1edbi m\u1ed9t c\u01a1 ch\u1ebf \u0111\u1eb7c bi\u1ec7t kh\u00e1c \u0111\u1ec3 tra c\u1ee9u d\u1eef li\u1ec7u d\u1ef1a tr\u00ean \u0111\u1ecba ch\u1ec9 Modern computers typically employ 32- or 64-bit-wide RAMs whose sizes are up to hundreds of millions. ![[img/Pasted image 20250526205528.png]]</p> <p>a classical RAM device accepts three inputs: a data input (word), an address in-put, and a load bit.</p> <p>The address speci\ufb01es which RAM register should be accessed in the current time unit. In the case of a read operation (load=0), the RAM\u2019s outputimmediately emits the value of the selected register.</p> <p>In the case of a write operation (load=1), the selected memory register commits to the input value in the next time unit, at which point the RAM\u2019s output will start emitting it.</p> <p>![[img/Pasted image 20250526205533.png]] The basic design parameters of a RAM device are: - Data width c\u1ee7a RAM th\u01b0\u1eddng l\u00e0 k\u00edch th\u01b0\u1edbc c\u1ee7a m\u1ed9t word. - Size \u2014 the number of words in the RAM. </p>"},{"location":"khmt/ktmt/Memory/#rom","title":"ROM","text":"<p>ROM, refer to Read-Only Memory which contains fixed instructions and retains information without power</p>"},{"location":"khmt/ktmt/Program%20Counter/","title":"X","text":"<p>Usually, the PC is incremented after fetching an instruction, and holds the memory address of (\"points to\") the next instruction that would be executed. L\u00e0 m\u1ed9t b\u1ed9 ph\u1eadn trong [[CPU]], thu\u1ed9c nh\u00f3m c\u00e1c [[Register]]s ![[img/Pasted image 20250527094924.png]] N\u1ec1n t\u1ea3ng c\u1ee7a PC l\u00e0 counter: a sequential chip whose state is an integer number that increments every time unit, effecting the function $out(t) = out(t - 1) + c$, where c is typically 1. ![[img/Pasted image 20250527094939.png]]</p>"},{"location":"khmt/ktmt/Register/","title":"X","text":"<p>Register (thanh ghi) l\u00e0 g\u00ec?</p> <p>Kh\u00e1i ni\u1ec7m \"s\u01a1 khai\": L\u00e0 m\u1ed9t n\u01a1i l\u01b0u tr\u1eef d\u1eef li\u1ec7u (can store or remember a value over time), c\u00f3 width nh\u1ea5t \u0111\u1ecbnh, c\u00e1i width \u0111\u00f3 \u0111\u01b0\u1ee3c g\u1ecdi l\u00e0 word (measured by the number of bits they can hold). T\u1eadp h\u1ee3p c\u1ee7a m\u1ed9t hay nhi\u1ec1u byte c\u00f3 c\u00f9ng ch\u1ee9c n\u0103ng g\u1ecdi l\u00e0 m\u1ed9t thanh ghi.</p> <p>Khi n\u00f3i Register th\u00ec m\u1ecdi ng\u01b0\u1eddi th\u01b0\u1eddng \u00e1m ch\u1ec9 processor register: a quickly accessible location available to a computer's processor (Register c\u00f3 th\u1ec3 hi\u1ec3u l\u00e0 b\u1ed9 nh\u1edb g\u1eafn tr\u1ef1c ti\u1ebfp v\u00e0o CPU. B\u1ed9 nh\u1edb gi\u00e1n ti\u1ebfp (secondary) th\u00ec c\u00f3 [[Cache]] (nhi\u1ec1u t\u1ea7ng) r\u1ed3i t\u1edbi RAM r\u1ed3i t\u1edbi disks).</p> <p>Memory access is a relatively slow operation, requiring long instruction formats (an address may require 32 bits). For this reason, most processors are equipped with several registers, each capable of holding a single value. Located in the processor\u2019s immediate proximity, the registers serve as a high-speed local memory, allowing the processor to manipulate data and instructions quickly.</p> <p>C\u1ea5u tr\u00fac c\u01a1 b\u1ea3n c\u1ee7a thanh ghi (trong ch\u01b0\u01a1ng 3 - nand2tetris): ![[img/Pasted image 20250526205327.png]]</p>"},{"location":"khmt/ktmt/Sequential%20chips/","title":"X","text":"<p>Combinational chips: operate on data only; provide calculation services (e.g. Nand \u2026 ALU) -&gt; \u0110\u1ec3 x\u00e2y d\u1ef1ng nh\u1eefng ch\u1ee9c n\u0103ng x\u1eed l\u00fd quan tr\u1ecdng nh\u01b0 l\u00e0 ALU.  Nh\u01b0ng ch\u00fang kh\u00f4ng th\u1ec3 duy tr\u00ec state (store and recall values). V\u1eady n\u00ean, c\u1ea7n c\u00f3 memory \u0111\u1ec3 l\u01b0u tr\u1eef d\u1eef li\u1ec7u theo th\u1eddi gian. These memory elements are built from sequential chips.</p>"},{"location":"khmt/ktmt/Sequential%20chips/#cai-ong-ho","title":"C\u00e1i \u0111\u1ed3ng h\u1ed3","text":"<p>In most computers, the passage of time is represented by a master clock that delivers a continuous train of alternating signals (alternates continuously between two phases labeled 0\u20131, low-high, tick-tock, etc) The elapsed time between the beginning of a \u2018\u2018tick\u2019\u2019 and the end of the subsequent \u2018\u2018tock\u2019\u2019 is called cycle. The current clock phase (tick or tock) is represented by a binary signal.</p> <p>M\u1ed7i m\u1ed9t cycle th\u01b0\u1eddng r\u01a1i v\u00e0o kho\u1ea3ng 1/2 nanosecond ![[img/Pasted image 20250527084240.png]]</p>"},{"location":"khmt/ktmt/Sequential%20chips/#flip-flop","title":"Flip-flop","text":"<p>V\u1ec1 c\u01a1 b\u1ea3n th\u00ec flip-flop l\u00e0 \"A fundamental state-keeping device\". Trong Nand2Tetris th\u00ec s\u1ebd s\u1eed d\u1ee5ng: data flip-flop (DFF) ![[img/Pasted image 20250527084143.png]] $out(t) = in(t - 1)$ <code>in</code> and <code>out</code> are the gate\u2019s input and output values and t is the current clock cycle =&gt; DFF outputs the input value from the previous time unit.</p>"},{"location":"linh-tinh/bash/","title":"Bash","text":"<p>M\u00ecnh t\u1ed5ng h\u1ee3p kh\u00e1 nhi\u1ec1u c\u00e1c c\u00e2u l\u1ec7nh v\u00e0 m\u1ed9t ch\u00fat v\u1ec1 l\u1eadp tr\u00ecnh Bash trong n\u00e0y. Kh\u00f4ng nh\u1ea5t thi\u1ebft ch\u1ec9 l\u00e0 Bash m\u00e0 c\u00f2n l\u00e0 c\u00e1c c\u00e2u l\u1ec7nh kh\u00e1c trong Terminal n\u1eefa ^^!</p>"},{"location":"linh-tinh/bash/#loop-oc-tu-tep-txt","title":"Loop \u0111\u1ecdc t\u1eeb t\u1ec7p txt","text":"<pre><code>while read p; do\n  yt-dlp \"$p\" -o\ndone &lt;tmp.txt\n</code></pre>"},{"location":"linh-tinh/bash/#gop-toan-bo-cac-tep-txt-thanh-mot-tep-txt","title":"G\u1ed9p to\u00e0n b\u1ed9 c\u00e1c t\u1ec7p .txt th\u00e0nh m\u1ed9t t\u1ec7p .txt","text":"<pre><code>## N\u1ebfu kh\u00f4ng bao g\u1ed3m sub-folders\ncat ./* &gt; merged-file\n\n## N\u1ebfu c\u00f3\nfind . ! -path ./merged-file -type f -exec cat {} + &gt; merged-file\n</code></pre>"},{"location":"linh-tinh/bash/#tai-trang-tu-wayback-machine-ve","title":"T\u1ea3i trang t\u1eeb Wayback Machine v\u1ec1","text":"<pre><code>wget -rc --accept-regex '.*https://loda.me/articles.*' \"https://web.archive.org/web/20230321225500/https://loda.me/articles\"\n</code></pre>"},{"location":"linh-tinh/bash/#sending-post-request-using-curl","title":"Sending POST Request using <code>curl</code>","text":"<pre><code>curl -X POST https://localhost:5001/api -H \"Content-Type: application/json\" -d @/some/directory/some.json\n</code></pre>"},{"location":"linh-tinh/bash/#loop-tim-toan-bo-cac-tep","title":"Loop &amp; Tim toan bo cac tep","text":"<pre><code>find . -name \"*.rar\" -print0 | while read -d $'\\0' file\ndo\n   unrar x \"$file\"\ndone\n</code></pre>"},{"location":"linh-tinh/bash/#generate-epub-file-using-mark2epub","title":"Generate .epub file using mark2epub","text":"<pre><code>## Arguments [title]\nmkdir docs/\nmv links.txt docs/\ncd docs/\nmkdir css images\nwhile read p; do papeer get \"$p\"; done &lt;links.txt\n\n\n## Generate description.json (First init a variable)\ndescription=\"{\\n  \\\"metadata\\\": {\\n    \\\"dc:title\\\": \\\"$(date +\"%Y_%m_%d_%I_%M_%p\")\\\",\\n    \\\"dc:creator\\\": \\\"duykhanh471\\\",\\n    \\\"dc:language\\\": \\\"en-US\\\",\\n    \\\"dc:identifier\\\": \\\"\\\",\\n    \\\"dc:source\\\": \\\"\\\",\\n    \\\"meta\\\": \\\"\\\",\\n    \\\"dc:date\\\": \\\"\\\",\\n    \\\"dc:publisher\\\": \\\"\\\",\\n    \\\"dc:contributor\\\": \\\"\\\",\\n    \\\"dc:rights\\\": \\\"\\\",\\n    \\\"dc:description\\\": \\\"\\\",\\n    \\\"dc:subject\\\": \\\"\\\"\\n  },\\n  \\\"cover_image\\\": \\\"\\\",\\n  \\\"default_css\\\": [],\\n  \\\"chapters\\\": [\\n    \"\nfor file in $( ls *.md ); do\n  description=\"${description}{\\n      \\\"markdown\\\": \\\"$file\\\",\\n      \\\"css\\\": \\\"\\\"\\n    },\"\ndone\n\ndescription=\"${description::-1}\\n  ]\\n}\"\n\n\n## Echo the generated content to the new .json file  \necho -e \"${description}\" &gt; description.json\n\n## Move out of the current directory\ncd ..\n\n## Generate an .epub file from markdown files in the docs/ dir\npython3 /home/duykhanh471/Applications/mark2epub/script.py docs/ \"$(date +\"%Y_%m_%d_%I_%M_%p\").epub\"\n</code></pre>"},{"location":"linh-tinh/bash/#sort-by-number","title":"Sort by number","text":"<p>if u want the <code>ls</code> output looks like:</p> <pre><code>1.md 2.md 3.md 10.md\n</code></pre> <p>instead of</p> <pre><code>1.md 10.md 2.md 3.md \n</code></pre> <p>here is the command</p> <pre><code>ls *.md | sort -V | awk '{str=str$0\" \"}END{sub(/, $/,\"\",str);print str}'\n</code></pre>"},{"location":"linh-tinh/regex/","title":"Regex","text":"<p>R\u1ea5t nhi\u1ec1u regex hay d\u00e3 man, v\u00e0 c\u0169ng nhanh kh\u1ee7ng khi\u1ebfp, n\u1ebfu bi\u1ebft Pattern =))</p>"},{"location":"linh-tinh/regex/#match-tu-ay-en-het-cau","title":"Match t\u1eeb \u0111\u00e2y \u0111\u1ebfn h\u1ebft c\u00e2u","text":"<pre><code>[Ph\u1ea7n b\u1eaft \u0111\u1ea7u c\u1ee7a \u0111o\u1ea1n b\u1ea1n c\u1ea7n match]\\s*([^\\n\\r]*)\n</code></pre>"},{"location":"linh-tinh/regex/#xoa-toan-bo-cac-dong-bi-trung-lap","title":"X\u00f3a to\u00e0n b\u1ed9 c\u00e1c d\u00f2ng b\u1ecb tr\u00f9ng l\u1eb7p","text":"<pre><code>^(.*)(\\r?\\n\\1)+$\n</code></pre>"},{"location":"linh-tinh/regex/#match-markdown-links","title":"Match markdown links","text":"<p><pre><code>\\[(.+)\\]\\(([^ ]+?)( \"(.+)\")?\\)\n</code></pre> Extracted from this post. There are 4 capturing groups (surrounded by parenthesis) in that regex:</p> <ul> <li>Group 1 is the text of the link.</li> <li>Group 2 is the URL of the link.</li> <li>Group 3 is the optional title of the link including the double quotes (this group is necessary for the ? marker).</li> <li>Group 4 is the optional title of the link.</li> </ul>"},{"location":"linh-tinh/regex/#date-time-like","title":"Date Time like","text":"<p>like:</p> <ul> <li>9:59 AM</li> <li>5:59 PM</li> </ul> <pre><code>([0-9]|[0-1][0-2])\\:?([0-5][0-9])? ([A|P]M)\n</code></pre>"},{"location":"linh-tinh/regex/#match-empty-line","title":"match empty line","text":"<pre><code>^\\s*$\n</code></pre>"},{"location":"rust/command-line/","title":"Command line","text":""},{"location":"rust/command-line/#khong-su-dung-crate-ngoai","title":"Kh\u00f4ng s\u1eed d\u1ee5ng crate ngo\u00e0i","text":"<pre><code>pub struct Config {\n    pub query: String,\n    pub filename: String,\n    pub case_sensitive: bool,\n}\n\nimpl Config {\n    pub fn new(mut args: env::Args) -&gt; Result&lt;Config, &amp;'static str&gt; {\n        args.next();\n\n        let query = match args.next() {\n            Some(arg) =&gt; arg,\n            None =&gt; return Err(\"Didn't get a query string\"),\n        };\n\n        let filename = match args.next() {\n            Some(arg) =&gt; arg,\n            None =&gt; return Err(\"Didn't get a file name\"),\n        };\n\n        let case_sensitive = env::var(\"CASE_INSENSITIVE\").is_err();\n\n        Ok(Config { query, filename, case_sensitive })\n    }\n}\n\npub fn run(config: Config) -&gt; Result&lt;(), Box&lt;dyn Error&gt;&gt; {\n    let contents = fs::read_to_string(config.filename)?;\n\n    let results = if config.case_sensitive {\n        search(&amp;config.query, &amp;contents)\n    } else {\n        search_case_insensitive(&amp;config.query, &amp;contents)\n    };\n\n    for line in results {\n        println!(\"{}\", line);\n    }\n\n    Ok(())\n}\n</code></pre>"},{"location":"rust/command-line/#parsing-arguments-su-dung-clap","title":"Parsing arguments s\u1eed d\u1ee5ng clap","text":""},{"location":"rust/command-line/#su-dung-co-ban","title":"S\u1eed d\u1ee5ng c\u01a1 b\u1ea3n","text":"<p>This application describes the structure of its command-line interface using\u00a0<code>clap</code>'s builder style. The\u00a0documentation\u00a0gives two other possible ways to instantiate an application.</p> <p>In the builder style,\u00a0<code>with_name</code>\u00a0is the unique identifier that\u00a0<code>value_of</code>\u00a0will use to retrieve the value passed. The\u00a0<code>short</code>\u00a0and\u00a0<code>long</code>\u00a0options control the flag the user will be expected to type; short flags look like\u00a0<code>-f</code>\u00a0and long flags look like\u00a0<code>--file</code>.</p> <pre><code>use clap::{Arg, App};\n\nfn main() {\n    let matches = App::new(\"My Test Program\")\n        .version(\"0.1.0\")\n        .author(\"Hackerman Jones &lt;hckrmnjones@hack.gov&gt;\")\n        .about(\"Teaches argument parsing\")\n        .arg(Arg::with_name(\"file\")\n                 .short(\"f\")\n                 .long(\"file\")\n                 .takes_value(true)\n                 .help(\"A cool file\"))\n        .arg(Arg::with_name(\"num\")\n                 .short(\"n\")\n                 .long(\"number\")\n                 .takes_value(true)\n                 .help(\"Five less than your favorite number\"))\n        .get_matches();\n\n    let myfile = matches.value_of(\"file\").unwrap_or(\"input.txt\");\n    println!(\"The file passed is: {}\", myfile);\n\n    let num_str = matches.value_of(\"num\");\n    match num_str {\n        None =&gt; println!(\"No idea what your favorite number is.\"),\n        Some(s) =&gt; {\n            match s.parse::&lt;i32&gt;() {\n                Ok(n) =&gt; println!(\"Your favorite number must be {}.\", n + 5),\n                Err(_) =&gt; println!(\"That's not a number! {}\", s),\n            }\n        }\n    }\n}\n</code></pre> <p>Usage information is generated by\u00a0<code>clap</code>. The usage for the example application looks like this.</p> <pre><code>My Test Program 0.1.0\nHackerman Jones &lt;hckrmnjones@hack.gov&gt;\nTeaches argument parsing\n\nUSAGE:\n    testing [OPTIONS]\n\nFLAGS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nOPTIONS:\n    -f, --file &lt;file&gt;     A cool file\n    -n, --number &lt;num&gt;    Five less than your favorite number\n</code></pre> <p>We can test the application by running a command like the following.</p> <p><code>$ cargo run -- -f myfile.txt -n 251</code></p> <p>The output is:</p> <pre><code>The file passed is: myfile.txt\nYour favorite number must be 256.\n</code></pre>"},{"location":"rust/command-line/#nang-cao","title":"N\u00e2ng cao","text":"<pre><code>use clap::Parser;\nuse std::path::PathBuf;\n\n#[derive(Parser, Debug, Clone)]\n#[clap(\n    author,\n    version,\n    about,\n    long_about = \"Note: When playing, all the keybindings of mpv can be used, and `q` is reserved for exiting the program\"\n)]\npub struct Cli {\n    /// Option: -u --url &lt;URL&gt;: Specifies an url to be played.\n    #[clap(short, long, help = \"Specifies an url to be played.\")]\n    pub url: Option&lt;String&gt;,\n\n    /// Option: -s --station &lt;station name&gt;: Specifies the name of the station to be played\n    #[clap(\n        short,\n        long,\n        conflicts_with = \"url\",\n        help = \"Specifies the name of the station to be played.\"\n    )]\n    pub station: Option&lt;String&gt;,\n\n    /// Flag: --show-video: If *not* present, a flag is passed down to mpv to not show the video and just play the audio.\n    #[clap(\n        long = \"show-video\",\n        help = \"If *not* present, a flag is passed down to mpv to not show the video and just play the audio.\"\n    )]\n    pub show_video: bool,\n\n    /// Option: -c --config: Specify a config file other than the default.\n    #[clap(\n        long,\n        short,\n        help = \"Specify a different config file from the default one.\"\n    )]\n    pub config: Option&lt;PathBuf&gt;,\n\n    /// Option: --country-code &lt;CODE&gt;: Specify a country code to filter the search results\n    #[clap(\n        long = \"country-code\",\n        help = \"Specify a country code to filter the search.\"\n    )]\n    pub country_code: Option&lt;String&gt;,\n\n    /// Flag: --list-countries: List all the available countries and country codes to put in the config.\n    #[clap(\n        long = \"list-countries\",\n        help = \"List all the available countries and country codes to put in the config.\"\n    )]\n    pub list_countries: bool,\n\n    /// Flag: --no-station-cache: Don't cache the station list loaded from the internet.\n    #[clap(\n        long = \"no-station-cache\",\n        help = \"Don't cache the station list loaded from the internet.\"\n    )]\n    pub no_station_cache: bool,\n\n    /// Show extra info\n    #[clap(flatten)]\n    pub verbose: clap_verbosity_flag::Verbosity,\n\n    /// Show debug info\n    #[structopt(short, long)]\n    pub debug: bool,\n}\n</code></pre>"},{"location":"rust/command-line/#mot-so-cai-khac-chua-sap-xep","title":"M\u1ed9t s\u00f3 c\u00e1i kh\u00e1c ch\u01b0a s\u1eafp x\u1ebfp","text":""},{"location":"rust/command-line/#oc-input-tu-nguoi-dung","title":"\u0110\u1ecdc input t\u1eeb ng\u01b0\u1eddi d\u00f9ng","text":"<pre><code>use std::fs::File;\nuse std::io::{self, Read};\n\npub fn read_from_stdin() -&gt; String {\n    let mut input = String::new();\n    loop {\n        match io::stdin().read_line(&amp;mut input) {\n            Ok(len) =&gt; if len == 0 {\n                break;\n            }\n            Err(error) =&gt; {\n                eprintln!(\"error: {}\", error);\n                break;\n            }\n        }\n    }\n    input\n}\n</code></pre> <p>\u0110\u00e2y m\u1edbi l\u00e0 c\u00e1i Reader</p> <pre><code>use std::io;\n\npub trait ReadInput {\n    fn read_input(&amp;mut self) -&gt; io::Result&lt;String&gt;;\n}\n\npub struct Reader&lt;R&gt; {\n    reader: R,\n}\n\nimpl&lt;R&gt; Reader&lt;R&gt; {\n    pub fn new(reader: R) -&gt; Self {\n        Self { reader }\n    }\n}\n\nimpl&lt;R: io::BufRead&gt; ReadInput for Reader&lt;R&gt; {\n    fn read_input(&amp;mut self) -&gt; io::Result&lt;String&gt; {\n        let mut input = String::new();\n        self.reader.read_line(&amp;mut input)?;\n        Ok(input.trim().to_string())\n    }\n}\n\n#[allow(non_snake_case)]\n#[cfg(test)]\nmod tests {\n    use crate::reader::{ReadInput, Reader};\n\n    #[test]\n    fn test_reader__read_input__success() {\n        let input = b\"  my input with whitespace chars  \";\n        let mut reader = Reader::new(&amp;input[..]);\n\n        let actual = reader.read_input().unwrap();\n        let expected = \"my input with whitespace chars\".to_string();\n\n        assert_eq!(actual, expected);\n    }\n}\n</code></pre>"},{"location":"rust/command-line/#tat-tan-tat-ve-print-trong-giao-dien-dong-lenh","title":"T\u1ea5t t\u1ea7n t\u1eadt v\u1ec1 Print trong giao di\u1ec7n d\u00f2ng l\u1ec7nh","text":"<pre><code>use std::io;\nuse std::io::Write;\n\npub trait Print {\n    fn print(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt;;\n    fn println(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt;;\n}\n\npub trait PrintColor {\n    fn fts_banner(&amp;mut self) -&gt; io::Result&lt;()&gt;;\n    fn input_header(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt;;\n    fn error(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt;;\n}\n\npub struct Printer&lt;W&gt; {\n    writer: W,\n}\n\n#[derive(Clone, Copy)]\npub struct PrintOptions {\n    color: termcolor::Color,\n    is_bold: bool,\n}\n\nimpl&lt;W: Write + termcolor::WriteColor&gt; Printer&lt;W&gt; {\n    pub fn new(writer: W) -&gt; Self {\n        Self { writer }\n    }\n}\n\nimpl&lt;W: Write&gt; Print for Printer&lt;W&gt; {\n    fn print(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt; {\n        write!(self.writer, \"{}\", value)\n    }\n\n    fn println(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt; {\n        writeln!(self.writer, \"{}\", value)\n    }\n}\n\nimpl&lt;W: Write + termcolor::WriteColor&gt; PrintColor for Printer&lt;W&gt; {\n    fn fts_banner(&amp;mut self) -&gt; io::Result&lt;()&gt; {\n        let opts = PrintOptions {\n            color: termcolor::Color::Yellow,\n            is_bold: false,\n        };\n        let banner = format!(\n            \"{}\\n{}{}{}{}{}\\n{}\",\n            \"#\".repeat(60),\n            \"#\".repeat(4),\n            \" \".repeat(18),\n            \"First Time Setup\",\n            \" \".repeat(18),\n            \"#\".repeat(4),\n            \"#\".repeat(60)\n        );\n        let description = r#\"\nThis tool requires you to have a repository with a README.md\nin the root folder. The markdown file is where your ideas\nwill be stored.\n\nOnce first time setup has completed, simply run Eureka again\nto begin writing down ideas.\n        \"#;\n        self.println_styled(&amp;format!(\"{}\\n{}\", banner.as_str(), description), opts)\n    }\n\n    fn input_header(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt; {\n        let opts = PrintOptions {\n            color: termcolor::Color::Green,\n            is_bold: true,\n        };\n        self.println_styled(value, opts)?;\n        self.print(\"&gt; \")?;\n        self.writer.flush()\n    }\n\n    fn error(&amp;mut self, value: &amp;str) -&gt; io::Result&lt;()&gt; {\n        let opts = PrintOptions {\n            color: termcolor::Color::Red,\n            is_bold: false,\n        };\n        self.println_styled(value, opts)?;\n        self.writer.flush()\n    }\n}\n\nimpl&lt;W: Write + termcolor::WriteColor&gt; Printer&lt;W&gt; {\n    fn println_styled(&amp;mut self, value: &amp;str, opts: PrintOptions) -&gt; io::Result&lt;()&gt; {\n        let mut color_spec = termcolor::ColorSpec::new();\n        color_spec.set_fg(Some(opts.color)).set_bold(opts.is_bold);\n        self.writer.set_color(&amp;color_spec)?;\n        writeln!(self.writer, \"{}\", value)?;\n        self.writer.reset()\n    }\n}\n\n#[allow(non_snake_case)]\n#[cfg(test)]\nmod tests {\n    use crate::printer::{Print, PrintColor, PrintOptions, Printer};\n\n    #[test]\n    fn test_printer__print__success() {\n        let mut output = Vec::new();\n        let mut printer = Printer {\n            writer: &amp;mut output,\n        };\n\n        let print_result = printer.print(\"this value\");\n        assert!(print_result.is_ok());\n\n        let actual = String::from_utf8(output).expect(\"Not UTF-8\");\n        let expected = \"this value\";\n\n        assert_eq!(actual, expected);\n    }\n\n    #[test]\n    fn test_printer__println__success() {\n        let mut output = Vec::new();\n        let mut printer = Printer {\n            writer: &amp;mut output,\n        };\n\n        let print_result = printer.println(\"this value\");\n        assert!(print_result.is_ok());\n\n        let actual = String::from_utf8(output).expect(\"Not UTF-8\");\n        let expected = \"this value\\n\";\n\n        assert_eq!(actual, expected);\n    }\n\n    #[test]\n    fn test_printer__fts_banner__success() {\n        let mut output = termcolor::Ansi::new(vec![]);\n        let mut printer = Printer::new(&amp;mut output);\n\n        printer.fts_banner().unwrap();\n\n        let actual = String::from_utf8(output.into_inner()).unwrap();\n        let expected = \"############################################################\n####                  First Time Setup                  ####\n############################################################\n\nThis tool requires you to have a repository with a README.md\nin the root folder. The markdown file is where your ideas\nwill be stored.\n\nOnce first time setup has completed, simply run Eureka again\nto begin writing down ideas.\";\n\n        assert!(actual.starts_with(\"\\u{1b}[0m\\u{1b}[33m\"));\n        assert!(actual.contains(expected));\n        assert!(actual.ends_with(\"\\n\\u{1b}[0m\"));\n    }\n\n    #[test]\n    fn test_printer__input_header__success() {\n        let mut output = termcolor::Ansi::new(vec![]);\n        let mut printer = Printer::new(&amp;mut output);\n\n        printer.input_header(\"some-value\").unwrap();\n\n        let actual = String::from_utf8(output.into_inner()).unwrap();\n        let expected = \"\\u{1b}[0m\\u{1b}[1m\\u{1b}[32msome-value\\n\\u{1b}[0m&gt; \";\n\n        assert_eq!(actual, expected);\n    }\n\n    #[test]\n    fn test_printer__error__success() {\n        let mut output = termcolor::Ansi::new(vec![]);\n        let mut printer = Printer::new(&amp;mut output);\n\n        printer.error(\"some-value\").unwrap();\n\n        let actual = String::from_utf8(output.into_inner()).unwrap();\n        let expected = \"\\u{1b}[0m\\u{1b}[31msome-value\\n\\u{1b}[0m\";\n\n        assert_eq!(actual, expected);\n    }\n\n    #[test]\n    fn test_printer__println_styled__success() {\n        let mut output_1 = termcolor::Ansi::new(vec![]);\n        let mut printer = Printer::new(&amp;mut output_1);\n\n        let opts_green_bold = PrintOptions {\n            color: termcolor::Color::Green,\n            is_bold: true,\n        };\n\n        printer\n            .println_styled(\"some-green-bold-text\", opts_green_bold)\n            .unwrap();\n\n        let actual_green_bold = String::from_utf8(output_1.into_inner()).unwrap();\n        let expected_green_bold = \"\\u{1b}[0m\\u{1b}[1m\\u{1b}[32msome-green-bold-text\\n\\u{1b}[0m\";\n\n        assert_eq!(actual_green_bold, expected_green_bold);\n\n        let mut output_2 = termcolor::Ansi::new(vec![]);\n        printer = Printer::new(&amp;mut output_2);\n\n        let opts_yellow = PrintOptions {\n            color: termcolor::Color::Yellow,\n            is_bold: false,\n        };\n\n        printer\n            .println_styled(\"some-yellow-text\", opts_yellow)\n            .unwrap();\n\n        let actual_yellow = String::from_utf8(output_2.into_inner()).unwrap();\n        let expected_yellow = \"\\u{1b}[0m\\u{1b}[33msome-yellow-text\\n\\u{1b}[0m\";\n\n        assert_eq!(actual_yellow, expected_yellow);\n    }\n}\n</code></pre>"},{"location":"rust/he-thong/","title":"Ch\u01a1i \u0111\u00f9a v\u1edbi System","text":""},{"location":"rust/he-thong/#mo-url-path-voi-ung-dung","title":"M\u1edf URL &amp; Path v\u1edbi \u1ee9ng d\u1ee5ng","text":"<pre><code>open::that(\"https://rust-lang.org\");\nopen::with(\"https://rust-lang.org\", \"firefox\");\n\n// Ho\u1eb7c c\u00e1c \u0111\u1ed3ng b\u00e0o c\u00f3 th\u1ec3 d\u00f9ng Path c\u1ee7a \u1ee9ng d\u1ee5ng \u0111\u1ec3 m\u1edf c\u0169ng oke, ch\u01b0a th\u1eed\n</code></pre>"},{"location":"rust/he-thong/#kiem-tra-uoi-tep","title":"Ki\u1ec3m tra \u0111u\u00f4i t\u1ec7p","text":"<pre><code>pub fn check_img_format(filename: &amp;PathBuf) -&gt; bool {\n    static IMAGE_FORMAT: &amp;[&amp;'static str; 9] = &amp;[\"jpg\", \"jpeg\", \"jpe\", \"jfif\", \"jfi\", \"jif\", \"png\", \"bmp\", \"gif\"];\n    filename.extension().and_then(OsStr::to_str).is_some_and(|ext| IMAGE_FORMAT.contains(&amp;ext))\n}\n</code></pre>"},{"location":"rust/he-thong/#tao-tep","title":"T\u1ea1o t\u1ec7p","text":"<pre><code>pub fn gen_file(name: &amp;str, book_format: &amp;str) -&gt; Result&lt;File, std::io::Error&gt; {\n    OpenOptions::new()\n        .write(true)\n        .create(true)\n        .append(true)\n        .open(format!(\"{}.{}\", name, book_format))\n}\n</code></pre>"},{"location":"rust/he-thong/#oc-noi-dung-tu-tep","title":"\u0110\u1ecdc n\u1ed9i dung t\u1eeb t\u1ec7p","text":"<pre><code>pub fn read_from_file(file: &amp;str) -&gt; String {\n    let mut input = String::new();\n    let mut f = File::open(file).expect(\"File not found!\");\n    f.read_to_string(&amp;mut input).expect(\"Something went wrong reading the file!\");\n    input\n}\n</code></pre>"},{"location":"rust/he-thong/#viet-noi-dung-vao-tep","title":"Vi\u1ebft n\u1ed9i dung v\u00e0o t\u1ec7p","text":"<pre><code>pub fn write_to_file() -&gt; Result&lt;(), anyhow::Error&gt; {\n    let filename = gen_file(\"tep\", \"txt\");\n    let mut f = BufWriter::new(f);\n    f.write_all(gen_str(chapter.name, &amp;chapter.content).as_bytes())\n        .expect(\"Can't write to the file\");\n    f.flush().unwrap();\n    Ok(())\n}\n</code></pre>"},{"location":"rust/he-thong/#truy-cap-vao-cac-ung-dung-khac","title":"Truy c\u1eadp v\u00e0o c\u00e1c \u1ee9ng d\u1ee5ng kh\u00e1c","text":"<pre><code>use std::io::ErrorKind;\nuse std::path::PathBuf;\nuse std::process::Command;\nuse std::{env, fs, io};\n\npub trait ProgramOpener {\n    fn open_editor(&amp;self, file_path: &amp;str) -&gt; io::Result&lt;()&gt;;\n    fn open_pager(&amp;self, file_path: &amp;str) -&gt; io::Result&lt;()&gt;;\n}\n\n#[derive(Default)]\npub struct ProgramAccess;\n\nimpl ProgramOpener for ProgramAccess {\n    fn open_editor(&amp;self, file_path: &amp;str) -&gt; io::Result&lt;()&gt; {\n        self.open_with_fallback(file_path, \"EDITOR\", \"vi\")\n    }\n\n    fn open_pager(&amp;self, file_path: &amp;str) -&gt; io::Result&lt;()&gt; {\n        self.open_with_fallback(file_path, \"PAGER\", \"less\")\n    }\n}\n\nimpl ProgramAccess {\n    fn open_with_fallback(&amp;self, file_path: &amp;str, env_var: &amp;str, fallback: &amp;str) -&gt; io::Result&lt;()&gt; {\n        let program = env::var(env_var)\n            .map(PathBuf::from)\n            .or_else(|_| self.get_if_available(fallback))?;\n\n        // Make sure file exists\n        fs::metadata(file_path)?;\n        Command::new(program).arg(file_path).status().map(|_| ())\n    }\n\n    fn get_if_available(&amp;self, program: &amp;str) -&gt; io::Result&lt;PathBuf&gt; {\n        which::which(program).map_err(|err| std::io::Error::new(ErrorKind::NotFound, err))\n    }\n}\n</code></pre>"},{"location":"rust/internet/","title":"Internet","text":"<p>M\u1ea5y c\u00e1i xung quanh vi\u1ec7c t\u01b0\u01a1ng t\u00e1c v\u1edbi Internet s\u1eed d\u1ee5ng Rust.</p>"},{"location":"rust/internet/#encode-url","title":"Encode URL","text":"<p>D\u00f9ng c\u00e1i n\u00e0y: <code>open = \"5.0.1\"</code></p> <pre><code>let encoded_query =\n        percent_encoding::utf8_percent_encode(&amp;args.query, NON_ALPHANUMERIC).to_string();\n\n    for site in config.sites {\n        let url = site.url.replace(\"%s\", &amp;encoded_query);\n        println!(\"{}:\\t{}\", site.name, url);\n        // Ph\u1ea7n n\u00e0y l\u00e0 d\u00f9ng \"open\" r\u1ed3i, h\u01a1i ngo\u00e0i l\u1ec1 ch\u00fat\n        open::that(url).context(\"could not open the URL\")?;\n    }\n</code></pre>"},{"location":"rust/internet/#request","title":"Request","text":"<p>S\u1eed d\u1ee5ng ureq.</p> <pre><code>pub fn fetch(url: &amp;str, refer_site: &amp;str) -&gt; Result&lt;Response, ureq::Error&gt; {\n    let user_agent = \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36\";\n\n    let ureq_agent: Agent = ureq::AgentBuilder::new()\n    .timeout_read(Duration::from_secs(30))\n    .build();\n\n    let body = ureq_agent.get(url)\n        .set(\"User-Agent\", user_agent)\n        .set(\"Referer\", refer_site)\n        .call();\n    body\n}\n</code></pre>"},{"location":"rust/internet/#lay-thong-tin-tu-api","title":"L\u1ea5y th\u00f4ng tin t\u1eeb API","text":"<pre><code>#[derive(Debug, Serialize, Deserialize, Default)]\nstruct Fact {\n    id: String,\n    text: String,\n    source: String,\n    source_url: String,\n    language: String,\n    permalink: String,\n}\n\nconst FACT_BASE_URL: &amp;str = \"https://uselessfacts.jsph.pl\";\nconst FACT_RANDOM: &amp;str = \"/api/v2/facts/random?language=en\";\nconst FACT_DAILY: &amp;str = \"/api/v2/facts/today?language=en\";\n\nfn get_fact(url: &amp;str) -&gt; Result&lt;Fact, Box&lt;dyn std::error::Error&gt;&gt; {\n    let resp = reqwest::blocking::get(url)?.json::&lt;Fact&gt;()?;\n    Ok(resp)\n}\n\nfn get_random_fact() -&gt; Result&lt;Fact, Box&lt;dyn std::error::Error&gt;&gt; {\n    let url = format!(\"{}{}\", FACT_BASE_URL, FACT_RANDOM);\n    get_fact(&amp;url)\n}\n\nfn get_daily_fact() -&gt; Result&lt;Fact, Box&lt;dyn std::error::Error&gt;&gt; {\n    let url = format!(\"{}{}\", FACT_BASE_URL, FACT_DAILY);\n    get_fact(&amp;url)\n}\n\nfn get_help() -&gt; Result&lt;Fact, Box&lt;dyn std::error::Error&gt;&gt; {\n    let mut fact = Fact::default();\n    fact.text = String::from(\"Usage: fact [t]oday | [r]andom\");\n    Ok(fact)\n}\n\nfn print_fact(fact: Fact) {\n    println!(\"Fact: {}\", fact.text);\n    println!(\"Source: {}\", fact.source_url);\n}\n</code></pre>"},{"location":"rust/internet/#mo-trinh-duyet","title":"M\u1edf tr\u00ecnh duy\u1ec7t","text":"<pre><code>pub fn show_news(new: &amp;NewsLink) -&gt; Result&lt;(), Box&lt;dyn std::error::Error&gt;&gt; {\n    let link = &amp;new.link;\n    let response = ureq::get(link).call()?;\n    let url = response.get_url();\n\n    // if is a video of youtube\n    if url.contains(\"youtube\") {\n        if webbrowser::open(new.link.as_str()).is_ok() {}\n        return Ok(());\n    }\n\n    let view_select = Select::new(\n        \"What view do you like to do?\",\n        vec![\"Web\", \"Terminal\", \"Ia Draft\"],\n    )\n    .with_help_message(\"Enter the view of the new\")\n    .prompt()\n    .unwrap_or(\"Cancel\");\n\n    if view_select == \"Cancel\" {\n        manage_exit(\"No view provided\")\n    }\n\n    let view = View::from_str(view_select).expect(\"failed to parse view\");\n    match view {\n        View::Terminal =&gt; {\n            let html = response.into_string()?;\n            let markdown = get_markdown_content(&amp;html);\n\n            if markdown.is_empty() {\n                println!(\"Content of new cannot be loaded in terminal\");\n                println!(\"Opening browser instead\");\n                if webbrowser::open(new.link.as_str()).is_ok() {}\n            } else {\n                generate_view(markdown.as_str()).expect(\"failed to generate a markdown view\");\n            }\n        }\n        View::Web =&gt; {\n            webbrowser::open(new.link.as_str())?;\n        }\n        View::Ia =&gt; {\n            let html = response.into_string()?;\n            let markdown = get_markdown_content(&amp;html);\n            get_resume(&amp;markdown)?;\n        }\n    }\n</code></pre>"},{"location":"rust/thuat-toan/","title":"Thu\u1eadt to\u00e1n","text":"<p>Ch\u01b0a c\u00f3, nh\u01b0ng s\u1ebd t\u1ed5ng h\u1ee3p thu\u1eadt to\u00e1n sau</p>"},{"location":"rust/tep/epub/","title":"EPUB","text":""},{"location":"rust/tep/epub/#tao-epub","title":"T\u1ea1o EPUB","text":"<pre><code>pub fn gen_epub(\n    book: NovelContent,\n    book_language: &amp;str,\n    is_vertical: &amp;bool,\n) -&gt; epub_builder::Result&lt;()&gt; {\n    let output = utils::gen_file(&amp;book.title, \"epub\").unwrap();\n\n    let epub_mode = css_gen(is_vertical);\n    let mut binding = epub_builder::EpubBuilder::new(epub_builder::ZipLibrary::new()?)?;\n    let gen_epub = binding\n        .metadata(\"author\", book.author.trim())?\n        .metadata(\"title\", &amp;book.title)?\n        .epub_direction(epub_mode.epub_direction)\n        .metadata(\"lang\", book_language)?\n        .metadata(\"generator\", \"Buukuru\")?\n        .add_metadata_opf(epub_builder::MetadataOpf {\n            name: String::from(\"primary-writing-mode\"),\n            content: epub_mode.p_writing_mode,\n        })\n        .epub_version(epub_builder::EpubVersion::V30)\n        .stylesheet(epub_mode.epub_css.as_bytes())?;\n\n    let generated_content = gen_content(gen_epub, book);\n    generated_content\n        .inline_toc()\n        .generate(output)\n        .expect(\"Error generating .epub file\");\n    Ok(())\n}\n</code></pre>"},{"location":"rust/tep/epub/#tao-xhtml","title":"T\u1ea1o XHTML","text":""},{"location":"rust/tep/epub/#xhtml-generator","title":"XHTML Generator","text":"<p>Ph\u1ea7n 1:</p> <pre><code>fn to_xhtml(content: &amp;Vec&lt;String&gt;, chap_title: &amp;str) -&gt; String {\n    // Start\n    let start = format!(\n        r##\"&lt;?xml version='1.0' encoding='utf-8'?&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"ja\" xml:lang=\"ja\"&gt;\n    &lt;head&gt;\n        &lt;title&gt;{}&lt;/title&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheet.css\"/&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\"##,\n        chap_title\n    );\n    let chapter_title = format!(\"\\n\\t&lt;h2&gt;{}&lt;/h2&gt;\\n\", chap_title);\n    let mut file: String = start.to_string() + chapter_title.as_str();\n\n    for line in content {\n        match line.as_str() {\n            \"\" =&gt; {}\n            _ =&gt; {\n                file += format!(\"\\t\\t&lt;p&gt;{}&lt;/p&gt;\\n\", &amp;line.trim()).as_str();\n            }\n        }\n    }\n    file += \"\\n\\t&lt;/body&gt;\\n&lt;/html&gt;\";\n    // End\n    file\n}\n</code></pre> <p>Ph\u1ea7n 2:</p> <pre><code>pub fn compress_xhtml(html_input: &amp;str) -&gt; String {\n    format!(r##\"&lt;?xml version='1.0' encoding='utf-8'?&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"ja\" xml:lang=\"ja\"&gt;\n    &lt;head&gt;\n        &lt;title&gt;Untitled&lt;/title&gt;\n        &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/&gt;\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"stylesheet.css\"/&gt;\n    &lt;/head&gt;\n    &lt;body&gt;{}{}\"##, html_input, \"\\n\\t&lt;/body&gt;\\n&lt;/html&gt;\")\n}\n</code></pre>"},{"location":"rust/tep/epub/#css-for-english-and-japanese","title":"CSS for English and Japanese","text":"<pre><code>fn css_gen(is_vertical: &amp;bool) -&gt; EpubMode {\n    let vertical_css = r##\"@page {\n  margin-bottom: 5pt;\n  margin-top: 5pt;\n}\n\nhtml {\n  -webkit-writing-mode: vertical-rl;\n  -moz-writing-mode: vertical-rl;\n  -ms-writing-mode: vertical-rl;\n  writing-mode: vertical-rl;\n}\n\np {\n  display: block;\n  height: auto;\n  text-indent: inherit;\n  width: auto;\n  margin: 0;\n  padding: 0;\n}\"##;\n</code></pre>"},{"location":"rust/tep/git/","title":"S\u1eed d\u1ee5ng Git v\u1edbi Rust","text":"<pre><code>use std::path::Path;\n\npub trait GitManagement {\n    fn init(&amp;mut self, repo_path: &amp;str) -&gt; Result&lt;(), git2::Error&gt;;\n    fn checkout_branch(&amp;self, branch_name: &amp;str) -&gt; Result&lt;(), git2::Error&gt;;\n    fn add(&amp;self) -&gt; Result&lt;(), git2::Error&gt;;\n    fn commit(&amp;self, subject: &amp;str) -&gt; Result&lt;git2::Oid, git2::Error&gt;;\n    fn push(&amp;self, branch_name: &amp;str) -&gt; Result&lt;(), git2::Error&gt;;\n}\n\n#[derive(Default)]\npub struct Git {\n    repo: Option&lt;git2::Repository&gt;,\n}\n\nimpl GitManagement for Git {\n    fn init(&amp;mut self, repo_path: &amp;str) -&gt; Result&lt;(), git2::Error&gt; {\n        git2::Repository::open(Path::new(&amp;repo_path)).map(|repo| self.repo = Some(repo))\n    }\n\n    fn checkout_branch(&amp;self, branch_name: &amp;str) -&gt; Result&lt;(), git2::Error&gt; {\n        let repo = self.repo.as_ref().unwrap();\n\n        let commit = repo\n            .head()\n            .map(|head| head.target())\n            .and_then(|oid| repo.find_commit(oid.unwrap()))?;\n\n        // Create new branch if it doesn't exist\n        match repo.branch(branch_name, &amp;commit, false) {\n            // This command can fail due to an existing reference. This error should be ignored.\n            Err(err)\n                if !(err.class() == git2::ErrorClass::Reference\n                    &amp;&amp; err.code() == git2::ErrorCode::Exists) =&gt;\n            {\n                return Err(err);\n            }\n            _ =&gt; {}\n        }\n\n        let refname = format!(\"refs/heads/{}\", branch_name);\n        let obj = repo.revparse_single(refname.as_str())?;\n\n        repo.checkout_tree(&amp;obj, None)?;\n        repo.set_head(refname.as_str())\n    }\n\n    fn add(&amp;self) -&gt; Result&lt;(), git2::Error&gt; {\n        let mut index = self.repo.as_ref().unwrap().index()?;\n\n        index.add_path(Path::new(\"README.md\"))?;\n        index.write()\n    }\n\n    fn commit(&amp;self, subject: &amp;str) -&gt; Result&lt;git2::Oid, git2::Error&gt; {\n        let repo = self.repo.as_ref().unwrap();\n        let mut index = repo.index()?;\n\n        let signature = repo.signature()?; // Use default user.name and user.email\n\n        let oid = index.write_tree()?;\n        let parent_commit = find_last_commit(self.repo.as_ref().unwrap())?;\n        let tree = repo.find_tree(oid)?;\n\n        repo.commit(\n            Some(\"HEAD\"),      // point HEAD to our new commit\n            &amp;signature,        // author\n            &amp;signature,        // committer\n            subject,           // commit message\n            &amp;tree,             // tree\n            &amp;[&amp;parent_commit], // parent commit\n        )\n    }\n\n    fn push(&amp;self, branch_name: &amp;str) -&gt; Result&lt;(), git2::Error&gt; {\n        with_credentials(self.repo.as_ref().unwrap(), |cred_callback| {\n            let mut remote = self.repo.as_ref().unwrap().find_remote(\"origin\")?;\n\n            let mut callbacks = git2::RemoteCallbacks::new();\n            let mut options = git2::PushOptions::new();\n\n            callbacks.credentials(cred_callback);\n            options.remote_callbacks(callbacks);\n\n            remote.push(\n                &amp;[format!(\n                    \"refs/heads/{}:refs/heads/{}\",\n                    branch_name, branch_name\n                )],\n                Some(&amp;mut options),\n            )?;\n\n            Ok(())\n        })\n    }\n}\n\nfn find_last_commit(repo: &amp;git2::Repository) -&gt; Result&lt;git2::Commit, git2::Error&gt; {\n    let obj = repo.head()?.resolve()?.peel(git2::ObjectType::Commit)?;\n    obj.into_commit()\n        .map_err(|_| git2::Error::from_str(\"Couldn't find commit\"))\n}\n\n/// Helper to run git operations that require authentication.\n///\n/// This is inspired by [the way Cargo handles this][cargo-impl].\n///\n/// [cargo-impl]: https://github.com/rust-lang/cargo/blob/94bf4781d0bbd266abe966c6fe1512bb1725d368/src/cargo/sources/git/utils.rs#L437\nfn with_credentials&lt;F&gt;(repo: &amp;git2::Repository, mut f: F) -&gt; Result&lt;(), git2::Error&gt;\nwhere\n    F: FnMut(&amp;mut git2::Credentials) -&gt; Result&lt;(), git2::Error&gt;,\n{\n    let config = repo.config()?;\n\n    let mut tried_sshkey = false;\n    let mut tried_cred_helper = false;\n    let mut tried_default = false;\n\n    f(&amp;mut |url, username, allowed| {\n        if allowed.contains(git2::CredentialType::USERNAME) {\n            return Err(git2::Error::from_str(\"No username specified in remote URL\"));\n        }\n\n        if allowed.contains(git2::CredentialType::SSH_KEY) &amp;&amp; !tried_sshkey {\n            tried_sshkey = true;\n            let username = username.unwrap();\n            return git2::Cred::ssh_key_from_agent(username);\n        }\n\n        if allowed.contains(git2::CredentialType::USER_PASS_PLAINTEXT) &amp;&amp; !tried_cred_helper {\n            tried_cred_helper = true;\n            return git2::Cred::credential_helper(&amp;config, url, username);\n        }\n\n        if allowed.contains(git2::CredentialType::DEFAULT) &amp;&amp; !tried_default {\n            tried_default = true;\n            return git2::Cred::default();\n        }\n\n        Err(git2::Error::from_str(\"No authentication method succeeded\"))\n    })\n}\n\n#[allow(non_snake_case)]\n#[cfg(test)]\nmod tests {\n    use crate::git::{find_last_commit, Git, GitManagement};\n    use git2::{BranchType, Repository, RepositoryInitOptions, Status};\n    use tempfile::{NamedTempFile, TempDir};\n\n    #[test]\n    fn test_git__init__valid_repo() {\n        let mut git = Git::default();\n        // Valid repo\n        let (dir, _repo, _file) = repo_init();\n\n        let actual = git.init(dir.path().to_str().unwrap());\n\n        assert!(actual.is_ok());\n    }\n\n    #[test]\n    fn test_git__init__invalid_repo() {\n        let mut git = Git::default();\n        // Invalid repo\n        let dir = TempDir::new().unwrap();\n\n        let actual = git.init(dir.path().to_str().unwrap());\n\n        assert!(actual.is_err());\n    }\n\n    #[test]\n    fn test_git__checkout_branch__missing_branch() {\n        let mut git = Git::default();\n        let (dir, repo, _file) = repo_init();\n        git.init(dir.path().to_str().unwrap()).unwrap();\n\n        // This will create a new branch\n        git.checkout_branch(\"new-branch-name\").unwrap();\n\n        let actual = repo.find_branch(\"new-branch-name\", BranchType::Local);\n\n        assert!(actual.is_ok());\n    }\n\n    #[test]\n    fn test_git__checkout_branch__success() {\n        let mut git = Git::default();\n        let (dir, repo, _file) = repo_init();\n        git.init(dir.path().to_str().unwrap()).unwrap();\n\n        let before = repo.head();\n        assert_eq!(before.unwrap().name().unwrap(), \"refs/heads/main\");\n\n        git.checkout_branch(\"new-branch-name\").unwrap();\n\n        let after = repo.head();\n\n        assert!(after.is_ok());\n        assert_eq!(after.unwrap().name().unwrap(), \"refs/heads/new-branch-name\");\n    }\n\n    #[test]\n    fn test_git__add__success() {\n        let mut git = Git::default();\n        let (dir, repo, _file) = repo_init();\n        git.init(dir.path().to_str().unwrap()).unwrap();\n\n        let statuses_before = repo.statuses(None).unwrap();\n        let before = statuses_before.get(0).unwrap();\n        assert_eq!(before.status(), Status::WT_NEW);\n\n        git.add().unwrap();\n\n        let statuses_after = repo.statuses(None).unwrap();\n        let after = statuses_after.get(0).unwrap();\n        assert_eq!(after.status(), Status::INDEX_NEW);\n    }\n\n    #[test]\n    fn test_git__commit__success() {\n        let mut git = Git::default();\n        let (dir, _repo, _file) = repo_init();\n        git.init(dir.path().to_str().unwrap()).unwrap();\n\n        // Initial commit\n        let before = find_last_commit(git.repo.as_ref().unwrap());\n        assert_eq!(before.unwrap().summary().unwrap(), \"initial-msg\");\n\n        git.add().unwrap();\n        git.commit(\"some-subject\").unwrap();\n\n        let after = find_last_commit(git.repo.as_ref().unwrap());\n        assert_eq!(after.unwrap().summary().unwrap(), \"some-subject\");\n    }\n\n    fn repo_init() -&gt; (TempDir, Repository, NamedTempFile) {\n        let td = TempDir::new().unwrap();\n        let mut opts = RepositoryInitOptions::new();\n        opts.initial_head(\"main\");\n        let repo = Repository::init_opts(td.path(), &amp;opts).unwrap();\n\n        // Create README.md file\n        let file = tempfile::Builder::new()\n            .prefix(\"README\")\n            .suffix(\".md\")\n            .rand_bytes(0)\n            .tempfile_in(td.path())\n            .unwrap();\n        {\n            // Set basic config\n            let mut config = repo.config().unwrap();\n            config.set_str(\"user.name\", \"some-name\").unwrap();\n            config.set_str(\"user.email\", \"some-email\").unwrap();\n\n            // Make initial commit\n            let mut index = repo.index().unwrap();\n            let id = index.write_tree().unwrap();\n            let tree = repo.find_tree(id).unwrap();\n            let sig = repo.signature().unwrap();\n            repo.commit(Some(\"HEAD\"), &amp;sig, &amp;sig, \"initial-msg\", &amp;tree, &amp;[])\n                .unwrap();\n        }\n        // Return file to not drop it and make it disappear\n        (td, repo, file)\n    }\n}\n</code></pre>"},{"location":"rust/tep/html/","title":"HTML","text":""},{"location":"rust/tep/html/#lay-cac-noi-dung-tu-cac-selector","title":"L\u1ea5y c\u00e1c n\u1ed9i dung t\u1eeb c\u00e1c Selector","text":"<pre><code>pub fn fetcher(\n    base_url: String,\n    id: &amp;str,\n    list_selector: &amp;str,\n    item_selector: &amp;str,\n    element: &amp;str\n) -&gt; Vec&lt;String&gt; {\n    let given_url = base_url + id;\n    let body = http::get_body_from_url(&amp;given_url).unwrap();\n    let document = Html::parse_document(&amp;body);\n    // Logging\n    println!(\"\u0110ang t\u1ea3i ch\u01b0\u01a1ng truy\u1ec7n v\u1edbi URL l\u00e0: {}\", &amp;given_url);\n    // Selector\n    let list = Selector::parse(list_selector).unwrap();\n    let item = Selector::parse(item_selector).unwrap();\n    let body = Selector::parse(\"body\").unwrap();\n\n    let content_matcher = match document.select(&amp;list).next() {\n        Some(doc) =&gt; {\n            doc.select(&amp;item)\n        },\n        None =&gt; {\n            document.select(&amp;body).next().unwrap().select(&amp;item)\n        },\n    };\n\n    content_matcher.into_iter()\n    .filter_map(|f| f.value().attr(element).map(|elem| elem.to_string())).collect()\n}\n</code></pre>"},{"location":"rust/tep/html/#cai-gi-o-khong-ro","title":"C\u00e1i g\u00ec \u0111\u00f3 kh\u00f4ng r\u00f5","text":"<pre><code>/// Displays formatted html that fits a CSS selector.\npub fn display_article(\n    contents_selector: scraper::Selector,\n    title_selector: scraper::Selector,\n    request: scraper::Html,\n) {\n    let mut paragraphs = request\n        .select(&amp;contents_selector)\n        .map(|x| from_read(x.inner_html().as_bytes(), 190))\n        .collect::&lt;Vec&lt;String&gt;&gt;()\n        .join(\"\\n\");\n\n    paragraphs = filters::remove_references(paragraphs);\n    paragraphs = filters::remove_square_brackets(paragraphs);\n    paragraphs = filters::remove_links(paragraphs);\n\n    let title = request\n        .select(&amp;title_selector)\n        .map(|x| from_read(x.inner_html().as_bytes(), 50))\n        .collect::&lt;Vec&lt;String&gt;&gt;()\n        .join(\"\");\n\n    let article = ArticleDisplay {\n        title: title,\n        contents: paragraphs,\n    };\n\n    ui::ArticleDisplay::new(article).unwrap();\n}\n</code></pre>"},{"location":"rust/tep/html/#code-that-cleans-the-article-from-html-leftovers","title":"Code that cleans the article from HTML leftovers.","text":"<pre><code>use regex::Regex;\n\npub fn remove_square_brackets(text: String) -&gt; String {\n    let square_bracket_regex =\n        Regex::new(r\"[(?P&lt;link&gt;[a-zA-Z0-9\\(\\)\\-\\,[:space:]&amp;=]+)]\").unwrap();\n    square_bracket_regex.replace_all(&amp;text, \"$link\").to_string()\n}\n\npub fn remove_references(text: String) -&gt; String {\n    let reference_regex = Regex::new(r\"[+([0-9]+)]+\").unwrap();\n    reference_regex.replace_all(&amp;text, \"\").to_string()\n}\n\npub fn remove_links(text: String) -&gt; String {\n    let link_regex = Regex::new(r\": [/?/[a-zA-Z0-9-%:/(/)_.//&amp;=]+/]+\\n\").unwrap();\n    let note_regex =\n        Regex::new(r\": #cite_note-[0-9-]+\\n|: #cite_note-[a-zA-Z_-]+-[0-9-]+\\n\").unwrap();\n\n    let mut new_text = link_regex.replace_all(&amp;text, \"\").to_string();\n    new_text = note_regex.replace_all(&amp;new_text, \"\").to_string();\n\n    new_text\n}\n</code></pre>"},{"location":"rust/tep/html/#chon-cac-elements-trong-html-bang-selectrs","title":"Ch\u1ecdn c\u00e1c elements trong HTML b\u1eb1ng select.rs","text":"<pre><code>pub fn html_to_dict_term(file_path: &amp;str) -&gt; Vec&lt;DictTerm&gt; {\n    let html_content = fs::read_to_string(file_path).expect(\"Should have been able to read the file\");\n    let document = Document::from(html_content.as_str());\n\n    document.find(Name(\"idx:entry\")).map(|element| {\n        let dict_term = element.find(Name(\"idx:orth\")).next().unwrap().attr(\"value\").unwrap();\n        DictTerm {\n            term: dict_term.to_owned(),\n            definition: element.text().replace(\"\\\"\", \"-\")\n        } \n    }).collect::&lt;Vec&lt;_&gt;&gt;()\n\n}\n</code></pre>"},{"location":"rust/tep/rss/","title":"RSS","text":"<pre><code>fn main() {\n    let matches = Command::new(\"tinpub-rs\")\n        .arg(\n            Arg::new(\"source\")\n                .short('i')\n                .long(\"source\")\n                .help(\"Which source do you wanna fetch news from\")\n                .required(true),\n        )\n        .get_matches();\n\n    let feed = FeedConfig {\n        name: String::from(\"untitled\"),\n        url: config_path.clone()\n    };\n\n\n}\n\nfn handle_feed(feed: &amp;FeedConfig, client: &amp;Client) -&gt; Vec&lt;FetchedItem&gt; {\n    println!(\"Fetching {}\", feed.name);\n\n    let rss_result = fetch_rss(&amp;feed.url, client);\n    let mut src_items: Vec&lt;FetchedItem&gt; = Vec::new();\n\n    let rss_channel = match rss_result {\n        Ok(channel) =&gt; channel,\n        Err(_) =&gt; {\n            println!(\"Failed to load RSS feed\");\n            return src_items;\n        },\n    };\n\n    for item in rss_channel.into_items() {\n        let title_result = item.title();\n\n        let title = match title_result {\n            Some(title) =&gt; title,\n            None =&gt; {\n                println!(\"No title found\");\n                return src_items;\n            },\n        };\n\n        let item_url = item.link().unwrap();\n        let item_desc = item.clone().description.unwrap();\n\n        let item_content: String = match item.clone().content {\n            Some(content) =&gt; content,\n            None =&gt; String::from(\"\"),\n        };\n\n        let fetched_item = FetchedItem {\n            name: String::from(title),\n            url: String::from(item_url),\n            desc: item_desc.to_string(),\n            content: item_content.to_string()\n        };\n\n        println!(\"Fetching post: {}[{:?}]\", title, item_url);\n\n        src_items.push(fetched_item)\n\n        // if download_filter.is_match(title) {}\n    }\n    src_items\n}\n\nfn fetch_rss(url: &amp;str, client: &amp;Client) -&gt; Result&lt;Channel, Box&lt;dyn std::error::Error&gt;&gt; {\n    println!(\"Fetching URL {}\", url);\n    let response = client.get(url).send()?;\n    let status = response.status();\n    println!(\"Response status: {}\", status);\n    if status.is_success() {\n        let text = response.text()?;\n\n        let rss_result = Channel::read_from(text.as_bytes());\n        if let Ok(channel) = rss_result {\n            Ok(channel)\n        } else {\n            let error = rss_result.err().unwrap();\n            println!(\"Error parsing RSS feed: {:?}\", error);\n            Err(Box::new(error))\n        }\n    } else {\n        println!(\"Error fetching RSS feed\");\n        Err(Box::new(response.error_for_status().err().unwrap()))\n    }\n}\n</code></pre>"}]}